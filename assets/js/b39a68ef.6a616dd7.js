"use strict";(self.webpackChunkblog=self.webpackChunkblog||[]).push([["95182"],{19196:function(e,n,i){i.r(n),i.d(n,{assets:function(){return l},contentTitle:function(){return c},default:function(){return d},frontMatter:function(){return o},metadata:function(){return r},toc:function(){return s}});var r=i(45220),t=i(85893),a=i(50065);let o={slug:"opencv-imread",title:"\u7528 Python \u8B80\u53D6 HEIC \u5716\u6A94",authors:"Zephyr",tags:["HEIC","TurboJPEG"],image:"/img/2024/0213.webp",description:"\u4F86\u512A\u5316\u4E00\u4E0B OpenCV imread \u5427\uFF01"},c=void 0,l={authorsImageUrls:[void 0]},s=[{value:"\u57FA\u790E\u7528\u6CD5",id:"\u57FA\u790E\u7528\u6CD5",level:2},{value:"\u9650\u5236\u4E00\uFF1AHEIC \u683C\u5F0F",id:"\u9650\u5236\u4E00heic-\u683C\u5F0F",level:2},{value:"\u9650\u5236\u4E8C\uFF1AJPG \u8B80\u53D6\u6162",id:"\u9650\u5236\u4E8Cjpg-\u8B80\u53D6\u6162",level:2},{value:"\u7D50\u8A9E",id:"\u7D50\u8A9E",level:2}];function p(e){let n={a:"a",code:"code",h2:"h2",p:"p",pre:"pre",...(0,a.a)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsxs)(n.p,{children:["\u7576\u4F60\u60F3\u8981\u8B80\u53D6\u4E00\u5F35\u5F71\u50CF\u6642\uFF0C\u4F60\u53EF\u80FD\u6703\u4F7F\u7528 OpenCV \u7684 ",(0,t.jsx)(n.code,{children:"imread"})," \u51FD\u6578\u3002"]}),"\n",(0,t.jsx)(n.p,{children:"\u53EF\u60DC\u9019\u500B\u51FD\u6578\u4E26\u4E0D\u662F\u842C\u80FD\u7684\uFF0C\u6709\u6642\u5019\u53EF\u80FD\u6703\u9047\u5230\u4E00\u4E9B\u554F\u984C\u3002"}),"\n",(0,t.jsx)(n.h2,{id:"\u57FA\u790E\u7528\u6CD5",children:"\u57FA\u790E\u7528\u6CD5"}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.code,{children:"imread"})," \u51FD\u6578\u7684\u57FA\u790E\u7528\u6CD5\u975E\u5E38\u7C21\u55AE\uFF0C\u4F60\u53EA\u9700\u8981\u50B3\u5165\u5F71\u50CF\u7684\u8DEF\u5F91\u5373\u53EF\uFF1A"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-python",children:"import cv2\n\nimage = cv2.imread('path/to/image.jpg')\n"})}),"\n",(0,t.jsx)(n.p,{children:"\u5176\u4E2D\uFF0C\u4F60\u53EF\u4EE5\u4F7F\u7528\u7684\u5F71\u50CF\u683C\u5F0F\u5305\u62EC\uFF1ABMP, JPG, PNG, TIF \u7B49\u5E38\u898B\u5F71\u50CF\u683C\u5F0F\u3002"}),"\n",(0,t.jsx)(n.h2,{id:"\u9650\u5236\u4E00heic-\u683C\u5F0F",children:"\u9650\u5236\u4E00\uFF1AHEIC \u683C\u5F0F"}),"\n",(0,t.jsxs)(n.p,{children:["\u5728 iOS \u88DD\u7F6E\u4E0A\u62CD\u651D\u7684\u7167\u7247\u901A\u5E38\u662F HEIC \u683C\u5F0F\uFF0C\u9019\u7A2E\u683C\u5F0F\u5728 OpenCV \u4E2D\u662F\u4E0D\u652F\u63F4\u7684\u3002\u5982\u679C\u4F60\u5617\u8A66\u4F7F\u7528 ",(0,t.jsx)(n.code,{children:"imread"})," \u51FD\u6578\u8B80\u53D6 HEIC \u683C\u5F0F\u7684\u5F71\u50CF\uFF0C\u4F60\u6703\u5F97\u5230\u4E00\u500B ",(0,t.jsx)(n.code,{children:"None"})," \u7684\u8FD4\u56DE\u503C\u3002"]}),"\n",(0,t.jsxs)(n.p,{children:["\u70BA\u4E86\u89E3\u6C7A\u9019\u500B\u554F\u984C\uFF0C\u6211\u5011\u5F97\u7528 pyheif \u9019\u500B\u5957\u4EF6\u4F86\u8B80\u53D6 HEIC \u683C\u5F0F\u7684\u5F71\u50CF\uFF0C\u7136\u5F8C\u518D\u5C07\u5176\u8F49\u63DB\u6210 ",(0,t.jsx)(n.code,{children:"numpy.ndarray"})," \u985E\u578B\u7684\u8B8A\u6578\u3002"]}),"\n",(0,t.jsx)(n.p,{children:"\u9996\u5148\uFF0C\u6211\u5011\u5B89\u88DD\u5FC5\u8981\u5957\u4EF6\uFF1A"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"sudo apt install libheif-dev\npip install pyheif\n"})}),"\n",(0,t.jsx)(n.p,{children:"\u63A5\u8457\u5BEB\u500B\u7C21\u55AE\u7684\u51FD\u6578\uFF1A"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-python",children:'import cv2\nimport pyheif\nimport numpy as np\n\ndef read_heic_to_numpy(file_path: str):\n    heif_file = pyheif.read(file_path)\n    data = heif_file.data\n    if heif_file.mode == "RGB":\n        numpy_array = np.frombuffer(data, dtype=np.uint8).reshape(\n            heif_file.size[1], heif_file.size[0], 3)\n    elif heif_file.mode == "RGBA":\n        numpy_array = np.frombuffer(data, dtype=np.uint8).reshape(\n            heif_file.size[1], heif_file.size[0], 4)\n    else:\n        raise ValueError("Unsupported HEIC color mode")\n    return numpy_array\n\n\nimg = read_heic_to_numpy(\'path/to/image.heic\')\nimg = cv2.cvtColor(img, cv2.COLOR_RGB2BGR)\n'})}),"\n",(0,t.jsx)(n.h2,{id:"\u9650\u5236\u4E8Cjpg-\u8B80\u53D6\u6162",children:"\u9650\u5236\u4E8C\uFF1AJPG \u8B80\u53D6\u6162"}),"\n",(0,t.jsxs)(n.p,{children:["\u5728\u67D0\u4E9B\u60C5\u6CC1\u4E0B\uFF0C",(0,t.jsx)(n.code,{children:"imread"})," \u51FD\u6578\u8B80\u53D6 JPG \u683C\u5F0F\u7684\u5F71\u50CF\u901F\u5EA6\u6703\u975E\u5E38\u6162\u3002\u9019\u662F\u56E0\u70BA OpenCV \u5728\u8B80\u53D6 JPG \u683C\u5F0F\u7684\u5F71\u50CF\u6642\uFF0C\u6703\u4F7F\u7528 libjpeg \u9019\u500B\u5EAB\uFF0C\u800C libjpeg \u672C\u8EAB\u7684\u6548\u80FD\u5C31\u4E0D\u662F\u5F88\u597D\u3002"]}),"\n",(0,t.jsx)(n.p,{children:"\u5728\u9019\u908A\uFF0C\u6211\u5011\u5F15\u5165 TurboJPEG \u9019\u500B\u5957\u4EF6\uFF0C\u5B83\u662F libjpeg \u7684\u4E00\u500B\u66FF\u4EE3\u54C1\uFF0C\u6548\u80FD\u66F4\u597D\u3002\u6211\u5011\u53EF\u4EE5\u4F7F\u7528 TurboJPEG \u4F86\u52A0\u901F\u8B80\u53D6 JPG \u683C\u5F0F\u7684\u5F71\u50CF\u3002"}),"\n",(0,t.jsx)(n.p,{children:"\u8DDF\u4E4B\u524D\u4E00\u6A23\uFF0C\u6211\u5011\u5148\u5B89\u88DD\u5FC5\u8981\u5957\u4EF6\uFF1A"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"sudo apt install libturbojpeg exiftool\npip install PyTurboJPEG\n"})}),"\n",(0,t.jsx)(n.p,{children:"\u518D\u4F86\u6211\u5011\u5BEB\u4E00\u9EDE\u7A0B\u5F0F\uFF0C\u5E6B\u4ED6\u52A0\u901F\u4E00\u4E0B\uFF1A"}),"\n",(0,t.jsx)(n.p,{children:"\u4E00\u822C\u4F86\u8AAA\uFF0C\u53EF\u4EE5\u52A0\u901F\u5927\u7D04 2-3 \u500D\u3002"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-python",children:"import cv2\nimport piexif\nfrom enum import IntEnum\nfrom pathlib import Path\nfrom turbojpeg import TurboJPEG\n\n\njpeg = TurboJPEG()\n\n\nclass ROTATE(IntEnum):\n    ROTATE_90 = cv2.ROTATE_90_CLOCKWISE\n    ROTATE_180 = cv2.ROTATE_180\n    ROTATE_270 = cv2.ROTATE_90_COUNTERCLOCKWISE\n\n\ndef imrotate90(img, rotate_code: ROTATE) -> np.ndarray:\n    return cv2.rotate(img.copy(), rotate_code)\n\n\ndef get_orientation_code(stream: Union[str, Path, bytes]):\n    code = None\n    try:\n        exif_dict = piexif.load(stream)\n        if piexif.ImageIFD.Orientation in exif_dict[\"0th\"]:\n            orientation = exif_dict[\"0th\"][piexif.ImageIFD.Orientation]\n            if orientation == 3:\n                code = ROTATE.ROTATE_180\n            elif orientation == 6:\n                code = ROTATE.ROTATE_90\n            elif orientation == 8:\n                code = ROTATE.ROTATE_270\n    finally:\n        return code\n\n\ndef jpgdecode(byte_: bytes) -> Union[np.ndarray, None]:\n    try:\n        bgr_array = jpeg.decode(byte_)\n        code = get_orientation_code(byte_)\n        bgr_array = imrotate90(\n            bgr_array, code) if code is not None else bgr_array\n    except:\n        bgr_array = None\n\n    return bgr_array\n\n\ndef jpgread(img_file: Union[str, Path]) -> Union[np.ndarray, None]:\n    with open(str(img_file), 'rb') as f:\n        binary_img = f.read()\n        bgr_array = jpgdecode(binary_img)\n\n    return bgr_array\n\nimg = jpgread('path/to/image.jpg')\n"})}),"\n",(0,t.jsx)(n.p,{children:"\u9019\u6A23\u5C31\u53EF\u4EE5\u52A0\u901F\u8B80\u53D6 JPG \u683C\u5F0F\u7684\u5F71\u50CF\u4E86\u3002"}),"\n",(0,t.jsx)(n.h2,{id:"\u7D50\u8A9E",children:"\u7D50\u8A9E"}),"\n",(0,t.jsx)(n.p,{children:"\u90A3\u5982\u679C\u6211\u5011\u5E0C\u671B\u9019\u500B\u7A0B\u5F0F\u53EF\u4EE5\u8070\u660E\u4E00\u9EDE\uFF0C\u81EA\u5DF1\u9078\u4E00\u500B\u9069\u5408\u8F09\u5165\u7684\u65B9\u5F0F\u5462\uFF1F"}),"\n",(0,t.jsx)(n.p,{children:"\u6211\u5011\u53EF\u4EE5\u5BEB\u4E00\u500B\u51FD\u6578\uFF0C\u6839\u64DA\u5F71\u50CF\u7684\u683C\u5F0F\u4F86\u9078\u64C7\u5408\u9069\u7684\u8F09\u5165\u65B9\u5F0F\uFF1A"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-python",children:"def imread(\n    path: Union[str, Path],\n    color_base: str = 'BGR',\n    verbose: bool = False\n) -> Union[np.ndarray, None]:\n\n    if not Path(path).exists():\n        raise FileExistsError(f'{path} can not found.')\n\n    if Path(path).suffix.lower() == '.heic':\n        img = read_heic_to_numpy(str(path))\n        img = cv2.cvtColor(img, cv2.COLOR_RGB2BGR)\n    else:\n        img = jpgread(path)\n        img = cv2.imread(str(path)) if img is None else img\n\n    if img is None:\n        if verbose:\n            warnings.warn(\"Got a None type image.\")\n        return\n\n    if color_base != 'BGR':\n        img = imcvtcolor(img, cvt_mode=f'BGR2{color_base}')\n\n    return img\n"})}),"\n",(0,t.jsxs)(n.p,{children:["\u8A73\u7D30\u7A0B\u5F0F\u78BC\u53EF\u4EE5\u53C3\u8003\uFF1A",(0,t.jsx)(n.a,{href:"https://github.com/DocsaidLab/DocsaidKit/blob/eb8ac0a56779a75dcc951c683001e6129052cc5a/docsaidkit/vision/improc.py#L197",children:"imread.py"})]})]})}function d(e={}){let{wrapper:n}={...(0,a.a)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(p,{...e})}):p(e)}},50065:function(e,n,i){i.d(n,{Z:function(){return c},a:function(){return o}});var r=i(67294);let t={},a=r.createContext(t);function o(e){let n=r.useContext(a);return r.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:o(e.components),r.createElement(a.Provider,{value:n},e.children)}},45220:function(e){e.exports=JSON.parse('{"permalink":"/blog/opencv-imread","source":"@site/blog/2024/02-13-imread/index.md","title":"\u7528 Python \u8B80\u53D6 HEIC \u5716\u6A94","description":"\u4F86\u512A\u5316\u4E00\u4E0B OpenCV imread \u5427\uFF01","date":"2024-02-13T00:00:00.000Z","tags":[{"inline":true,"label":"HEIC","permalink":"/blog/tags/heic"},{"inline":true,"label":"TurboJPEG","permalink":"/blog/tags/turbo-jpeg"}],"readingTime":3.755,"hasTruncateMarker":true,"authors":[{"name":"Zephyr","title":"Engineer","url":"https://github.com/zephyr-sh","imageURL":"https://github.com/zephyr-sh.png","key":"Zephyr","page":null}],"frontMatter":{"slug":"opencv-imread","title":"\u7528 Python \u8B80\u53D6 HEIC \u5716\u6A94","authors":"Zephyr","tags":["HEIC","TurboJPEG"],"image":"/img/2024/0213.webp","description":"\u4F86\u512A\u5316\u4E00\u4E0B OpenCV imread \u5427\uFF01"},"unlisted":false,"prevItem":{"title":"\u4F7F\u7528 Python \u628A PDF \u8F49\u5716\u7247","permalink":"/blog/convert-pdf-to-images"},"nextItem":{"title":"\u65E5\u5E38\u932F\u8AA4\u6392\u9664\u7D00\u9304","permalink":"/blog/error-record"}}')}}]);