"use strict";(self.webpackChunkdocsaid_website=self.webpackChunkdocsaid_website||[]).push([["67641"],{41078:function(n,e,i){i.r(e),i.d(e,{assets:function(){return l},contentTitle:function(){return s},default:function(){return h},frontMatter:function(){return r},metadata:function(){return t},toc:function(){return c}});var t=i(4874),a=i(85893),o=i(50065);let r={slug:"extract-font-info-by-python",title:"\u53D6\u5F97\u5B57\u578B\u6A94\u6848\u7684\u8CC7\u8A0A",authors:"Z. Yuan",image:"/img/2024/1226.webp",tags:["font-tools","Python"],description:"\u900F\u904E Python \u53D6\u5F97\u5B57\u578B\u6A94\u6848\u7684\u8CC7\u8A0A\u3002"},s=void 0,l={authorsImageUrls:[void 0]},c=[{value:"\u5B89\u88DD <code>fontTools</code>",id:"\u5B89\u88DD-fonttools",level:2},{value:"\u5BE6\u4F5C\u91CD\u9EDE",id:"\u5BE6\u4F5C\u91CD\u9EDE",level:2},{value:"\u7A0B\u5F0F\u78BC",id:"\u7A0B\u5F0F\u78BC",level:2},{value:"\u8F38\u51FA\u7D50\u679C\u793A\u7BC4",id:"\u8F38\u51FA\u7D50\u679C\u793A\u7BC4",level:2},{value:"\u53C3\u8003\u8CC7\u6599",id:"\u53C3\u8003\u8CC7\u6599",level:2}];function d(n){let e={a:"a",admonition:"admonition",code:"code",h2:"h2",hr:"hr",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,o.a)(),...n.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(e.p,{children:"\u96D6\u7136\u6211\u5011\u7D93\u5E38\u5728\u4F7F\u7528\u5404\u7A2E\u5B57\u578B\uFF0C\u4F46\u6BCF\u6B21\u90FD\u6703\u5361\u5728\u53D6\u5F97\u5B57\u578B\u53C3\u6578\u7684\u74B0\u7BC0\u3002"}),"\n",(0,a.jsx)(e.p,{children:"\u7528\u5B8C\u5C31\u5FD8\u8A18\uFF0C\u4E0B\u6B21\u518D\u91CD\u65B0\u67E5\u4E00\u6B21\uFF1F"}),"\n",(0,a.jsx)(e.p,{children:"\u9019\u6A23\u986F\u5F97\u6211\u5011\u4E0D\u5920\u5C08\u696D\uFF0C\u5FC5\u9808\u5BEB\u9EDE\u7A0B\u5F0F\u4F86\u89E3\u6C7A\u554F\u984C\u3002"}),"\n",(0,a.jsxs)(e.h2,{id:"\u5B89\u88DD-fonttools",children:["\u5B89\u88DD ",(0,a.jsx)(e.code,{children:"fontTools"})]}),"\n",(0,a.jsxs)(e.p,{children:["\u6211\u5011\u4F7F\u7528 ",(0,a.jsx)(e.code,{children:"fontTools"})," \u4F86\u53D6\u5F97\u5B57\u578B\u76F8\u95DC\u8CC7\u8A0A\uFF0C\u9019\u662F\u4E00\u500B\u5728 Python \u793E\u7FA4\u5EE3\u53D7\u597D\u8A55\u7684\u8655\u7406\u5B57\u578B\u6A94\u6848\u5957\u4EF6\uFF0C\u6211\u5011\u53EF\u4EE5\u900F\u904E\u4ED6\u4F86\u64CD\u4F5C\u4E26\u89E3\u6790\u5404\u5F0F TTF\u3001OTF \u6A94\u6848\u3002"]}),"\n",(0,a.jsxs)(e.p,{children:["\u9996\u5148\uFF0C\u4F7F\u7528\u4EE5\u4E0B\u6307\u4EE4\u5B89\u88DD ",(0,a.jsx)(e.code,{children:"fontTools"}),"\uFF1A"]}),"\n",(0,a.jsx)(e.pre,{children:(0,a.jsx)(e.code,{className:"language-bash",children:"pip install fonttools\n"})}),"\n",(0,a.jsx)(e.admonition,{type:"info",children:(0,a.jsxs)(e.p,{children:["\u5982\u679C\u4F60\u5C0D ",(0,a.jsx)(e.code,{children:"fontTools"})," \u6709\u8208\u8DA3\uFF0C\u53EF\u4EE5\u53C3\u8003\u4ED6\u5011\u7684\u5C08\u6848\uFF1A",(0,a.jsx)(e.a,{href:"https://github.com/fonttools/fonttools",children:(0,a.jsx)(e.strong,{children:"fontTools-github"})})]})}),"\n",(0,a.jsx)(e.p,{children:"\u5B89\u88DD\u5B8C\u6210\u5F8C\uFF0C\u5C31\u80FD\u57F7\u884C\u7A0B\u5F0F\u4E86\u3002"}),"\n",(0,a.jsx)(e.h2,{id:"\u5BE6\u4F5C\u91CD\u9EDE",children:"\u5BE6\u4F5C\u91CD\u9EDE"}),"\n",(0,a.jsx)(e.p,{children:"\u5728\u958B\u59CB\u4F7F\u7528\u7A0B\u5F0F\u78BC\u4E4B\u524D\uFF0C\u5148\u770B\u4E00\u4E0B\u6211\u5011\u7684\u5BE6\u4F5C\u91CD\u9EDE\uFF1A"}),"\n",(0,a.jsxs)(e.ol,{children:["\n",(0,a.jsxs)(e.li,{children:["\n",(0,a.jsx)(e.p,{children:(0,a.jsxs)(e.strong,{children:["\u79FB\u9664\u5B57\u4E32\u4E2D\u4E0D\u9700\u8981\u7684\u63A7\u5236\u5B57\u5143 (",(0,a.jsx)(e.code,{children:"remove_control_characters"}),")"]})}),"\n",(0,a.jsxs)(e.p,{children:["\u9019\u500B\u51FD\u6578\u7528\u4F86\u6E05\u7406\u5B57\u4E32\u4E2D\u7684\u63A7\u5236\u5B57\u5143\u6216\u4E0D\u53EF\u898B\u5B57\u5143\uFF0C\u9019\u4E9B\u5B57\u5143\u53EF\u80FD\u6703\u5E72\u64FE\u5F8C\u7E8C\u7684\u8655\u7406\uFF0C\u56E0\u6B64\u6211\u5011\u9700\u8981\u5148\u5C07\u4ED6\u5011\u79FB\u9664\u3002\u6B64\u5916\uFF0C\u6709\u4E9B\u5B57\u5143\u662F\u591A\u500B Unicode \u7D44\u5408\u800C\u6210\uFF0C\u6211\u5011\u6709\u5F15\u5165 ",(0,a.jsx)(e.code,{children:"unicodedata"})," \u5957\u4EF6\uFF0C\u9032\u884C\u5B57\u4E32\u7684\u6A19\u6E96\u5316\u8655\u7406\uFF0C\u5C07\u9019\u4E9B\u7D44\u5408\u5B57\u5143\u8F49\u63DB\u6210\u55AE\u4E00\u5B57\u5143\uFF0C\u78BA\u4FDD\u5B57\u4E32\u7684\u4E00\u81F4\u6027\u3002"]}),"\n",(0,a.jsx)(e.admonition,{type:"tip",children:(0,a.jsxs)(e.p,{children:["\u5982\u679C\u4F60\u4E0D\u9700\u8981\u9019\u500B\u529F\u80FD\uFF0C\u53EF\u4EE5\u5C07 ",(0,a.jsx)(e.code,{children:"normalize"})," \u8A2D\u70BA ",(0,a.jsx)(e.code,{children:"False"}),"\u3002"]})}),"\n"]}),"\n",(0,a.jsxs)(e.li,{children:["\n",(0,a.jsx)(e.p,{children:(0,a.jsxs)(e.strong,{children:["\u63D0\u53D6\u5B57\u578B\u8CC7\u8A0A (",(0,a.jsx)(e.code,{children:"extract_font_info"}),")"]})}),"\n",(0,a.jsx)(e.p,{children:"\u5F9E\u5B57\u578B\u4E2D\u53D6\u5F97\u5404\u7A2E\u8CC7\u8A0A\uFF0C\u4E26\u9032\u884C\u5F59\u6574\uFF0C\u8F38\u51FA\u6210\u6613\u65BC\u95B1\u8B80\u7684\u7D50\u69CB\u5316\u5B57\u5178\uFF0C\u5176\u4E2D\u542B\u6709\u975E\u5E38\u591A\u7684\u9375\u503C\uFF0C\u8AAA\u660E\u5982\u4E0B\uFF1A"}),"\n",(0,a.jsxs)(e.ul,{children:["\n",(0,a.jsxs)(e.li,{children:[(0,a.jsx)(e.code,{children:"fileName"}),": \u5B57\u578B\u6A94\u5728\u7CFB\u7D71\u4E2D\u7684\u8DEF\u5F91\u3002"]}),"\n",(0,a.jsxs)(e.li,{children:[(0,a.jsx)(e.code,{children:"tables"}),": \u5217\u51FA\u5B57\u578B\u6A94\u6848\u4E2D\u53EF\u7528\u7684\u6240\u6709 Tables\u3002"]}),"\n",(0,a.jsxs)(e.li,{children:[(0,a.jsx)(e.code,{children:"nameTable"}),": \u4EE5 ",(0,a.jsx)(e.code,{children:"nameID"})," \u70BA\u7D22\u5F15\u7684\u539F\u59CB name table\u3002"]}),"\n",(0,a.jsxs)(e.li,{children:[(0,a.jsx)(e.code,{children:"nameTableReadable"}),": \u5C07\u5E38\u898B ",(0,a.jsx)(e.code,{children:"nameID"}),"\uFF08\u4F8B\u5982\u5B57\u578B\u5BB6\u65CF\u3001\u7248\u672C\uFF09\u6620\u5C04\u6210\u66F4\u6613\u8B80\u7684 key\u3002"]}),"\n",(0,a.jsxs)(e.li,{children:[(0,a.jsx)(e.code,{children:"cmapTable"}),": \u5C0D\u61C9\u5404\u7A2E\u7DE8\u78BC\uFF08platformID\u3001platEncID\uFF09\u8207 glyph \u540D\u7A31\u7684\u6620\u5C04\u95DC\u4FC2\u3002"]}),"\n",(0,a.jsxs)(e.li,{children:[(0,a.jsx)(e.code,{children:"headTable"}),": \u5B57\u578B\u7684\u57FA\u672C\u53C3\u6578\u8CC7\u8A0A\uFF0C\u4F8B\u5982 ",(0,a.jsx)(e.code,{children:"unitsPerEm"}),"\u3001",(0,a.jsx)(e.code,{children:"xMin"}),"\u3001",(0,a.jsx)(e.code,{children:"yMin"})," \u7B49\u3002"]}),"\n",(0,a.jsxs)(e.li,{children:[(0,a.jsx)(e.code,{children:"hheaTable"}),": \u6C34\u5E73\u6392\u7248\u8CC7\u8A0A\uFF0C\u5305\u62EC\u4E0A\u7DE3 (ascent)\u3001\u4E0B\u7DE3 (descent) \u8207\u884C\u8DDD (lineGap)\u3002"]}),"\n",(0,a.jsxs)(e.li,{children:[(0,a.jsx)(e.code,{children:"OS2Table"}),": \u5B57\u91CD (usWeightClass)\u3001\u5B57\u578B\u5BEC\u5EA6 (usWidthClass) \u4EE5\u53CA\u5D4C\u5165\u9650\u5236 (fsType) \u7B49\u3002"]}),"\n",(0,a.jsxs)(e.li,{children:[(0,a.jsx)(e.code,{children:"postTable"}),": PostScript \u76F8\u95DC\u8CC7\u8A0A\uFF0C\u5982\u662F\u5426\u70BA\u7B49\u5BEC\u5B57\u578B (isFixedPitch)\u3001\u5B57\u578B\u50BE\u659C\u89D2\u5EA6 (italicAngle)\u3002"]}),"\n",(0,a.jsxs)(e.li,{children:[(0,a.jsx)(e.code,{children:"layoutMetrics"}),": \u6574\u5408\u4E86\u591A\u500B\u8868\u683C\u5F8C\u7684\u6392\u7248\u5EA6\u91CF\u8CC7\u8A0A\uFF08\u5305\u62EC boundingBox\u3001unitsPerEm\u3001\u884C\u8DDD\u7B49\uFF09\u3002"]}),"\n",(0,a.jsxs)(e.li,{children:[(0,a.jsx)(e.code,{children:"summary"}),": \u5B57\u578B\u6982\u8981\uFF0C\u5E6B\u4F60\u5FEB\u901F\u67E5\u95B1\u5B57\u578B\u5BB6\u65CF (fontFamily)\u3001\u5B50\u5BB6\u65CF (fontSubfamily)\u3001\u7248\u672C\u8CC7\u8A0A (version)\u3001\u5B57\u91CD (weightClass) \u53CA\u662F\u5426\u70BA\u659C\u9AD4 (isItalic)\u3002"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,a.jsx)(e.hr,{}),"\n",(0,a.jsxs)(e.p,{children:["\u5176\u4E2D\u6BD4\u8F03\u91CD\u8981\u7684\u662F ",(0,a.jsx)(e.code,{children:"cmapTable"}),"\uFF0C\u9019\u500B\u8868\u683C\u5C0D\u61C9\u4E86\u5404\u7A2E\u7DE8\u78BC\u8207\u5B57\u5143\u7684\u5C0D\u61C9\u95DC\u4FC2\uFF0C\u5728\u6211\u5011\u7684\u5BE6\u4F5C\u4E2D\uFF0C\u6211\u5011\u5C07\u9019\u500B\u8868\u683C\u9032\u884C\u4E86\u66F4\u9032\u4E00\u6B65\u7684\u8655\u7406\uFF0C\u5C07\u7DE8\u78BC\u8F49\u63DB\u6210\u53EF\u8B80\u7684\u5E73\u81FA\u540D\u7A31\u548C\u7DE8\u78BC\u540D\u7A31\uFF1A"]}),"\n",(0,a.jsxs)(e.ol,{children:["\n",(0,a.jsxs)(e.li,{children:["\n",(0,a.jsx)(e.p,{children:(0,a.jsxs)(e.strong,{children:["\u5E73\u81FA\u540D\u7A31 (",(0,a.jsx)(e.code,{children:"platform_name"}),")"]})}),"\n",(0,a.jsxs)(e.p,{children:[(0,a.jsx)(e.code,{children:"platformID"})," \u662F\u7528\u4F86\u8868\u793A\u5B57\u578B\u6240\u652F\u6301\u7684\u5E73\u81FA\uFF0C\u5E38\u898B\u7684\u5E73\u81FA\u4EE3\u78BC\u5305\u62EC\uFF1A"]}),"\n",(0,a.jsxs)(e.ul,{children:["\n",(0,a.jsxs)(e.li,{children:[(0,a.jsx)(e.code,{children:"0"}),": Unicode\uFF08\u901A\u7528\u7684\u5B57\u578B\u6A19\u6E96\uFF09"]}),"\n",(0,a.jsxs)(e.li,{children:[(0,a.jsx)(e.code,{children:"1"}),": Macintosh\uFF08Mac \u7CFB\u7D71\u5C08\u7528\u5B57\u578B\uFF09"]}),"\n",(0,a.jsxs)(e.li,{children:[(0,a.jsx)(e.code,{children:"3"}),": Windows\uFF08Windows \u7CFB\u7D71\u5C08\u7528\u5B57\u578B\uFF09"]}),"\n"]}),"\n",(0,a.jsx)(e.p,{children:"\u5728\u7A0B\u5F0F\u4E2D\uFF0C\u9019\u4E9B\u4EE3\u78BC\u6703\u900F\u904E\u5B57\u5178\u8F49\u63DB\u6210\u5C0D\u61C9\u7684\u6587\u5B57\u63CF\u8FF0\uFF1A"}),"\n",(0,a.jsx)(e.pre,{children:(0,a.jsx)(e.code,{className:"language-python",children:"platform_name = {\n    0: 'Unicode',\n    1: 'Macintosh',\n    3: 'Windows'\n}.get(cmap.platformID, f\"Platform {cmap.platformID}\")\n"})}),"\n",(0,a.jsxs)(e.p,{children:["\u9019\u6BB5\u7A0B\u5F0F\u78BC\u6703\u5148\u6AA2\u67E5 ",(0,a.jsx)(e.code,{children:"platformID"})," \u662F\u5426\u5728\u5B57\u5178\u5167\uFF0C\u5982\u679C\u627E\u5230\u5C0D\u61C9\u503C\uFF0C\u5C31\u8FD4\u56DE\u540D\u7A31\uFF08\u5982 ",(0,a.jsx)(e.code,{children:"'Unicode'"}),"\uFF09\uFF1B\u82E5\u627E\u4E0D\u5230\uFF0C\u5247\u76F4\u63A5\u8FD4\u56DE ",(0,a.jsx)(e.code,{children:"Platform {cmap.platformID}"}),"\uFF0C\u7528\u4EE5\u8655\u7406\u4E0D\u5728\u5B57\u5178\u5167\u7684\u81EA\u8A02\u5E73\u81FA\u4EE3\u78BC\u3002"]}),"\n"]}),"\n",(0,a.jsxs)(e.li,{children:["\n",(0,a.jsx)(e.p,{children:(0,a.jsxs)(e.strong,{children:["\u7DE8\u78BC\u540D\u7A31 (",(0,a.jsx)(e.code,{children:"encoding_name"}),")"]})}),"\n",(0,a.jsxs)(e.p,{children:["\u5B57\u578B\u4E2D\u7684\u7DE8\u78BC\u65B9\u5F0F\u5247\u7531 ",(0,a.jsx)(e.code,{children:"platformID"})," \u548C ",(0,a.jsx)(e.code,{children:"platEncID"})," \u5171\u540C\u6C7A\u5B9A\uFF0C\u5E38\u898B\u7684\u7D44\u5408\u53CA\u5176\u542B\u7FA9\u5982\u4E0B\uFF1A"]}),"\n",(0,a.jsxs)(e.ul,{children:["\n",(0,a.jsxs)(e.li,{children:[(0,a.jsx)(e.code,{children:"(0, 0)"}),": Unicode 1.0"]}),"\n",(0,a.jsxs)(e.li,{children:[(0,a.jsx)(e.code,{children:"(0, 3)"}),": Unicode 2.0+"]}),"\n",(0,a.jsxs)(e.li,{children:[(0,a.jsx)(e.code,{children:"(0, 4)"}),": Unicode 2.0+ with BMP\uFF08\u57FA\u672C\u591A\u6587\u7A2E\u5E73\u9762\uFF09"]}),"\n",(0,a.jsxs)(e.li,{children:[(0,a.jsx)(e.code,{children:"(1, 0)"}),": Mac Roman\uFF08Macintosh \u7684\u7F85\u99AC\u5B57\u6BCD\u7DE8\u78BC\uFF09"]}),"\n",(0,a.jsxs)(e.li,{children:[(0,a.jsx)(e.code,{children:"(3, 1)"}),": Windows Unicode BMP\uFF08Windows \u7684\u57FA\u672C\u591A\u6587\u7A2E\u5E73\u9762\u7DE8\u78BC\uFF09"]}),"\n",(0,a.jsxs)(e.li,{children:[(0,a.jsx)(e.code,{children:"(3, 10)"}),": Windows Unicode Full\uFF08Windows \u7684\u5B8C\u6574 Unicode \u7DE8\u78BC\uFF09"]}),"\n"]}),"\n",(0,a.jsxs)(e.p,{children:["\u7A0B\u5F0F\u4E2D\uFF0C\u9019\u4E9B\u7D44\u5408\u88AB\u5B58\u653E\u5728\u4E00\u500B\u5D4C\u5957\u7684\u5B57\u5178\u4E2D\uFF0C\u4E26\u900F\u904E ",(0,a.jsx)(e.code,{children:"(platformID, platEncID)"})," \u7684\u5143\u7D44\u9032\u884C\u67E5\u627E\uFF1A"]}),"\n",(0,a.jsx)(e.pre,{children:(0,a.jsx)(e.code,{className:"language-python",children:"encoding_name = {\n    (0, 0): 'Unicode 1.0',\n    (0, 3): 'Unicode 2.0+',\n    (0, 4): 'Unicode 2.0+ with BMP',\n    (1, 0): 'Mac Roman',\n    (3, 1): 'Windows Unicode BMP',\n    (3, 10): 'Windows Unicode Full'\n}.get((cmap.platformID, cmap.platEncID), f\"Encoding {cmap.platEncID}\")\n"})}),"\n",(0,a.jsxs)(e.p,{children:["\u5982\u679C\u627E\u5230\u5C0D\u61C9\u7684\u7D44\u5408\uFF0C\u7A0B\u5F0F\u6703\u8FD4\u56DE\u5C0D\u61C9\u7684\u6587\u5B57\u63CF\u8FF0\uFF1B\u82E5\u7121\u6CD5\u5339\u914D\uFF0C\u5247\u8FD4\u56DE\u9810\u8A2D\u503C ",(0,a.jsx)(e.code,{children:"Encoding {cmap.platEncID}"}),"\uFF0C\u7528\u65BC\u8655\u7406\u672A\u77E5\u7684\u7DE8\u78BC\u3002"]}),"\n"]}),"\n"]}),"\n",(0,a.jsx)(e.h2,{id:"\u7A0B\u5F0F\u78BC",children:"\u7A0B\u5F0F\u78BC"}),"\n",(0,a.jsx)(e.p,{children:"\u4EE5\u4E0B\u662F\u5B8C\u6574\u7A0B\u5F0F\uFF0C\u4F60\u53EF\u4EE5\u5C07\u8F38\u51FA\u8CC7\u8A0A\u532F\u51FA\u6210 JSON \u5132\u5B58\uFF0C\u4EE5\u4FBF\u5F8C\u7E8C\u505A\u66F4\u9032\u4E00\u6B65\u7684\u5206\u6790\u6216\u8FFD\u8E64\u3002"}),"\n",(0,a.jsx)(e.pre,{children:(0,a.jsx)(e.code,{className:"language-python",children:"import re\nimport unicodedata\nfrom pathlib import Path\nfrom typing import List, Union\n\nfrom fontTools.ttLib import TTFont\n\n\ndef load_ttfont(font_path: Union[str, Path], **kwargs) -> TTFont:\n    \"\"\"Load a TrueType font file.\"\"\"\n    if isinstance(font_path, Path):\n        font_path = str(font_path)\n    return TTFont(font_path, **kwargs)\n\n\ndef remove_control_characters(text: str, normalize: bool = True) -> str:\n    \"\"\"\n    Remove control characters and invisible formatting characters from a string.\n\n    Args:\n        text (str): The input string.\n        normalize (bool): Whether to normalize the text to remove inconsistencies.\n\n    Returns:\n        str: The sanitized string with control and invisible characters removed.\n    \"\"\"\n    # Remove basic control characters (C0 and C1 control codes)\n    sanitized = re.sub(r'[\\x00-\\x1F\\x7F-\\x9F]', '', text)\n\n    # Remove specific Unicode control and invisible formatting characters\n    sanitized = re.sub(\n        r'[\\u200B-\\u200F\\u2028-\\u202F\\u2060-\\u206F]', '', sanitized)\n\n    # Remove directional formatting characters (optional, adjust if needed)\n    sanitized = re.sub(r'[\\u202A-\\u202E]', '', sanitized)\n\n    # Optionally, normalize the text to remove any leftover inconsistencies\n    if normalize:\n        sanitized = unicodedata.normalize('NFKC', sanitized)\n\n    return sanitized\n\n\ndef extract_font_info(\n    font_path: Union[str, Path],\n    normalize: bool = True\n) -> dict:\n    \"\"\"Extract detailed metadata and structural information from a font file.\n\n    Args:\n        font_path (Union[str, Path]): Path to the font file.\n\n    Returns:\n        dict: A dictionary containing font metadata and tables, including:\n\n            - fileName (str): Path to the font file.\n            - tables (list): List of available tables in the font.\n            - nameTable (dict): Raw name table values, keyed by nameID.\n            - nameTableReadable (dict): Readable name table with keys:\n                * copyright (str): Copyright information.\n                * fontFamily (str): Font family name.\n                * fontSubfamily (str): Font subfamily name.\n                * uniqueID (str): Unique identifier for the font.\n                * fullName (str): Full font name.\n                * version (str): Font version string.\n                * postScriptName (str): PostScript name.\n            - cmapTable (dict): Character-to-glyph mappings, keyed by encoding.\n            - cmapTableIndex (list): List of encoding descriptions.\n            - headTable (dict): Font header table with keys:\n                * unitsPerEm (int): Units per em.\n                * xMin (int): Minimum x-coordinate of the glyph bounding box.\n                * yMin (int): Minimum y-coordinate of the glyph bounding box.\n                * xMax (int): Maximum x-coordinate of the glyph bounding box.\n                * yMax (int): Maximum y-coordinate of the glyph bounding box.\n            - hheaTable (dict): Horizontal header table with keys:\n                * ascent (int): Typographic ascent.\n                * descent (int): Typographic descent.\n                * lineGap (int): Line gap.\n            - OS2Table (dict): OS/2 table with keys:\n                * usWeightClass (int): Weight class.\n                * usWidthClass (int): Width class.\n                * fsType (int): Embedding restrictions.\n            - postTable (dict): PostScript table with keys:\n                * isFixedPitch (bool): Whether the font is monospaced.\n                * italicAngle (float): Italic angle of the font.\n            - layoutMetrics (dict): Font layout metrics with keys:\n                * unitsPerEm (int): Units per em.\n                * boundingBox (dict): Bounding box coordinates:\n                    - xMin (int): Minimum x-coordinate.\n                    - yMin (int): Minimum y-coordinate.\n                    - xMax (int): Maximum x-coordinate.\n                    - yMax (int): Maximum y-coordinate.\n                * ascent (int): Typographic ascent.\n                * descent (int): Typographic descent.\n                * lineGap (int): Line gap.\n            - summary (dict): High-level font summary with keys:\n                * fontFamily (str): Font family name.\n                * fontSubfamily (str): Font subfamily name.\n                * version (str): Font version.\n                * weightClass (int): Weight class.\n                * isItalic (bool): Whether the font is italic.\n    \"\"\"\n\n    if isinstance(font_path, Path):\n        font_path = str(font_path)\n\n    font = TTFont(font_path)\n    font_info = {}\n\n    # File name and available tables\n    font_info['fileName'] = font_path\n    font_info['tables'] = list(font.keys())\n\n    # Parse name table\n    name_table = {}\n    for record in font['name'].names:\n        try:\n            raw_string = record.string.decode('utf-16-be').strip()\n            clean_string = remove_control_characters(raw_string, normalize)\n            name_table[record.nameID] = clean_string\n        except UnicodeDecodeError:\n            name_table[record.nameID] = remove_control_characters(\n                record.string.decode(errors='ignore'), normalize)\n    font_info['nameTable'] = name_table\n\n    # Readable name table for common nameIDs\n    name_table_readable = {\n        'copyright': name_table.get(0, ''),\n        'fontFamily': name_table.get(1, ''),\n        'fontSubfamily': name_table.get(2, ''),\n        'uniqueID': name_table.get(3, ''),\n        'fullName': name_table.get(4, ''),\n        'version': name_table.get(5, ''),\n        'postScriptName': name_table.get(6, ''),\n    }\n    font_info['nameTableReadable'] = {\n        k: remove_control_characters(v, normalize)\n        for k, v in name_table_readable.items()\n    }\n\n    # Parse cmap table\n    cmap_table = {}\n    cmap_table_index = []\n\n    for cmap in font['cmap'].tables:\n        platform_name = {\n            0: 'Unicode',\n            1: 'Macintosh',\n            3: 'Windows'\n        }.get(cmap.platformID, f\"Platform {cmap.platformID}\")\n\n        encoding_name = {\n            (0, 0): 'Unicode 1.0',\n            (0, 3): 'Unicode 2.0+',\n            (0, 4): 'Unicode 2.0+ with BMP',\n            (1, 0): 'Mac Roman',\n            (3, 1): 'Windows Unicode BMP',\n            (3, 10): 'Windows Unicode Full'\n        }.get((cmap.platformID, cmap.platEncID), f\"Encoding {cmap.platEncID}\")\n\n        cmap_entries = {}\n        for codepoint, glyph_name in cmap.cmap.items():\n            char = chr(codepoint)\n            cmap_entries[remove_control_characters(char, normalize)] = \\\n                remove_control_characters(glyph_name, normalize)\n\n        key = f\"{platform_name}, {encoding_name}\"\n        cmap_table[key] = cmap_entries\n        cmap_table_index.append(key)\n\n    font_info['cmapTable'] = cmap_table\n    font_info['cmapTableIndex'] = cmap_table_index\n\n    # Parse head table\n    head = font['head']\n    head_table = {\n        'unitsPerEm': head.unitsPerEm,\n        'xMin': head.xMin,\n        'yMin': head.yMin,\n        'xMax': head.xMax,\n        'yMax': head.yMax,\n    }\n    font_info['headTable'] = head_table\n\n    # Parse hhea table\n    hhea = font['hhea']\n    hhea_table = {\n        'ascent': hhea.ascent,\n        'descent': hhea.descent,\n        'lineGap': hhea.lineGap,\n    }\n    font_info['hheaTable'] = hhea_table\n\n    # Parse OS/2 table\n    os2 = font['OS/2']\n    os2_table = {\n        'usWeightClass': os2.usWeightClass,\n        'usWidthClass': os2.usWidthClass,\n        'fsType': os2.fsType,\n    }\n    font_info['OS2Table'] = os2_table\n\n    # Parse post table\n    post = font['post']\n    post_table = {\n        'isFixedPitch': post.isFixedPitch,\n        'italicAngle': post.italicAngle,\n    }\n    font_info['postTable'] = post_table\n\n    # Combine layout-related metrics\n    font_info['layoutMetrics'] = {\n        'unitsPerEm': head_table['unitsPerEm'],\n        'boundingBox': {\n            'xMin': head_table['xMin'],\n            'yMin': head_table['yMin'],\n            'xMax': head_table['xMax'],\n            'yMax': head_table['yMax']\n        },\n        'ascent': hhea_table['ascent'],\n        'descent': hhea_table['descent'],\n        'lineGap': hhea_table['lineGap']\n    }\n\n    # Font summary\n    font_info['summary'] = {\n        'fontFamily': name_table_readable['fontFamily'],\n        'fontSubfamily': name_table_readable['fontSubfamily'],\n        'version': name_table_readable['version'],\n        'weightClass': os2.usWeightClass,\n        'isItalic': post_table['italicAngle'] != 0\n    }\n\n    return font_info\n"})}),"\n",(0,a.jsx)(e.h2,{id:"\u8F38\u51FA\u7D50\u679C\u793A\u7BC4",children:"\u8F38\u51FA\u7D50\u679C\u793A\u7BC4"}),"\n",(0,a.jsxs)(e.p,{children:["\u6211\u5011\u4EE5 ",(0,a.jsx)(e.code,{children:"OcrB-Regular.ttf"})," \u9019\u500B\u5B57\u578B\u6A94\u6848\u70BA\u4F8B\uFF0C\u5148\u547C\u53EB\u51FD\u6578\uFF0C\u7136\u5F8C\u8F38\u51FA\u81F3 JSON \u6A94\u6848\uFF1A"]}),"\n",(0,a.jsx)(e.pre,{children:(0,a.jsx)(e.code,{className:"language-python",children:"import json\n\nfont_infos = extract_font_info('OcrB-Regular.ttf')\njson.dump(font_infos, open('OcrB-Regular-Info.json', 'w'),\n          indent=2, ensure_ascii=False)\n"})}),"\n",(0,a.jsx)(e.p,{children:"\u8F38\u51FA\u7D50\u679C\u5982\u4E0B\uFF1A"}),"\n",(0,a.jsx)(e.pre,{children:(0,a.jsx)(e.code,{className:"language-json",children:'{\n  "fileName": "/path/to/your/folder/OcrB-Regular.ttf",\n  "tables": [\n    "GlyphOrder",\n    "head",\n    "hhea",\n    "maxp",\n    "OS/2",\n    "hmtx",\n    "hdmx",\n    "cmap",\n    "fpgm",\n    "prep",\n    "cvt ",\n    "loca",\n    "glyf",\n    "name",\n    "post"\n  ],\n  "nameTable": {\n    "0": "This is a copyrighted typeface program",\n    "1": "OcrB",\n    "2": "Regular",\n    "3": "Altsys Fontographer 3.5  OcrB Regular",\n    "4": "OcrB Regular",\n    "5": "Altsys Fontographer 3.5  4/15/93",\n    "6": "OcrB Regular"\n  },\n  "nameTableReadable": {\n    "copyright": "This is a copyrighted typeface program",\n    "fontFamily": "OcrB",\n    "fontSubfamily": "Regular",\n    "uniqueID": "Altsys Fontographer 3.5  OcrB Regular",\n    "fullName": "OcrB Regular",\n    "version": "Altsys Fontographer 3.5  4/15/93",\n    "postScriptName": "OcrB Regular"\n  },\n  "cmapTable": {\n    "Unicode, Unicode 1.0": {\n      " ": "nonbreakingspace",\n      "!": "exclam",\n      "\\"": "quotedbl",\n      "#": "numbersign",\n      "$": "dollar",\n      "%": "percent",\n      "&": "ampersand",\n      "\'": "quotesingle",\n      "(": "parenleft",\n      ")": "parenright",\n      "*": "asterisk",\n      "+": "plus",\n      ",": "comma",\n      "-": "hyphen",\n      ".": "period",\n      "/": "slash",\n      "0": "zero",\n      "1": "one",\n      "2": "two",\n      "3": "three",\n      "4": "four",\n      "5": "five",\n      "6": "six",\n      "7": "seven",\n      "8": "eight",\n      "9": "nine",\n      ":": "colon",\n      ";": "semicolon",\n      "<": "less",\n      "=": "equal",\n      ">": "greater",\n      "?": "question",\n      "@": "at",\n      "A": "A",\n      "B": "B",\n      "C": "C",\n      "D": "D",\n      "E": "E",\n      "F": "F",\n      "G": "G",\n      "H": "H",\n      "I": "I",\n      "J": "J",\n      "K": "K",\n      "L": "L",\n      "M": "M",\n      "N": "N",\n      "O": "O",\n      "P": "P",\n      "Q": "Q",\n      "R": "R",\n      "S": "S",\n      "T": "T",\n      "U": "U",\n      "V": "V",\n      "W": "W",\n      "X": "X",\n      "Y": "Y",\n      "Z": "Z",\n      "[": "bracketleft",\n      "\\\\": "backslash",\n      "]": "bracketright",\n      "^": "asciicircum",\n      "_": "underscore",\n      "`": "grave",\n      "a": "a",\n      "b": "b",\n      "c": "c",\n      "d": "d",\n      "e": "e",\n      "f": "f",\n      "g": "g",\n      "h": "h",\n      "i": "i",\n      "j": "j",\n      "k": "k",\n      "l": "l",\n      "m": "m",\n      "n": "n",\n      "o": "o",\n      "p": "p",\n      "q": "q",\n      "r": "r",\n      "s": "zcaron",\n      "t": "t",\n      "u": "u",\n      "v": "v",\n      "w": "w",\n      "x": "x",\n      "y": "y",\n      "z": "z",\n      "{": "braceleft",\n      "|": "bar",\n      "}": "braceright",\n      "\xa1": "exclamdown",\n      "\xa2": "cent",\n      "\xa3": "sterling",\n      "\xa4": "currency",\n      "\xa5": "yen",\n      "\xa7": "section",\n      " \u0308": "dieresis",\n      "\xab": "guillemotleft",\n      "\xad": "hyphen",\n      " \u0304": "macron",\n      " \u0301": "acute",\n      "\xb7": "periodcentered",\n      " \u0327": "cedilla",\n      "\xbb": "guillemotright",\n      "\xbf": "questiondown",\n      "\xc0": "Agrave",\n      "\xc1": "Aacute",\n      "\xc2": "Acircumflex",\n      "\xc3": "Atilde",\n      "\xc4": "Adieresis",\n      "\xc5": "Aring",\n      "\xc6": "AE",\n      "\xc7": "Ccedilla",\n      "\xc8": "Egrave",\n      "\xc9": "Eacute",\n      "\xca": "Ecircumflex",\n      "\xcb": "Edieresis",\n      "\xcc": "Igrave",\n      "\xcd": "Iacute",\n      "\xce": "Icircumflex",\n      "\xcf": "Idieresis",\n      "\xd0": "Eth",\n      "\xd1": "Ntilde",\n      "\xd2": "Ograve",\n      "\xd3": "Oacute",\n      "\xd4": "Ocircumflex",\n      "\xd5": "Otilde",\n      "\xd6": "Odieresis",\n      "\xd7": ".null",\n      "\xd8": "Oslash",\n      "\xd9": "Ugrave",\n      "\xda": "Uacute",\n      "\xdb": "Ucircumflex",\n      "\xdc": "Udieresis",\n      "\xdd": "Yacute#1",\n      "\xde": "Thorn",\n      "\xdf": "germandbls",\n      "\xe0": "agrave",\n      "\xe1": "aacute",\n      "\xe2": "acircumflex",\n      "\xe3": "atilde",\n      "\xe4": "adieresis",\n      "\xe5": "aring",\n      "\xe6": "ae",\n      "\xe7": "ccedilla",\n      "\xe8": "egrave",\n      "\xe9": "eacute",\n      "\xea": "ecircumflex",\n      "\xeb": "edieresis",\n      "\xec": "igrave",\n      "\xed": "iacute",\n      "\xee": "icircumflex",\n      "\xef": "idieresis",\n      "\xf0": "Yacute",\n      "\xf1": "ntilde",\n      "\xf2": "ograve",\n      "\xf3": "oacute",\n      "\xf4": "ocircumflex",\n      "\xf5": "otilde",\n      "\xf6": "odieresis",\n      "\xf8": "oslash",\n      "\xf9": "ugrave",\n      "\xfa": "uacute",\n      "\xfb": "ucircumflex",\n      "\xfc": "udieresis",\n      "\xfd": "yacute",\n      "\xfe": "thorn",\n      "\xff": "ydieresis",\n      "\u0131": "dotlessi",\n      "\u0141": "Lslash",\n      "\u0142": "lslash",\n      "\u0152": "OE",\n      "\u0153": "oe",\n      "\u0160": "Scaron",\n      "\u0161": "scaron",\n      "\u0178": "Ydieresis",\n      "\u017D": "Zcaron",\n      "\u02BA": "hungarumlaut",\n      "\u02C6": "circumflex",\n      "\u02C7": "caron",\n      "\u02C9": "macron",\n      " \u0306": "breve",\n      " \u0307": "dotaccent",\n      " \u030A": "ring",\n      " \u0328": "ogonek",\n      " \u0303": "tilde",\n      "\u2013": "endash",\n      "\u2014": "emdash",\n      "\u2018": "quoteleft",\n      "\u201A": "quotesinglbase",\n      "\u201C": "quotedblleft",\n      "\u201D": "quotedblright",\n      "\u201E": "quotedblbase",\n      "\u2020": "dagger",\n      "\u2021": "daggerdbl",\n      "...": "ellipsis",\n      "\u2039": "guilsinglleft",\n      "\u203A": "guilsinglright",\n      "\u2212": "minus",\n      "\u2219": "periodcentered"\n    },\n    "Macintosh, Mac Roman": {\n      "": "udieresis",\n      " ": "dagger",\n      "!": "exclam",\n      "\\"": "quotedbl",\n      "#": "numbersign",\n      "$": "dollar",\n      "%": "percent",\n      "&": "ampersand",\n      "\'": "quotesingle",\n      "(": "parenleft",\n      ")": "parenright",\n      "*": "asterisk",\n      "+": "plus",\n      ",": "comma",\n      "-": "hyphen",\n      ".": "period",\n      "/": "slash",\n      "0": "zero",\n      "1": "one",\n      "2": "two",\n      "3": "three",\n      "4": "four",\n      "5": "five",\n      "6": "six",\n      "7": "seven",\n      "8": "eight",\n      "9": "nine",\n      ":": "colon",\n      ";": "semicolon",\n      "<": "less",\n      "=": "equal",\n      ">": "greater",\n      "?": "question",\n      "@": "at",\n      "A": "A",\n      "B": "B",\n      "C": "C",\n      "D": "D",\n      "E": "E",\n      "F": "F",\n      "G": "G",\n      "H": "H",\n      "I": "I",\n      "J": "J",\n      "K": "K",\n      "L": "L",\n      "M": "M",\n      "N": "N",\n      "O": "O",\n      "P": "P",\n      "Q": "Q",\n      "R": "R",\n      "S": "S",\n      "T": "T",\n      "U": "U",\n      "V": "V",\n      "W": "W",\n      "X": "X",\n      "Y": "Y",\n      "Z": "Z",\n      "[": "bracketleft",\n      "\\\\": "backslash",\n      "]": "bracketright",\n      "^": "asciicircum",\n      "_": "underscore",\n      "`": "grave",\n      "a": "a",\n      "b": "b",\n      "c": "c",\n      "d": "d",\n      "e": "e",\n      "f": "f",\n      "g": "g",\n      "h": "h",\n      "i": "i",\n      "j": "j",\n      "k": "k",\n      "l": "l",\n      "m": "m",\n      "n": "n",\n      "o": "o",\n      "p": "p",\n      "q": "q",\n      "r": "r",\n      "s": "s",\n      "t": "t",\n      "u": "u",\n      "v": "v",\n      "w": "w",\n      "x": "x",\n      "y": "y",\n      "z": "z",\n      "{": "braceleft",\n      "|": "bar",\n      "}": "braceright",\n      "\xa2": "cent",\n      "\xa3": "sterling",\n      "\xa4": "section",\n      "\xa7": "germandbls",\n      "\xab": "acute",\n      "\xac": "dieresis",\n      "\xae": "AE",\n      " \u0304": "Oslash",\n      " \u0301": "yen",\n      "3\u20444": "ae",\n      "\xbf": "oslash",\n      "\xc0": "questiondown",\n      "\xc1": "exclamdown",\n      "\xc7": "guillemotleft",\n      "\xc8": "guillemotright",\n      "\xc9": "ellipsis",\n      "\xca": "nonbreakingspace",\n      "\xcb": "Agrave",\n      "\xcc": "Atilde",\n      "\xcd": "Otilde",\n      "\xce": "OE",\n      "\xcf": "oe",\n      "\xd0": "endash",\n      "\xd1": "emdash",\n      "\xd2": "quotedblleft",\n      "\xd3": "quotedblright",\n      "\xd4": "quoteleft",\n      "\xd8": "ydieresis",\n      "\xd9": "Ydieresis",\n      "\xdb": "currency",\n      "\xdc": "guilsinglleft",\n      "\xdd": "guilsinglright",\n      "\xe0": "daggerdbl",\n      "\xe1": "periodcentered",\n      "\xe2": "quotesinglbase",\n      "\xe3": "quotedblbase",\n      "\xe5": "Acircumflex",\n      "\xe6": "Ecircumflex",\n      "\xe7": "Aacute",\n      "\xe8": "Edieresis",\n      "\xe9": "Egrave",\n      "\xea": "Iacute",\n      "\xeb": "Icircumflex",\n      "\xec": "Idieresis",\n      "\xed": "Igrave",\n      "\xee": "Oacute",\n      "\xef": "Ocircumflex",\n      "\xf1": "Ograve",\n      "\xf2": "Uacute",\n      "\xf3": "Ucircumflex",\n      "\xf4": "Ugrave",\n      "\xf5": "dotlessi",\n      "\xf6": "circumflex",\n      "\xf7": "tilde",\n      "\xf8": "macron",\n      "\xf9": "breve",\n      "\xfa": "dotaccent",\n      "\xfb": "ring",\n      "\xfc": "cedilla",\n      "\xfd": "hungarumlaut",\n      "\xfe": "ogonek",\n      "\xff": "caron"\n    },\n    "Windows, Windows Unicode BMP": {\n      " ": "nonbreakingspace",\n      "!": "exclam",\n      "\\"": "quotedbl",\n      "#": "numbersign",\n      "$": "dollar",\n      "%": "percent",\n      "&": "ampersand",\n      "\'": "quotesingle",\n      "(": "parenleft",\n      ")": "parenright",\n      "*": "asterisk",\n      "+": "plus",\n      ",": "comma",\n      "-": "hyphen",\n      ".": "period",\n      "/": "slash",\n      "0": "zero",\n      "1": "one",\n      "2": "two",\n      "3": "three",\n      "4": "four",\n      "5": "five",\n      "6": "six",\n      "7": "seven",\n      "8": "eight",\n      "9": "nine",\n      ":": "colon",\n      ";": "semicolon",\n      "<": "less",\n      "=": "equal",\n      ">": "greater",\n      "?": "question",\n      "@": "at",\n      "A": "A",\n      "B": "B",\n      "C": "C",\n      "D": "D",\n      "E": "E",\n      "F": "F",\n      "G": "G",\n      "H": "H",\n      "I": "I",\n      "J": "J",\n      "K": "K",\n      "L": "L",\n      "M": "M",\n      "N": "N",\n      "O": "O",\n      "P": "P",\n      "Q": "Q",\n      "R": "R",\n      "S": "S",\n      "T": "T",\n      "U": "U",\n      "V": "V",\n      "W": "W",\n      "X": "X",\n      "Y": "Y",\n      "Z": "Z",\n      "[": "bracketleft",\n      "\\\\": "backslash",\n      "]": "bracketright",\n      "^": "asciicircum",\n      "_": "underscore",\n      "`": "grave",\n      "a": "a",\n      "b": "b",\n      "c": "c",\n      "d": "d",\n      "e": "e",\n      "f": "f",\n      "g": "g",\n      "h": "h",\n      "i": "i",\n      "j": "j",\n      "k": "k",\n      "l": "l",\n      "m": "m",\n      "n": "n",\n      "o": "o",\n      "p": "p",\n      "q": "q",\n      "r": "r",\n      "s": "zcaron",\n      "t": "t",\n      "u": "u",\n      "v": "v",\n      "w": "w",\n      "x": "x",\n      "y": "y",\n      "z": "z",\n      "{": "braceleft",\n      "|": "bar",\n      "}": "braceright",\n      "\xa1": "exclamdown",\n      "\xa2": "cent",\n      "\xa3": "sterling",\n      "\xa4": "currency",\n      "\xa5": "yen",\n      "\xa7": "section",\n      " \u0308": "dieresis",\n      "\xab": "guillemotleft",\n      "\xad": "hyphen",\n      " \u0304": "macron",\n      " \u0301": "acute",\n      "\xb7": "periodcentered",\n      " \u0327": "cedilla",\n      "\xbb": "guillemotright",\n      "\xbf": "questiondown",\n      "\xc0": "Agrave",\n      "\xc1": "Aacute",\n      "\xc2": "Acircumflex",\n      "\xc3": "Atilde",\n      "\xc4": "Adieresis",\n      "\xc5": "Aring",\n      "\xc6": "AE",\n      "\xc7": "Ccedilla",\n      "\xc8": "Egrave",\n      "\xc9": "Eacute",\n      "\xca": "Ecircumflex",\n      "\xcb": "Edieresis",\n      "\xcc": "Igrave",\n      "\xcd": "Iacute",\n      "\xce": "Icircumflex",\n      "\xcf": "Idieresis",\n      "\xd0": "Eth",\n      "\xd1": "Ntilde",\n      "\xd2": "Ograve",\n      "\xd3": "Oacute",\n      "\xd4": "Ocircumflex",\n      "\xd5": "Otilde",\n      "\xd6": "Odieresis",\n      "\xd7": ".null",\n      "\xd8": "Oslash",\n      "\xd9": "Ugrave",\n      "\xda": "Uacute",\n      "\xdb": "Ucircumflex",\n      "\xdc": "Udieresis",\n      "\xdd": "Yacute#1",\n      "\xde": "Thorn",\n      "\xdf": "germandbls",\n      "\xe0": "agrave",\n      "\xe1": "aacute",\n      "\xe2": "acircumflex",\n      "\xe3": "atilde",\n      "\xe4": "adieresis",\n      "\xe5": "aring",\n      "\xe6": "ae",\n      "\xe7": "ccedilla",\n      "\xe8": "egrave",\n      "\xe9": "eacute",\n      "\xea": "ecircumflex",\n      "\xeb": "edieresis",\n      "\xec": "igrave",\n      "\xed": "iacute",\n      "\xee": "icircumflex",\n      "\xef": "idieresis",\n      "\xf0": "Yacute",\n      "\xf1": "ntilde",\n      "\xf2": "ograve",\n      "\xf3": "oacute",\n      "\xf4": "ocircumflex",\n      "\xf5": "otilde",\n      "\xf6": "odieresis",\n      "\xf8": "oslash",\n      "\xf9": "ugrave",\n      "\xfa": "uacute",\n      "\xfb": "ucircumflex",\n      "\xfc": "udieresis",\n      "\xfd": "yacute",\n      "\xfe": "thorn",\n      "\xff": "ydieresis",\n      "\u0131": "dotlessi",\n      "\u0141": "Lslash",\n      "\u0142": "lslash",\n      "\u0152": "OE",\n      "\u0153": "oe",\n      "\u0160": "Scaron",\n      "\u0161": "scaron",\n      "\u0178": "Ydieresis",\n      "\u017D": "Zcaron",\n      "\u02BA": "hungarumlaut",\n      "\u02C6": "circumflex",\n      "\u02C7": "caron",\n      "\u02C9": "macron",\n      " \u0306": "breve",\n      " \u0307": "dotaccent",\n      " \u030A": "ring",\n      " \u0328": "ogonek",\n      " \u0303": "tilde",\n      "\u2013": "endash",\n      "\u2014": "emdash",\n      "\u2018": "quoteleft",\n      "\u201A": "quotesinglbase",\n      "\u201C": "quotedblleft",\n      "\u201D": "quotedblright",\n      "\u201E": "quotedblbase",\n      "\u2020": "dagger",\n      "\u2021": "daggerdbl",\n      "...": "ellipsis",\n      "\u2039": "guilsinglleft",\n      "\u203A": "guilsinglright",\n      "\u2212": "minus",\n      "\u2219": "periodcentered"\n    }\n  },\n  "cmapTableIndex": [\n    "Unicode, Unicode 1.0",\n    "Macintosh, Mac Roman",\n    "Windows, Windows Unicode BMP"\n  ],\n  "headTable": {\n    "unitsPerEm": 1000,\n    "xMin": -89,\n    "yMin": -337,\n    "xMax": 691,\n    "yMax": 744\n  },\n  "hheaTable": {\n    "ascent": 744,\n    "descent": -337,\n    "lineGap": 0\n  },\n  "OS2Table": {\n    "usWeightClass": 400,\n    "usWidthClass": 5,\n    "fsType": 2\n  },\n  "postTable": {\n    "isFixedPitch": 0,\n    "italicAngle": 0.0\n  },\n  "layoutMetrics": {\n    "unitsPerEm": 1000,\n    "boundingBox": {\n      "xMin": -89,\n      "yMin": -337,\n      "xMax": 691,\n      "yMax": 744\n    },\n    "ascent": 744,\n    "descent": -337,\n    "lineGap": 0\n  },\n  "summary": {\n    "fontFamily": "OcrB",\n    "fontSubfamily": "Regular",\n    "version": "Altsys Fontographer 3.5  4/15/93",\n    "weightClass": 400,\n    "isItalic": false\n  }\n}\n'})}),"\n",(0,a.jsx)(e.h2,{id:"\u53C3\u8003\u8CC7\u6599",children:"\u53C3\u8003\u8CC7\u6599"}),"\n",(0,a.jsxs)(e.ul,{children:["\n",(0,a.jsx)(e.li,{children:(0,a.jsx)(e.a,{href:"https://developer.apple.com/fonts/TrueType-Reference-Manual/RM06/Chap6cmap.html?utm_source=chatgpt.com",children:(0,a.jsx)(e.strong,{children:"Character to Glyph Mapping Table"})})}),"\n",(0,a.jsx)(e.li,{children:(0,a.jsx)(e.a,{href:"https://learn.microsoft.com/en-us/typography/opentype/spec/cmap?utm_source=chatgpt.com",children:(0,a.jsx)(e.strong,{children:"cmap \u2014 Character to Glyph Index Mapping Table"})})}),"\n"]})]})}function h(n={}){let{wrapper:e}={...(0,o.a)(),...n.components};return e?(0,a.jsx)(e,{...n,children:(0,a.jsx)(d,{...n})}):d(n)}},50065:function(n,e,i){i.d(e,{Z:function(){return s},a:function(){return r}});var t=i(67294);let a={},o=t.createContext(a);function r(n){let e=t.useContext(o);return t.useMemo(function(){return"function"==typeof n?n(e):{...e,...n}},[e,n])}function s(n){let e;return e=n.disableParentContext?"function"==typeof n.components?n.components(a):n.components||a:r(n.components),t.createElement(o.Provider,{value:e},n.children)}},4874:function(n){n.exports=JSON.parse('{"permalink":"/blog/extract-font-info-by-python","source":"@site/blog/2024/12-26-extract-font-info-by-python/index.md","title":"\u53D6\u5F97\u5B57\u578B\u6A94\u6848\u7684\u8CC7\u8A0A","description":"\u900F\u904E Python \u53D6\u5F97\u5B57\u578B\u6A94\u6848\u7684\u8CC7\u8A0A\u3002","date":"2024-12-26T00:00:00.000Z","tags":[{"inline":true,"label":"font-tools","permalink":"/blog/tags/font-tools"},{"inline":true,"label":"Python","permalink":"/blog/tags/python"}],"readingTime":16.475,"hasTruncateMarker":true,"authors":[{"name":"Z. Yuan","title":"Dosaid maintainer, Full-Stack AI Engineer","url":"https://github.com/zephyr-sh","socials":{"github":"https://github.com/zephyr-sh"},"imageURL":"https://github.com/zephyr-sh.png","key":"Z. Yuan","page":null}],"frontMatter":{"slug":"extract-font-info-by-python","title":"\u53D6\u5F97\u5B57\u578B\u6A94\u6848\u7684\u8CC7\u8A0A","authors":"Z. Yuan","image":"/img/2024/1226.webp","tags":["font-tools","Python"],"description":"\u900F\u904E Python \u53D6\u5F97\u5B57\u578B\u6A94\u6848\u7684\u8CC7\u8A0A\u3002"},"unlisted":false,"prevItem":{"title":"\u597D\u7528\u7684 github markdown \u8A9E\u6CD5","permalink":"/blog/github-markdown-advanced-syntax"},"nextItem":{"title":"\u6279\u6B21\u5F71\u7247\u8F49\u6A94","permalink":"/blog/flexible-video-conversion-by-python"}}')}}]);