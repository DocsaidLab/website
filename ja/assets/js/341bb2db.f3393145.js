"use strict";(self.webpackChunkblog=self.webpackChunkblog||[]).push([["94165"],{80987:function(n,e,t){t.r(e),t.d(e,{metadata:()=>s,contentTitle:()=>a,default:()=>m,assets:()=>p,toc:()=>l,frontMatter:()=>r});var s=JSON.parse('{"id":"gmailsummary/openaiapi_using","title":"OpenAI API \u547C\u53EB","description":"OpenAI \u7684 API \u63D0\u4F9B\u4E86\u8A31\u591A\u529F\u80FD\uFF0C\u6211\u5011\u9019\u6B21\u4F7F\u7528\u7684\u529F\u80FD\u662F\u300CText generation models\u300D\uFF0C\u9019\u500B\u529F\u80FD\u53EF\u4EE5\u8B93\u6211\u5011\u8F38\u5165\u4E00\u6BB5\u6587\u5B57\uFF0C\u7136\u5F8C\u6A21\u578B\u6703\u6839\u64DA\u9019\u6BB5\u6587\u5B57\u7E7C\u7E8C\u5BEB\u4E0B\u53BB\u3002","source":"@site/i18n/ja/docusaurus-plugin-content-docs/current/gmailsummary/openaiapi_using.md","sourceDirName":"gmailsummary","slug":"/gmailsummary/openaiapi_using","permalink":"/ja/docs/gmailsummary/openaiapi_using","draft":false,"unlisted":false,"tags":[],"version":"current","lastUpdatedBy":"zephyr-sh","lastUpdatedAt":1732535932000,"sidebarPosition":6,"frontMatter":{"sidebar_position":6},"sidebar":"tutorialSidebar","previous":{"title":"OpenAI API \u555F\u7528","permalink":"/ja/docs/gmailsummary/openaiapi_login"},"next":{"title":"\u6574\u5408 API \u529F\u80FD","permalink":"/ja/docs/gmailsummary/integration"}}'),o=t("85893"),i=t("50065");let r={sidebar_position:6},a="OpenAI API \u547C\u53EB",p={},l=[{value:"\u5B89\u88DD\u5957\u4EF6",id:"\u5B89\u88DD\u5957\u4EF6",level:2},{value:"\u4F7F\u7528 API",id:"\u4F7F\u7528-api",level:2}];function c(n){let e={a:"a",code:"code",h1:"h1",h2:"h2",header:"header",p:"p",pre:"pre",strong:"strong",...(0,i.a)(),...n.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(e.header,{children:(0,o.jsx)(e.h1,{id:"openai-api-\u547C\u53EB",children:"OpenAI API \u547C\u53EB"})}),"\n",(0,o.jsx)(e.p,{children:"OpenAI \u7684 API \u63D0\u4F9B\u4E86\u8A31\u591A\u529F\u80FD\uFF0C\u6211\u5011\u9019\u6B21\u4F7F\u7528\u7684\u529F\u80FD\u662F\u300CText generation models\u300D\uFF0C\u9019\u500B\u529F\u80FD\u53EF\u4EE5\u8B93\u6211\u5011\u8F38\u5165\u4E00\u6BB5\u6587\u5B57\uFF0C\u7136\u5F8C\u6A21\u578B\u6703\u6839\u64DA\u9019\u6BB5\u6587\u5B57\u7E7C\u7E8C\u5BEB\u4E0B\u53BB\u3002"}),"\n",(0,o.jsx)(e.p,{children:"\u4EE5\u4E0B\u6211\u5011\u7C21\u55AE\u4ECB\u7D39\u4E00\u4E0B\u5982\u4F55\u4F7F\u7528 OpenAI API\u3002"}),"\n",(0,o.jsx)(e.h2,{id:"\u5B89\u88DD\u5957\u4EF6",children:"\u5B89\u88DD\u5957\u4EF6"}),"\n",(0,o.jsxs)(e.p,{children:["\u9996\u5148\uFF0C\u6211\u5011\u9700\u8981\u5B89\u88DD ",(0,o.jsx)(e.code,{children:"openai"})," \u5957\u4EF6\uFF0C\u5426\u5247\u4E0D\u80FD\u7528\u3002"]}),"\n",(0,o.jsx)(e.pre,{children:(0,o.jsx)(e.code,{className:"language-bash",children:"pip install openai\n"})}),"\n",(0,o.jsx)(e.h2,{id:"\u4F7F\u7528-api",children:"\u4F7F\u7528 API"}),"\n",(0,o.jsx)(e.p,{children:"\u63A5\u8457\uFF0C\u6211\u5011\u5C31\u53EF\u4EE5\u958B\u59CB\u4F7F\u7528 API \u4E86\uFF0C\u5148\u770B\u4E00\u4E0B OpenAI API \u7684\u4F7F\u7528\u65B9\u5F0F\uFF1A"}),"\n",(0,o.jsx)(e.pre,{children:(0,o.jsx)(e.code,{className:"language-python",children:'# An example from OpenAI\nfrom openai import OpenAI\nclient = OpenAI(api_key="YOUR_API_KEY")\n\ncompletion = client.chat.completions.create(\nmodel="gpt-3.5-turbo",\nmessages=[\n    {"role": "system", "content": "You are a poetic assistant, skilled in explaining complex programming concepts with creative flair."},\n    {"role": "user", "content": "Compose a poem that explains the concept of recursion in programming."}\n]\n)\n\nprint(completion.choices[0].message)\n'})}),"\n",(0,o.jsxs)(e.p,{children:["\u6211\u5011\u53C3\u8003 OpenAI \u63D0\u4F9B\u7684\u7BC4\u4F8B\uFF0C\u628A\u5B83\u4FEE\u6539\u6210\u4E86\u4E00\u500B\u66F4\u9069\u5408\u6211\u5011\u9700\u6C42\u7684\u7248\u672C\uFF1A",(0,o.jsx)(e.a,{href:"https://github.com/DocsaidLab/GmailSummary/blob/main/openai_api.py",children:(0,o.jsx)(e.strong,{children:"openai_api.py"})})]}),"\n",(0,o.jsx)(e.pre,{children:(0,o.jsx)(e.code,{className:"language-python",children:'import json\nimport os\nfrom typing import Dict, List\n\nimport tiktoken\nfrom openai import OpenAI\n\n\ndef chatgpt_summary(results: List[Dict[str, str]], model: str = \'gpt-3.5-turbo\') -> str:\n\n    # Setting `OPENAI_API_KEY` environment variable is required\n    client = OpenAI(api_key=os.environ[\'OPENAI_API_KEY\'])\n\n    prompt = \'\'\'\n        \u6839\u64DA\u6536\u5230\u7684\u96FB\u5B50\u90F5\u4EF6\u5167\u5BB9\uFF0C\u9019\u4E9B\u662F\u4F86\u81EAgmail api\u7684\u89E3\u6790\u5167\u5BB9\uFF0C\u8ACB\u4F60\u9032\u884C\u95DC\u9375\u8A0A\u606F\u63D0\u53D6\uFF0C\n        \u5305\u62EC\u4F46\u4E0D\u9650\u65BC\u932F\u8AA4\u4FEE\u5FA9\u3001\u529F\u80FD\u589E\u52A0\u3001\u8A0E\u8AD6\u7684\u8B70\u984C\u4EE5\u53CA\u4EFB\u4F55\u7279\u5225\u63D0\u5230\u7684\u6210\u5C31\u6216\u6311\u6230\uFF0C\u8ACB\u8A73\u7D30\u63CF\u8FF0\u4F60\u8A8D\u70BA\u91CD\u8981\u7684\u5167\u5BB9\u3002\n    \'\'\'\n\n    prompt_final = \'\'\'\n        \u91DD\u5C0D\u524D\u9762\u6240\u6709\u5167\u5BB9\u9032\u884C\u68B3\u7406\u548C\u7E3D\u7D50\uFF0C\u627E\u5230\u95DC\u9375\u7684\u6587\u5B57\u6558\u8FF0\uFF0C\u5305\u62EC\u4F46\u4E0D\u9650\u65BC\u932F\u8AA4\u4FEE\u5FA9\u3001\u529F\u80FD\u589E\u52A0\u3001\n        \u8A0E\u8AD6\u7684\u8B70\u984C\u4EE5\u53CA\u4EFB\u4F55\u7279\u5225\u63D0\u5230\u7684\u6210\u5C31\u6216\u6311\u6230\uFF0C\u8ACB\u8A73\u7D30\u63CF\u8FF0\u4F60\u8A8D\u70BA\u91CD\u8981\u7684\u5167\u5BB9\u3002\n        \u6700\u5F8C\uFF0C\u8003\u616E\u5230\u5167\u5BB9\u53EF\u80FD\u6709\u4E00\u4E9B\u5C08\u6709\u540D\u8A5E\uFF0C\u8ACB\u4F60\u984D\u5916\u7684\u88DC\u5145\u76F8\u5C0D\u61C9\u7684\u89E3\u91CB\u548C\u5EF6\u4F38\u8AAA\u660E\u3002\n        \u8ACB\u7528\u7E41\u9AD4\u4E2D\u6587\u64B0\u5BEB\u6587\u7AE0\u4E14\u5118\u53EF\u80FD\u95E1\u8FF0\u8A73\u7D30\u7684\u5167\u5BB9\uFF0C\u8B80\u8005\u662F\u8A72\u9818\u57DF\u7684\u5C08\u5BB6\uFF0C\n        \u56E0\u6B64\u5BEB\u6587\u7AE0\u6642\u8ACB\u4F60\u53EF\u4EE5\u591A\u63CF\u8FF0\u4E00\u4E9B\u76F8\u95DC\u7684\u5DE5\u7A0B\u7D30\u7BC0\uFF0C\u8ACB\u4F7F\u7528\u5206\u6BB5\u8AAA\u660E\u548C\u4FDD\u6301\u6558\u8FF0\u7684\u5B8C\u6574\u6027\u3002\n    \'\'\'\n\n    # \u5206\u6BB5\uFF0C\u6BCF 20 \u500B\u5167\u5BB9\u5206\u4E00\u6BB5\n    results_seg = [results[i:i + 20] for i in range(0, len(results), 20)]\n\n    responses = []\n    enc = tiktoken.encoding_for_model("gpt-3.5-turbo")\n    for i, seg in enumerate(results_seg):\n        content = json.dumps(seg)\n\n        # \u4F30\u8A08 token\n        tokens = enc.encode(content)\n        print(f\'Segment {i}: Length of tokens: {len(tokens)}\')\n\n        if len(tokens) > 16000:\n            continue\n\n        response = client.chat.completions.create(\n            model=model,\n            messages=[\n                {"role": "system", "content": "You are a helpful assistant."},\n                {"role": "user", "content": f"{content}\\n\\n{prompt}"},\n            ],\n            temperature=0.2,\n        ).choices[0].message.content\n\n        responses.append(response)\n\n    # \u5F59\u6574\u5206\u6BB5\u7D50\u679C\n    all_content = \'\\n\\n\'.join(responses)\n    tokens = enc.encode(all_content)\n    print(\n        f\'Summary all segments, length of tokens: {len(tokens)}...\', end=\' \', flush=True)\n\n    summary = client.chat.completions.create(\n        model=model,\n        messages=[\n            {"role": "system", "content": "You are a helpful assistant."},\n            {"role": "user", "content": f"{all_content}\\n\\n{prompt_final}"},\n        ],\n        temperature=0.2,\n    ).choices[0].message.content\n    print(\'Done.\')\n\n    return summary\n'})})]})}function m(n={}){let{wrapper:e}={...(0,i.a)(),...n.components};return e?(0,o.jsx)(e,{...n,children:(0,o.jsx)(c,{...n})}):c(n)}},50065:function(n,e,t){t.d(e,{Z:function(){return a},a:function(){return r}});var s=t(67294);let o={},i=s.createContext(o);function r(n){let e=s.useContext(i);return s.useMemo(function(){return"function"==typeof n?n(e):{...e,...n}},[e,n])}function a(n){let e;return e=n.disableParentContext?"function"==typeof n.components?n.components(o):n.components||o:r(n.components),s.createElement(i.Provider,{value:e},n.children)}}}]);