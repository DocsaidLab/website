"use strict";(self.webpackChunkblog=self.webpackChunkblog||[]).push([["14841"],{3582:function(e,n,s){s.r(n),s.d(n,{metadata:()=>r,contentTitle:()=>l,default:()=>p,assets:()=>o,toc:()=>d,frontMatter:()=>a});var r=JSON.parse('{"id":"gmailsummary/gmailapi_using","title":"Gmail API \u547C\u53EB","description":"\u5B8C\u6210\u8A2D\u5B9A\u5F8C\uFF0C\u6211\u5011\u5C31\u53EF\u4EE5\u958B\u59CB\u4F7F\u7528 GmailAPI \u4E86\u3002","source":"@site/i18n/ja/docusaurus-plugin-content-docs/current/gmailsummary/gmailapi_using.md","sourceDirName":"gmailsummary","slug":"/gmailsummary/gmailapi_using","permalink":"/ja/docs/gmailsummary/gmailapi_using","draft":false,"unlisted":false,"tags":[],"version":"current","lastUpdatedBy":"zephyr-sh","lastUpdatedAt":1732535932000,"sidebarPosition":4,"frontMatter":{"sidebar_position":4},"sidebar":"tutorialSidebar","previous":{"title":"Gmail API \u6191\u8B49","permalink":"/ja/docs/gmailsummary/gmailapi_credentials"},"next":{"title":"OpenAI API \u555F\u7528","permalink":"/ja/docs/gmailsummary/openaiapi_login"}}'),t=s("85893"),i=s("50065");let a={sidebar_position:4},l="Gmail API \u547C\u53EB",o={},d=[{value:"\u5B89\u88DD\u5957\u4EF6",id:"\u5B89\u88DD\u5957\u4EF6",level:2},{value:"\u914D\u7F6E\u7BC4\u4F8B",id:"\u914D\u7F6E\u7BC4\u4F8B",level:2},{value:"\u57F7\u884C\u7BC4\u4F8B",id:"\u57F7\u884C\u7BC4\u4F8B",level:2},{value:"\u958B\u59CB\u4F7F\u7528",id:"\u958B\u59CB\u4F7F\u7528",level:2},{value:"\u5275\u5EFA\u7528\u6236\u7AEF",id:"\u5275\u5EFA\u7528\u6236\u7AEF",level:3},{value:"\u53D6\u5F97\u90F5\u4EF6",id:"\u53D6\u5F97\u90F5\u4EF6",level:3},{value:"\u89E3\u6790\u90F5\u4EF6",id:"\u89E3\u6790\u90F5\u4EF6",level:3},{value:"\u5C0F\u7D50",id:"\u5C0F\u7D50",level:2}];function c(e){let n={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",img:"img",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,i.a)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.header,{children:(0,t.jsx)(n.h1,{id:"gmail-api-\u547C\u53EB",children:"Gmail API \u547C\u53EB"})}),"\n",(0,t.jsx)(n.p,{children:"\u5B8C\u6210\u8A2D\u5B9A\u5F8C\uFF0C\u6211\u5011\u5C31\u53EF\u4EE5\u958B\u59CB\u4F7F\u7528 GmailAPI \u4E86\u3002"}),"\n",(0,t.jsxs)(n.p,{children:["\u5148\u627E\u5230\u4F60\u525B\u624D\u4E0B\u8F09\u7684 ",(0,t.jsx)(n.code,{children:"credentials.json"})," \u6A94\u6848\uFF0C\u7136\u5F8C\u5C07\u5B83\u653E\u5728\u5C08\u6848\u7684\u6839\u76EE\u9304\u4E0B\u3002"]}),"\n",(0,t.jsxs)(n.p,{children:["\u63A5\u8457\uFF0C\u6211\u5011\u6253\u958B Google \u63D0\u4F9B\u7684\u6559\u5B78\u6587\u4EF6\uFF1A",(0,t.jsx)(n.a,{href:"https://developers.google.com/gmail/api/quickstart/python",children:(0,t.jsx)(n.strong,{children:"Python quickstart"})})]}),"\n",(0,t.jsx)(n.h2,{id:"\u5B89\u88DD\u5957\u4EF6",children:"\u5B89\u88DD\u5957\u4EF6"}),"\n",(0,t.jsx)(n.p,{children:"\u4F60\u5FC5\u9808\u8981\u5B89\u88DD\u9069\u7528\u65BC Python \u7684 Google \u7528\u6236\u7AEF\u7A0B\u5F0F\u5EAB\uFF1A"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"pip install -U google-api-python-client google-auth-httplib2 google-auth-oauthlib\n"})}),"\n",(0,t.jsx)(n.h2,{id:"\u914D\u7F6E\u7BC4\u4F8B",children:"\u914D\u7F6E\u7BC4\u4F8B"}),"\n",(0,t.jsxs)(n.ol,{children:["\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:["\u5728\u4F60\u7684\u5DE5\u4F5C\u76EE\u9304\u4E2D\uFF0C\u5EFA\u7ACB\u4E00\u500B\u540D\u70BA ",(0,t.jsx)(n.code,{children:"quickstart.py"}),"."]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["\u53EF\u4EE5\u76F4\u63A5\u53C3\u8003 Google \u63D0\u4F9B\u7684\u539F\u59CB\u78BC\uFF1A",(0,t.jsx)(n.a,{href:"https://github.com/googleworkspace/python-samples/blob/main/gmail/quickstart/quickstart.py",children:(0,t.jsx)(n.strong,{children:"source code"})})]}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:["\u5C07\u4EE5\u4E0B\u7A0B\u5F0F\u78BC\u5305\u542B\u5728 ",(0,t.jsx)(n.code,{children:"quickstart.py"}),":"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-python",metastring:'title="quickstart.py"',children:'import os.path\n\nfrom google.auth.transport.requests import Request\nfrom google.oauth2.credentials import Credentials\nfrom google_auth_oauthlib.flow import InstalledAppFlow\nfrom googleapiclient.discovery import build\nfrom googleapiclient.errors import HttpError\n\n# If modifying these scopes, delete the file token.json.\nSCOPES = ["https://www.googleapis.com/auth/gmail.readonly"]\n\n\ndef main():\n"""Shows basic usage of the Gmail API. Lists the user\'s Gmail labels."""\ncreds = None\n# The file token.json stores the user\'s access and refresh tokens, and is\n# created automatically when the authorization flow completes for the first\n# time.\nif os.path.exists("token.json"):\n    creds = Credentials.from_authorized_user_file("token.json", SCOPES)\n# If there are no (valid) credentials available, let the user log in.\nif not creds or not creds.valid:\n    if creds and creds.expired and creds.refresh_token:\n        creds.refresh(Request())\n    else:\n        flow = InstalledAppFlow.from_client_secrets_file(\n            "credentials.json", SCOPES\n        )\n        creds = flow.run_local_server(port=0)\n    # Save the credentials for the next run\n    with open("token.json", "w") as token:\n        token.write(creds.to_json())\n\ntry:\n    # Call the Gmail API\n    service = build("gmail", "v1", credentials=creds)\n    results = service.users().labels().list(userId="me").execute()\n    labels = results.get("labels", [])\n\n    if not labels:\n        print("No labels found.")\n        return\n    print("Labels:")\n    for label in labels:\n        print(label["name"])\n\nexcept HttpError as error:\n    # TODO(developer) - Handle errors from gmail API.\n    print(f"An error occurred: {error}")\n\nif __name__ == "__main__":\n    main()\n'})}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"\u57F7\u884C\u7BC4\u4F8B",children:"\u57F7\u884C\u7BC4\u4F8B"}),"\n",(0,t.jsxs)(n.p,{children:["\u57F7\u884C ",(0,t.jsx)(n.code,{children:"quickstart.py"}),":"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"python quickstart.py\n"})}),"\n",(0,t.jsxs)(n.p,{children:["\u7576\u4F60\u7B2C\u4E00\u6B21\u57F7\u884C ",(0,t.jsx)(n.code,{children:"quickstart.py"})," \u6642\uFF0C\u5B83\u6703\u8981\u6C42\u4F60\u9032\u884C\u6388\u6B0A\u3002\u8ACB\u9EDE\u64CA\u300CAllow\u300D\u3002"]}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.img,{alt:"gmail_19",src:s(25294).Z+"",width:"2814",height:"4294"})}),"\n",(0,t.jsx)(n.p,{children:"\u4F60\u5C07\u770B\u5230\u4E00\u500B\u985E\u4F3C\u65BC\u4EE5\u4E0B\u7684\u8F38\u51FA\uFF1A"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"Labels:\nCHAT\nSENT\nINBOX\nIMPORTANT\nTRASH\nDRAFT\nSPAM\nCATEGORY_FORUMS\nCATEGORY_UPDATES\nCATEGORY_PERSONAL\nCATEGORY_PROMOTIONS\nCATEGORY_SOCIAL\nSTARRED\nUNREAD\n"})}),"\n",(0,t.jsxs)(n.p,{children:["\u540C\u6642\uFF0C\u6703\u53D6\u56DE\u4E00\u500B ",(0,t.jsx)(n.code,{children:"token.json"})," \u6A94\u6848\uFF0C\u9019\u500B\u6A94\u6848\u5C07\u7528\u65BC\u4E0B\u6B21\u57F7\u884C ",(0,t.jsx)(n.code,{children:"quickstart.py"})," \u6642\uFF0C\u4E0D\u518D\u9700\u8981\u9032\u884C\u6388\u6B0A\u3002"]}),"\n",(0,t.jsx)(n.h2,{id:"\u958B\u59CB\u4F7F\u7528",children:"\u958B\u59CB\u4F7F\u7528"}),"\n",(0,t.jsx)(n.p,{children:"\u63A5\u4E0B\u4F86\uFF0C\u6211\u5011\u5C07\u958B\u59CB\u4F7F\u7528 GmailAPI \u4F86\u89E3\u6790\u90F5\u4EF6\u5167\u5BB9\u3002"}),"\n",(0,t.jsx)(n.p,{children:"\u6211\u5011\u5BE6\u4F5C\u4E86\u4E09\u500B\u90E8\u5206\uFF0C\u5206\u5225\u662F\uFF1A\u5275\u5EFA\u7528\u6236\u7AEF\u3001\u53D6\u5F97\u90F5\u4EF6\u548C\u90F5\u4EF6\u89E3\u6790\u3002"}),"\n",(0,t.jsx)(n.p,{children:"\u5148\u5F15\u5165\u9700\u8981\u7684\u5957\u4EF6\uFF1A"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-python",children:"from base64 import urlsafe_b64decode\nfrom datetime import datetime, timedelta\nfrom typing import Dict, List\n\nimport pytz\nfrom google.oauth2.credentials import Credentials\nfrom googleapiclient.discovery import build\n"})}),"\n",(0,t.jsx)(n.h3,{id:"\u5275\u5EFA\u7528\u6236\u7AEF",children:"\u5275\u5EFA\u7528\u6236\u7AEF"}),"\n",(0,t.jsxs)(n.p,{children:["\u5728\u5EFA\u7ACB GmailAPI \u7684\u7528\u6236\u7AEF\u6642\uFF0C\u6703\u8F09\u5165 ",(0,t.jsx)(n.code,{children:"token.json"})," \u5B58\u5132\u4E86\u7528\u6236\u7684\u8A2A\u554F\u4EE4\u724C\u548C\u5237\u65B0\u4EE4\u724C\uFF0C\u4E26\u5728\u8A2A\u554F\u4EE4\u724C\u5230\u671F\u6642\u81EA\u52D5\u5237\u65B0\u3002"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-python",children:"def build_service():\n    creds = None\n    token_file = 'token.json'\n    creds = Credentials.from_authorized_user_file(\n        token_file, scopes=['https://www.googleapis.com/auth/gmail.readonly'])\n    service = build('gmail', 'v1', credentials=creds)\n    return service\n"})}),"\n",(0,t.jsx)(n.h3,{id:"\u53D6\u5F97\u90F5\u4EF6",children:"\u53D6\u5F97\u90F5\u4EF6"}),"\n",(0,t.jsx)(n.p,{children:"\u63A5\u4E0B\u4F86\uFF0C\u6211\u5011\u5148\u5B9A\u7FA9\u4E00\u500B\u51FD\u6578\uFF0C\u7528\u4F86\u5F9E\u7528\u6236\u7AEF\u53D6\u5F97\u90F5\u4EF6\u5167\u5BB9\uFF1A"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-python",children:"def get_messages(\n    service,\n    user_id='me',\n    after_date=None,\n    subject_filter: str = None,\n    max_results: int = 500\n) -> List[Dict[str, str]]:\n\n    tz = pytz.timezone('Asia/Taipei')\n    if not after_date:\n        now = datetime.now(tz)\n        after_date = (now - timedelta(days=1)).strftime('%Y/%m/%d')\n\n    messages = []\n    try:\n        query = ''\n        if after_date:\n            query += f' after:{after_date}'\n        if subject_filter:\n            query += f' subject:(\"{subject_filter}\")'\n\n        response = service.users().messages().list(\n            userId=user_id, q=query, maxResults=max_results).execute()\n\n        messages.extend(response.get('messages', []))\n\n        # Handle pagination with nextPageToken\n        while 'nextPageToken' in response:\n            page_token = response['nextPageToken']\n            response = service.users().messages().list(\n                userId=user_id, q=query, maxResults=max_results, pageToken=page_token).execute()\n            messages.extend(response.get('messages', []))\n\n    except Exception as error:\n        print(f'An error occurred: {error}')\n\n    if not messages:\n        print(\"No messages found.\")\n\n    return messages\n"})}),"\n",(0,t.jsx)(n.h3,{id:"\u89E3\u6790\u90F5\u4EF6",children:"\u89E3\u6790\u90F5\u4EF6"}),"\n",(0,t.jsx)(n.p,{children:"\u53D6\u56DE\u8CC7\u6599\u5F8C\uFF0C\u5167\u5BB9\u5B58\u5728\u5927\u91CF\u7684 metadata\uFF0C\u6211\u5011\u9700\u8981\u5C07\u5B83\u89E3\u6790\u6210\u6613\u8B80\u7684\u683C\u5F0F\u3002"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-python",children:"def parse_message(service, msg_id, user_id='me'):\n\n    try:\n        message = service.users().messages().get(\n            userId=user_id, id=msg_id, format='full').execute()\n        headers = message['payload']['headers']\n        parts = message['payload'].get('parts', [])\n        email_data = {\n            'Date': None,\n            'Subject': None,\n            'Text': None\n        }\n\n        # \u89E3\u6790\u982D\u4FE1\u606F\u4EE5\u7372\u53D6\u5BC4\u4EF6\u6642\u9593\u3001\u4E3B\u65E8\u3001\u5BC4\u4EF6\u8005\u548C\u6536\u4EF6\u8005\n        for header in headers:\n            if header['name'] == 'Date':\n                email_data['Date'] = header['value']\n            elif header['name'] == 'Subject':\n                email_data['Subject'] = header['value']\n\n        # \u89E3\u6790\u90F5\u4EF6\u6B63\u6587\n        for part in parts:\n            if part['mimeType'] == 'text/plain' or part['mimeType'] == 'text/html':\n                data = part['body']['data']\n                text = urlsafe_b64decode(data.encode('ASCII')).decode('UTF-8')\n                email_data['Text'] = text\n                break  # \u53EA\u53D6\u7B2C\u4E00\u500B\u7B26\u5408\u689D\u4EF6\u7684\u90E8\u5206\n\n        return email_data\n\n    except Exception as error:\n        print(f'An error occurred: {error}')\n        return None\n"})}),"\n",(0,t.jsx)(n.h2,{id:"\u5C0F\u7D50",children:"\u5C0F\u7D50"}),"\n",(0,t.jsx)(n.p,{children:"\u5230\u9019\u908A\uFF0C\u6211\u5011\u5DF2\u7D93\u628A GmailAPI \u7684\u57FA\u672C\u4F7F\u7528\u65B9\u6CD5\u4ECB\u7D39\u5B8C\u7562\u3002"}),"\n",(0,t.jsx)(n.p,{children:"\u5148\u4E0D\u8981\u57F7\u884C\u5B83\uFF0C\u56E0\u70BA\u9084\u9700\u8981\u4E00\u4E9B\u6E96\u5099\u5DE5\u4F5C\u3002"}),"\n",(0,t.jsx)(n.p,{children:"\u6211\u5011\u5F97\u53BB\u4E32\u63A5 OpenAI \u7684 API\uFF0C\u9019\u6A23\u624D\u80FD\u5C07\u90F5\u4EF6\u5167\u5BB9\u50B3\u9001\u7D66 ChatGPT \u9032\u884C\u5206\u6790\u3002"})]})}function p(e={}){let{wrapper:n}={...(0,i.a)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(c,{...e})}):c(e)}},25294:function(e,n,s){s.d(n,{Z:function(){return r}});let r=s.p+"assets/images/gmail19-90fd8dd43b0e5ab75169c1dbb4b94b2d.jpg"},50065:function(e,n,s){s.d(n,{Z:function(){return l},a:function(){return a}});var r=s(67294);let t={},i=r.createContext(t);function a(e){let n=r.useContext(i);return r.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:a(e.components),r.createElement(i.Provider,{value:n},e.children)}}}]);