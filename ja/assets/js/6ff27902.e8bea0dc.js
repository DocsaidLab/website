"use strict";(self.webpackChunkblog=self.webpackChunkblog||[]).push([["20886"],{67295:function(e,n,i){i.r(n),i.d(n,{assets:function(){return s},contentTitle:function(){return c},default:function(){return p},frontMatter:function(){return o},metadata:function(){return r},toc:function(){return l}});var r=i(49957),t=i(85893),a=i(50065);let o={slug:"opencv-imread",title:"Python \u3067 HEIC \u753B\u50CF\u3092\u8AAD\u307F\u8FBC\u3080",authors:"Zephyr",tags:["HEIC","TurboJPEG"],image:"/ja/img/2024/0213.webp",description:"OpenCV imread \u3092\u6700\u9069\u5316\u3057\u307E\u3057\u3087\u3046\uFF01"},c=void 0,s={authorsImageUrls:[void 0]},l=[{value:"\u57FA\u672C\u7684\u306A\u4F7F\u3044\u65B9",id:"\u57FA\u672C\u7684\u306A\u4F7F\u3044\u65B9",level:2},{value:"\u5236\u9650 1\uFF1AHEIC \u30D5\u30A9\u30FC\u30DE\u30C3\u30C8",id:"\u5236\u9650-1heic-\u30D5\u30A9\u30FC\u30DE\u30C3\u30C8",level:2},{value:"\u5236\u9650 2\uFF1AJPG \u306E\u8AAD\u307F\u8FBC\u307F\u304C\u9045\u3044",id:"\u5236\u9650-2jpg-\u306E\u8AAD\u307F\u8FBC\u307F\u304C\u9045\u3044",level:2},{value:"\u7D50\u8AD6",id:"\u7D50\u8AD6",level:2}];function d(e){let n={a:"a",code:"code",h2:"h2",p:"p",pre:"pre",...(0,a.a)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsxs)(n.p,{children:["\u753B\u50CF\u3092\u8AAD\u307F\u8FBC\u3080\u969B\u3001OpenCV \u306E ",(0,t.jsx)(n.code,{children:"imread"})," \u95A2\u6570\u3092\u4F7F\u7528\u3059\u308B\u3053\u3068\u304C\u3088\u304F\u3042\u308A\u307E\u3059\u3002"]}),"\n",(0,t.jsx)(n.p,{children:"\u3057\u304B\u3057\u3001\u3053\u306E\u95A2\u6570\u306F\u4E07\u80FD\u3067\u306F\u306A\u304F\u3001\u5834\u5408\u306B\u3088\u3063\u3066\u306F\u554F\u984C\u304C\u767A\u751F\u3059\u308B\u3053\u3068\u304C\u3042\u308A\u307E\u3059\u3002"}),"\n",(0,t.jsx)(n.h2,{id:"\u57FA\u672C\u7684\u306A\u4F7F\u3044\u65B9",children:"\u57FA\u672C\u7684\u306A\u4F7F\u3044\u65B9"}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.code,{children:"imread"})," \u95A2\u6570\u306E\u57FA\u672C\u7684\u306A\u4F7F\u3044\u65B9\u306F\u975E\u5E38\u306B\u7C21\u5358\u3067\u3001\u753B\u50CF\u306E\u30D1\u30B9\u3092\u6E21\u3059\u3060\u3051\u3067\u3059\uFF1A"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-python",children:"import cv2\n\nimage = cv2.imread('path/to/image.jpg')\n"})}),"\n",(0,t.jsx)(n.p,{children:"\u3053\u306E\u95A2\u6570\u3067\u4F7F\u7528\u3067\u304D\u308B\u753B\u50CF\u30D5\u30A9\u30FC\u30DE\u30C3\u30C8\u306B\u306F\u3001BMP\u3001JPG\u3001PNG\u3001TIF \u306A\u3069\u306E\u4E00\u822C\u7684\u306A\u5F62\u5F0F\u304C\u542B\u307E\u308C\u307E\u3059\u3002"}),"\n",(0,t.jsx)(n.h2,{id:"\u5236\u9650-1heic-\u30D5\u30A9\u30FC\u30DE\u30C3\u30C8",children:"\u5236\u9650 1\uFF1AHEIC \u30D5\u30A9\u30FC\u30DE\u30C3\u30C8"}),"\n",(0,t.jsxs)(n.p,{children:["iOS \u30C7\u30D0\u30A4\u30B9\u3067\u64AE\u5F71\u3057\u305F\u5199\u771F\u306F\u901A\u5E38 HEIC \u30D5\u30A9\u30FC\u30DE\u30C3\u30C8\u3067\u3059\u3002\u3053\u306E\u5F62\u5F0F\u306F OpenCV \u3067\u306F\u30B5\u30DD\u30FC\u30C8\u3055\u308C\u3066\u3044\u307E\u305B\u3093\u3002\u3082\u3057 ",(0,t.jsx)(n.code,{children:"imread"})," \u95A2\u6570\u3092\u4F7F\u3063\u3066 HEIC \u753B\u50CF\u3092\u8AAD\u307F\u8FBC\u3082\u3046\u3068\u3059\u308B\u3068\u3001",(0,t.jsx)(n.code,{children:"None"})," \u304C\u8FD4\u3055\u308C\u307E\u3059\u3002"]}),"\n",(0,t.jsxs)(n.p,{children:["\u3053\u306E\u554F\u984C\u3092\u89E3\u6C7A\u3059\u308B\u306B\u306F\u3001HEIC \u30D5\u30A9\u30FC\u30DE\u30C3\u30C8\u306E\u753B\u50CF\u3092\u8AAD\u307F\u8FBC\u3080\u305F\u3081\u306B ",(0,t.jsx)(n.code,{children:"pyheif"})," \u30E9\u30A4\u30D6\u30E9\u30EA\u3092\u4F7F\u7528\u3057\u3001\u305D\u306E\u5F8C ",(0,t.jsx)(n.code,{children:"numpy.ndarray"})," \u578B\u306E\u5909\u6570\u306B\u5909\u63DB\u3059\u308B\u5FC5\u8981\u304C\u3042\u308A\u307E\u3059\u3002"]}),"\n",(0,t.jsx)(n.p,{children:"\u307E\u305A\u3001\u5FC5\u8981\u306A\u30E9\u30A4\u30D6\u30E9\u30EA\u3092\u30A4\u30F3\u30B9\u30C8\u30FC\u30EB\u3057\u307E\u3059\uFF1A"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"sudo apt install libheif-dev\npip install pyheif\n"})}),"\n",(0,t.jsx)(n.p,{children:"\u6B21\u306B\u3001\u7C21\u5358\u306A\u95A2\u6570\u3092\u4F5C\u6210\u3057\u307E\u3059\uFF1A"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-python",children:'import cv2\nimport pyheif\nimport numpy as np\n\ndef read_heic_to_numpy(file_path: str):\n    heif_file = pyheif.read(file_path)\n    data = heif_file.data\n    if heif_file.mode == "RGB":\n        numpy_array = np.frombuffer(data, dtype=np.uint8).reshape(\n            heif_file.size[1], heif_file.size[0], 3)\n    elif heif_file.mode == "RGBA":\n        numpy_array = np.frombuffer(data, dtype=np.uint8).reshape(\n            heif_file.size[1], heif_file.size[0], 4)\n    else:\n        raise ValueError("Unsupported HEIC color mode")\n    return numpy_array\n\n\nimg = read_heic_to_numpy(\'path/to/image.heic\')\nimg = cv2.cvtColor(img, cv2.COLOR_RGB2BGR)\n'})}),"\n",(0,t.jsx)(n.h2,{id:"\u5236\u9650-2jpg-\u306E\u8AAD\u307F\u8FBC\u307F\u304C\u9045\u3044",children:"\u5236\u9650 2\uFF1AJPG \u306E\u8AAD\u307F\u8FBC\u307F\u304C\u9045\u3044"}),"\n",(0,t.jsxs)(n.p,{children:["\u7279\u5B9A\u306E\u72B6\u6CC1\u3067\u306F\u3001",(0,t.jsx)(n.code,{children:"imread"})," \u95A2\u6570\u3092\u4F7F\u7528\u3057\u3066 JPG \u30D5\u30A9\u30FC\u30DE\u30C3\u30C8\u306E\u753B\u50CF\u3092\u8AAD\u307F\u8FBC\u3080\u901F\u5EA6\u304C\u975E\u5E38\u306B\u9045\u3044\u5834\u5408\u304C\u3042\u308A\u307E\u3059\u3002\u3053\u308C\u306F\u3001OpenCV \u304C JPG \u30D5\u30A9\u30FC\u30DE\u30C3\u30C8\u306E\u753B\u50CF\u3092\u8AAD\u307F\u8FBC\u3080\u969B\u306B\u4F7F\u7528\u3059\u308B ",(0,t.jsx)(n.code,{children:"libjpeg"})," \u30E9\u30A4\u30D6\u30E9\u30EA\u306E\u30D1\u30D5\u30A9\u30FC\u30DE\u30F3\u30B9\u304C\u3042\u307E\u308A\u826F\u304F\u306A\u3044\u305F\u3081\u3067\u3059\u3002"]}),"\n",(0,t.jsxs)(n.p,{children:["\u305D\u3053\u3067\u3001",(0,t.jsx)(n.code,{children:"libjpeg"})," \u306E\u4EE3\u66FF\u3068\u3057\u3066\u3001\u3088\u308A\u9AD8\u6027\u80FD\u306A TurboJPEG \u30E9\u30A4\u30D6\u30E9\u30EA\u3092\u5C0E\u5165\u3057\u307E\u3059\u3002TurboJPEG \u3092\u4F7F\u7528\u3059\u308B\u3053\u3068\u3067\u3001JPG \u30D5\u30A9\u30FC\u30DE\u30C3\u30C8\u306E\u753B\u50CF\u306E\u8AAD\u307F\u8FBC\u307F\u901F\u5EA6\u3092\u5411\u4E0A\u3055\u305B\u308B\u3053\u3068\u304C\u3067\u304D\u307E\u3059\u3002"]}),"\n",(0,t.jsx)(n.p,{children:"\u307E\u305A\u3001\u5FC5\u8981\u306A\u30E9\u30A4\u30D6\u30E9\u30EA\u3092\u30A4\u30F3\u30B9\u30C8\u30FC\u30EB\u3057\u307E\u3059\uFF1A"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"sudo apt install libturbojpeg exiftool\npip install PyTurboJPEG\n"})}),"\n",(0,t.jsx)(n.p,{children:"\u6B21\u306B\u3001\u4EE5\u4E0B\u306E\u30B3\u30FC\u30C9\u3067\u8AAD\u307F\u8FBC\u307F\u3092\u9AD8\u901F\u5316\u3057\u307E\u3059\uFF1A"}),"\n",(0,t.jsx)(n.p,{children:"\u4E00\u822C\u7684\u306B\u3001\u8AAD\u307F\u8FBC\u307F\u901F\u5EA6\u306F\u7D04 2 \uFF5E 3 \u500D\u5411\u4E0A\u3057\u307E\u3059\u3002"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-python",children:"import cv2\nimport piexif\nfrom enum import IntEnum\nfrom pathlib import Path\nfrom turbojpeg import TurboJPEG\nimport numpy as np\nfrom typing import Union\n\n\njpeg = TurboJPEG()\n\n\nclass ROTATE(IntEnum):\n    ROTATE_90 = cv2.ROTATE_90_CLOCKWISE\n    ROTATE_180 = cv2.ROTATE_180\n    ROTATE_270 = cv2.ROTATE_90_COUNTERCLOCKWISE\n\n\ndef imrotate90(img, rotate_code: ROTATE) -> np.ndarray:\n    return cv2.rotate(img.copy(), rotate_code)\n\n\ndef get_orientation_code(stream: Union[str, Path, bytes]):\n    code = None\n    try:\n        exif_dict = piexif.load(stream)\n        if piexif.ImageIFD.Orientation in exif_dict[\"0th\"]:\n            orientation = exif_dict[\"0th\"][piexif.ImageIFD.Orientation]\n            if orientation == 3:\n                code = ROTATE.ROTATE_180\n            elif orientation == 6:\n                code = ROTATE.ROTATE_90\n            elif orientation == 8:\n                code = ROTATE.ROTATE_270\n    finally:\n        return code\n\n\ndef jpgdecode(byte_: bytes) -> Union[np.ndarray, None]:\n    try:\n        bgr_array = jpeg.decode(byte_)\n        code = get_orientation_code(byte_)\n        bgr_array = imrotate90(\n            bgr_array, code) if code is not None else bgr_array\n    except:\n        bgr_array = None\n\n    return bgr_array\n\n\ndef jpgread(img_file: Union[str, Path]) -> Union[np.ndarray, None]:\n    with open(str(img_file), 'rb') as f:\n        binary_img = f.read()\n        bgr_array = jpgdecode(binary_img)\n\n    return bgr_array\n\nimg = jpgread('path/to/image.jpg')\n"})}),"\n",(0,t.jsx)(n.p,{children:"\u3053\u308C\u3067\u3001JPG \u30D5\u30A9\u30FC\u30DE\u30C3\u30C8\u306E\u753B\u50CF\u306E\u8AAD\u307F\u8FBC\u307F\u3092\u9AD8\u901F\u5316\u3059\u308B\u3053\u3068\u304C\u3067\u304D\u307E\u3059\u3002"}),"\n",(0,t.jsx)(n.h2,{id:"\u7D50\u8AD6",children:"\u7D50\u8AD6"}),"\n",(0,t.jsx)(n.p,{children:"\u30D7\u30ED\u30B0\u30E9\u30E0\u3092\u3082\u3046\u5C11\u3057\u8CE2\u304F\u3057\u3066\u3001\u9069\u5207\u306A\u8AAD\u307F\u8FBC\u307F\u65B9\u6CD5\u3092\u81EA\u52D5\u7684\u306B\u9078\u629E\u3055\u305B\u305F\u3044\u5834\u5408\u306F\u3069\u3046\u3059\u308C\u3070\u3088\u3044\u3067\u3057\u3087\u3046\u304B\uFF1F"}),"\n",(0,t.jsx)(n.p,{children:"\u753B\u50CF\u306E\u30D5\u30A9\u30FC\u30DE\u30C3\u30C8\u306B\u5FDC\u3058\u3066\u9069\u5207\u306A\u8AAD\u307F\u8FBC\u307F\u65B9\u6CD5\u3092\u9078\u629E\u3059\u308B\u95A2\u6570\u3092\u4F5C\u6210\u3067\u304D\u307E\u3059\uFF1A"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-python",children:"def imread(\n    path: Union[str, Path],\n    color_base: str = 'BGR',\n    verbose: bool = False\n) -> Union[np.ndarray, None]:\n\n    if not Path(path).exists():\n        raise FileExistsError(f'{path} \u304C\u898B\u3064\u304B\u308A\u307E\u305B\u3093\u3002')\n\n    if Path(path).suffix.lower() == '.heic':\n        img = read_heic_to_numpy(str(path))\n        img = cv2.cvtColor(img, cv2.COLOR_RGB2BGR)\n    else:\n        img = jpgread(path)\n        img = cv2.imread(str(path)) if img is None else img\n\n    if img is None:\n        if verbose:\n            warnings.warn(\"\u753B\u50CF\u304C None \u578B\u3067\u3059\u3002\")\n        return\n\n    if color_base != 'BGR':\n        img = imcvtcolor(img, cvt_mode=f'BGR2{color_base}')\n\n    return img\n"})}),"\n",(0,t.jsxs)(n.p,{children:["\u8A73\u7D30\u306A\u30B3\u30FC\u30C9\u306B\u3064\u3044\u3066\u306F\u4EE5\u4E0B\u3092\u53C2\u7167\u3057\u3066\u304F\u3060\u3055\u3044\uFF1A",(0,t.jsx)(n.a,{href:"https://github.com/DocsaidLab/DocsaidKit/blob/eb8ac0a56779a75dcc951c683001e6129052cc5a/docsaidkit/vision/improc.py#L197",children:"imread.py"})]})]})}function p(e={}){let{wrapper:n}={...(0,a.a)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(d,{...e})}):d(e)}},50065:function(e,n,i){i.d(n,{Z:function(){return c},a:function(){return o}});var r=i(67294);let t={},a=r.createContext(t);function o(e){let n=r.useContext(a);return r.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:o(e.components),r.createElement(a.Provider,{value:n},e.children)}},49957:function(e){e.exports=JSON.parse('{"permalink":"/ja/blog/opencv-imread","source":"@site/i18n/ja/docusaurus-plugin-content-blog/2024/02-13-imread/index.md","title":"Python \u3067 HEIC \u753B\u50CF\u3092\u8AAD\u307F\u8FBC\u3080","description":"OpenCV imread \u3092\u6700\u9069\u5316\u3057\u307E\u3057\u3087\u3046\uFF01","date":"2024-02-13T00:00:00.000Z","tags":[{"inline":true,"label":"HEIC","permalink":"/ja/blog/tags/heic"},{"inline":true,"label":"TurboJPEG","permalink":"/ja/blog/tags/turbo-jpeg"}],"readingTime":4.51,"hasTruncateMarker":true,"authors":[{"name":"Zephyr","title":"Engineer","url":"https://github.com/zephyr-sh","imageURL":"https://github.com/zephyr-sh.png","key":"Zephyr","page":null}],"frontMatter":{"slug":"opencv-imread","title":"Python \u3067 HEIC \u753B\u50CF\u3092\u8AAD\u307F\u8FBC\u3080","authors":"Zephyr","tags":["HEIC","TurboJPEG"],"image":"/ja/img/2024/0213.webp","description":"OpenCV imread \u3092\u6700\u9069\u5316\u3057\u307E\u3057\u3087\u3046\uFF01"},"unlisted":false,"prevItem":{"title":"Python \u3067 PDF \u3092\u753B\u50CF\u306B\u5909\u63DB\u3059\u308B","permalink":"/ja/blog/convert-pdf-to-images"},"nextItem":{"title":"\u65E5\u5E38\u30A8\u30E9\u30FC\u89E3\u6D88\u8A18\u9332","permalink":"/ja/blog/error-record"}}')}}]);