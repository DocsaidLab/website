const fs = require('fs');
const path = require('path');

/** @type {import('@docusaurus/plugin-content-docs').SidebarsConfig} */
function generateSidebar() {
  const baseDir = path.join(__dirname, 'papers'); // Adjust this path if your docs directory is located elsewhere
  const categories = fs.readdirSync(baseDir).filter((item) => {
    const itemPath = path.join(baseDir, item);
    return fs.statSync(itemPath).isDirectory() && !item.startsWith('.');
  });

  const sidebarItems = [];

  sidebarItems.push('intro');

  categories.forEach((category) => {
    const categoryPath = path.join(baseDir, category);
    const count = countItemsInDirectory(categoryPath);

    // Read the '_category_.json' to get the original label and link
    const categoryJsonPath = path.join(categoryPath, '_category_.json');
    let label = category;
    let link = undefined;
    if (fs.existsSync(categoryJsonPath)) {
      const categoryJson = JSON.parse(fs.readFileSync(categoryJsonPath, 'utf8'));
      label = categoryJson.label || category;
      link = categoryJson.link;
    }

    // Append the count to the label
    label = `${label} (${count})`;

    const sidebarItem = {
      type: 'category',
      label: label,
      items: [{ type: 'autogenerated', dirName: category }],
    };

    if (link) {
      sidebarItem.link = link;
    }

    sidebarItems.push(sidebarItem);
  });

  return {
    papersSidebar: sidebarItems,
  };
}

function countItemsInDirectory(dirPath) {
  const items = fs.readdirSync(dirPath).filter((item) => {
    const itemPath = path.join(dirPath, item);
    if (item === '_category_.json' || item.startsWith('.')) return false;
    const stat = fs.statSync(itemPath);
    // Include only directories and markdown files
    return stat.isDirectory() || (stat.isFile() && item.endsWith('.md'));
  });
  return items.length;
}

export default generateSidebar();