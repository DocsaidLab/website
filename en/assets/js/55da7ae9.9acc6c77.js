"use strict";(self.webpackChunkblog=self.webpackChunkblog||[]).push([["23185"],{62069:function(n,e,o){o.r(e),o.d(e,{metadata:()=>t,contentTitle:()=>c,default:()=>d,assets:()=>l,toc:()=>a,frontMatter:()=>i});var t=JSON.parse('{"id":"capybara/funcs/structures/polygon_iou","title":"polygon_iou","description":"polygon_iou(poly1 Polygon) -> float","source":"@site/i18n/en/docusaurus-plugin-content-docs/current/capybara/funcs/structures/polygon_iou.md","sourceDirName":"capybara/funcs/structures","slug":"/capybara/funcs/structures/polygon_iou","permalink":"/en/docs/capybara/funcs/structures/polygon_iou","draft":false,"unlisted":false,"tags":[],"version":"current","lastUpdatedBy":"zephyr-sh","lastUpdatedAt":1734619776000,"sidebarPosition":9,"frontMatter":{"sidebar_position":9},"sidebar":"tutorialSidebar","previous":{"title":"pairwise_ioa","permalink":"/en/docs/capybara/funcs/structures/pairwise_ioa"},"next":{"title":"jaccard_index","permalink":"/en/docs/capybara/funcs/structures/jaccard_index"}}'),r=o("85893"),s=o("50065");let i={sidebar_position:9},c="polygon_iou",l={},a=[];function u(n){let e={a:"a",blockquote:"blockquote",code:"code",h1:"h1",header:"header",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,s.a)(),...n.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(e.header,{children:(0,r.jsx)(e.h1,{id:"polygon_iou",children:"polygon_iou"})}),"\n",(0,r.jsxs)(e.blockquote,{children:["\n",(0,r.jsx)(e.p,{children:(0,r.jsx)(e.a,{href:"https://github.com/DocsaidLab/DocsaidKit/blob/6db820b92e709b61f1848d7583a3fa856b02716f/docsaidkit/structures/functionals.py#L166",children:"polygon_iou(poly1: Polygon, poly2: Polygon) -> float"})}),"\n"]}),"\n",(0,r.jsxs)(e.ul,{children:["\n",(0,r.jsxs)(e.li,{children:["\n",(0,r.jsx)(e.p,{children:(0,r.jsx)(e.strong,{children:"Description"})}),"\n",(0,r.jsxs)(e.p,{children:[(0,r.jsx)(e.code,{children:"polygon_iou"})," is a function used to compute the Intersection over Union (IoU) between two polygons. This function calculates the ratio of intersection area to union area between the two polygons. The input polygon types must be ",(0,r.jsx)(e.code,{children:"Polygon"}),"."]}),"\n"]}),"\n",(0,r.jsxs)(e.li,{children:["\n",(0,r.jsx)(e.p,{children:(0,r.jsx)(e.strong,{children:"Parameters"})}),"\n",(0,r.jsxs)(e.ul,{children:["\n",(0,r.jsxs)(e.li,{children:[(0,r.jsx)(e.strong,{children:"poly1"})," (",(0,r.jsx)(e.code,{children:"Polygon"}),"): The predicted polygon."]}),"\n",(0,r.jsxs)(e.li,{children:[(0,r.jsx)(e.strong,{children:"poly2"})," (",(0,r.jsx)(e.code,{children:"Polygon"}),"): The ground truth polygon."]}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(e.li,{children:["\n",(0,r.jsx)(e.p,{children:(0,r.jsx)(e.strong,{children:"Example"})}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:"language-python",children:"import docsaidkit as D\n\npoly1 = D.Polygon([(0, 0), (0, 1), (1, 1), (1, 0)])\npoly2 = D.Polygon([(0.5, 0.5), (0.5, 1.5), (1.5, 1.5), (1.5, 0.5)])\niou = D.polygon_iou(poly1, poly2)\nprint(iou)\n# >>> 0.14285714285714285\n"})}),"\n"]}),"\n"]})]})}function d(n={}){let{wrapper:e}={...(0,s.a)(),...n.components};return e?(0,r.jsx)(e,{...n,children:(0,r.jsx)(u,{...n})}):u(n)}},50065:function(n,e,o){o.d(e,{Z:function(){return c},a:function(){return i}});var t=o(67294);let r={},s=t.createContext(r);function i(n){let e=t.useContext(s);return t.useMemo(function(){return"function"==typeof n?n(e):{...e,...n}},[e,n])}function c(n){let e;return e=n.disableParentContext?"function"==typeof n.components?n.components(r):n.components||r:i(n.components),t.createElement(s.Provider,{value:e},n.children)}}}]);