"use strict";(self.webpackChunkdocsaid_website=self.webpackChunkdocsaid_website||[]).push([["71786"],{76308:function(n,e,t){t.r(e),t.d(e,{metadata:()=>r,contentTitle:()=>o,default:()=>h,assets:()=>a,toc:()=>l,frontMatter:()=>c});var r=JSON.parse('{"id":"capybara/funcs/powerdict","title":"PowerDict","description":"PowerDict(d=None, \\\\\\\\kwargs)","source":"@site/i18n/en/docusaurus-plugin-content-docs/current/capybara/funcs/powerdict.md","sourceDirName":"capybara/funcs","slug":"/capybara/funcs/powerdict","permalink":"/en/docs/capybara/funcs/powerdict","draft":false,"unlisted":false,"tags":[],"version":"current","lastUpdatedBy":"zephyr-sh","lastUpdatedAt":1734942587000,"frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"write_metadata_into_onnx","permalink":"/en/docs/capybara/funcs/onnxengine/write_metadata_into_onnx"},"next":{"title":"Structures","permalink":"/en/docs/category/structures"}}'),i=t("85893"),s=t("50065");let c={},o="PowerDict",a={},l=[];function d(n){let e={a:"a",blockquote:"blockquote",code:"code",h1:"h1",header:"header",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,s.a)(),...n.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(e.header,{children:(0,i.jsx)(e.h1,{id:"powerdict",children:"PowerDict"})}),"\n",(0,i.jsxs)(e.blockquote,{children:["\n",(0,i.jsx)(e.p,{children:(0,i.jsx)(e.a,{href:"https://github.com/DocsaidLab/Capybara/blob/975d62fba4f76db59e715c220f7a2af5ad8d050e/capybara/utils/powerdict.py#L10",children:"PowerDict(d=None, **kwargs)"})}),"\n"]}),"\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsxs)(e.li,{children:["\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.strong,{children:"Description"}),": This class is used to create a dictionary with freeze and melt functionality, allowing access to internal attributes via the ",(0,i.jsx)(e.code,{children:"."})," operator."]}),"\n"]}),"\n",(0,i.jsxs)(e.li,{children:["\n",(0,i.jsx)(e.p,{children:(0,i.jsx)(e.strong,{children:"Attributes"})}),"\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsxs)(e.li,{children:[(0,i.jsx)(e.strong,{children:"is_frozen"})," (",(0,i.jsx)(e.code,{children:"bool"}),"): Indicates whether the dictionary is frozen."]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(e.li,{children:["\n",(0,i.jsx)(e.p,{children:(0,i.jsx)(e.strong,{children:"Methods"})}),"\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsxs)(e.li,{children:[(0,i.jsx)(e.strong,{children:"freeze()"}),": Freezes the dictionary."]}),"\n",(0,i.jsxs)(e.li,{children:[(0,i.jsx)(e.strong,{children:"melt()"}),": Unfreezes the dictionary."]}),"\n",(0,i.jsxs)(e.li,{children:[(0,i.jsx)(e.strong,{children:"to_dict()"}),": Converts the dictionary to a standard dictionary."]}),"\n",(0,i.jsxs)(e.li,{children:[(0,i.jsx)(e.strong,{children:"to_json(path: Union[str, Path]) -> None"}),": Writes the dictionary to a JSON file."]}),"\n",(0,i.jsxs)(e.li,{children:[(0,i.jsx)(e.strong,{children:"to_yaml(path: Union[str, Path]) -> None"}),": Writes the dictionary to a YAML file."]}),"\n",(0,i.jsxs)(e.li,{children:[(0,i.jsx)(e.strong,{children:"to_txt(path: Union[str, Path]) -> None"}),": Writes the dictionary to a TXT file."]}),"\n",(0,i.jsxs)(e.li,{children:[(0,i.jsx)(e.strong,{children:"to_pickle(path: Union[str, Path]) -> None"}),": Writes the dictionary to a pickle file."]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(e.li,{children:["\n",(0,i.jsx)(e.p,{children:(0,i.jsx)(e.strong,{children:"Class Methods"})}),"\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsxs)(e.li,{children:[(0,i.jsx)(e.strong,{children:"load_json(path: Union[str, Path]) -> PowerDict"}),": Loads a dictionary from a JSON file."]}),"\n",(0,i.jsxs)(e.li,{children:[(0,i.jsx)(e.strong,{children:"load_pickle(path: Union[str, Path]) -> PowerDict"}),": Loads a dictionary from a pickle file."]}),"\n",(0,i.jsxs)(e.li,{children:[(0,i.jsx)(e.strong,{children:"load_yaml(path: Union[str, Path]) -> PowerDict"}),": Loads a dictionary from a YAML file."]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(e.li,{children:["\n",(0,i.jsx)(e.p,{children:(0,i.jsx)(e.strong,{children:"Parameters"})}),"\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsxs)(e.li,{children:[(0,i.jsx)(e.strong,{children:"d"})," (",(0,i.jsx)(e.code,{children:"dict"}),"): The dictionary to be converted. Default is None."]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(e.li,{children:["\n",(0,i.jsx)(e.p,{children:(0,i.jsx)(e.strong,{children:"Example"})}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-python",children:"from capybara import PowerDict\n\nd = {'key': 'value'}\ncfg = PowerDict(d)\nprint(cfg.key)\n# >>> 'value'\n"})}),"\n"]}),"\n"]})]})}function h(n={}){let{wrapper:e}={...(0,s.a)(),...n.components};return e?(0,i.jsx)(e,{...n,children:(0,i.jsx)(d,{...n})}):d(n)}},50065:function(n,e,t){t.d(e,{Z:function(){return o},a:function(){return c}});var r=t(67294);let i={},s=r.createContext(i);function c(n){let e=r.useContext(s);return r.useMemo(function(){return"function"==typeof n?n(e):{...e,...n}},[e,n])}function o(n){let e;return e=n.disableParentContext?"function"==typeof n.components?n.components(i):n.components||i:c(n.components),r.createElement(s.Provider,{value:e},n.children)}}}]);