"use strict";(self.webpackChunkdocsaid_website=self.webpackChunkdocsaid_website||[]).push([["36831"],{36691:function(e,n,r){r.r(n),r.d(n,{frontMatter:()=>c,default:()=>p,contentTitle:()=>i,assets:()=>o,toc:()=>d,metadata:()=>t});var t=JSON.parse('{"id":"capybara/funcs/structures/jaccard_index","title":"jaccard_index","description":"jaccardindex(predpoly np.ndarray, imagesize: Tuple[int, int]) -> float","source":"@site/i18n/en/docusaurus-plugin-content-docs/current/capybara/funcs/structures/jaccard_index.md","sourceDirName":"capybara/funcs/structures","slug":"/capybara/funcs/structures/jaccard_index","permalink":"/en/docs/capybara/funcs/structures/jaccard_index","draft":false,"unlisted":false,"tags":[],"version":"current","lastUpdatedBy":"zephyr-sh","lastUpdatedAt":1734942587000,"sidebarPosition":10,"frontMatter":{"sidebar_position":10},"sidebar":"tutorialSidebar","previous":{"title":"polygon_iou","permalink":"/en/docs/capybara/funcs/structures/polygon_iou"},"next":{"title":"SystemInfo","permalink":"/en/docs/capybara/funcs/system_info"}}'),a=r(85893),s=r(50065);let c={sidebar_position:10},i="jaccard_index",o={},d=[];function l(e){let n={a:"a",blockquote:"blockquote",code:"code",h1:"h1",header:"header",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,s.a)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(n.header,{children:(0,a.jsx)(n.h1,{id:"jaccard_index",children:"jaccard_index"})}),"\n",(0,a.jsxs)(n.blockquote,{children:["\n",(0,a.jsx)(n.p,{children:(0,a.jsx)(n.a,{href:"https://github.com/DocsaidLab/Capybara/blob/975d62fba4f76db59e715c220f7a2af5ad8d050e/capybara/structures/functionals.py#L95",children:"jaccard_index(pred_poly: np.ndarray, gt_poly: np.ndarray, image_size: Tuple[int, int]) -> float"})}),"\n"]}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsxs)(n.li,{children:["\n",(0,a.jsxs)(n.p,{children:[(0,a.jsx)(n.strong,{children:"Description"}),":"]}),"\n",(0,a.jsxs)(n.p,{children:[(0,a.jsx)(n.code,{children:"jaccard_index"})," is a function used to calculate the Jaccard index between two polygons. It computes the ratio of the intersection area to the union area of the two polygons. The input polygons must be of type ",(0,a.jsx)(n.code,{children:"np.ndarray"}),"."]}),"\n"]}),"\n",(0,a.jsxs)(n.li,{children:["\n",(0,a.jsx)(n.p,{children:(0,a.jsx)(n.strong,{children:"Parameters"})}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.strong,{children:"pred_poly"})," (",(0,a.jsx)(n.code,{children:"np.ndarray"}),"): The predicted polygon, represented by a 4-point polygon."]}),"\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.strong,{children:"gt_poly"})," (",(0,a.jsx)(n.code,{children:"np.ndarray"}),"): The ground truth polygon, represented by a 4-point polygon."]}),"\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.strong,{children:"image_size"})," (",(0,a.jsx)(n.code,{children:"Tuple[int, int]"}),"): The size of the image, in the format (height, width)."]}),"\n"]}),"\n"]}),"\n",(0,a.jsxs)(n.li,{children:["\n",(0,a.jsx)(n.p,{children:(0,a.jsx)(n.strong,{children:"Example"})}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-python",children:"import capybara as cb\n\npred_poly = np.array([[0, 0], [0, 1], [1, 1], [1, 0]])\ngt_poly = np.array([[0.5, 0.5], [0.5, 1.5], [1.5, 1.5], [1.5, 0.5]])\nimage_size = (2, 2)\njaccard_index = cb.jaccard_index(pred_poly, gt_poly, image_size)\nprint(jaccard_index)\n# >>> 0.14285714285714285\n"})}),"\n"]}),"\n"]})]})}function p(e={}){let{wrapper:n}={...(0,s.a)(),...e.components};return n?(0,a.jsx)(n,{...e,children:(0,a.jsx)(l,{...e})}):l(e)}},50065:function(e,n,r){r.d(n,{Z:()=>i,a:()=>c});var t=r(67294);let a={},s=t.createContext(a);function c(e){let n=t.useContext(s);return t.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function i(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:c(e.components),t.createElement(s.Provider,{value:n},e.children)}}}]);