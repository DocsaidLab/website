"use strict";(self.webpackChunkblog=self.webpackChunkblog||[]).push([[63414],{64492:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>a,default:()=>d,frontMatter:()=>o,metadata:()=>i,toc:()=>h});var i=n(15186),s=n(74848),r=n(28453);const o={slug:"pytorch-training-out-of-memory",title:"The Pitfall of Lists in PyTorch",authors:"Zephyr",tags:["PyTorch","OOM"],image:"/en/img/2024/0220.webp",description:"Resolving PyTorch OOM Issues."},a=void 0,l={authorsImageUrls:[void 0]},h=[{value:"I&#39;ve written code like this, why haven&#39;t I experienced any issues?",id:"ive-written-code-like-this-why-havent-i-experienced-any-issues",level:2}];function c(e){const t={code:"code",h2:"h2",hr:"hr",img:"img",li:"li",p:"p",pre:"pre",ul:"ul",...(0,r.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)("figure",{children:(0,s.jsxs)(t.p,{children:[(0,s.jsx)(t.img,{alt:"title",src:n(11987).A+"",width:"1024",height:"1024"}),"\n",(0,s.jsx)("figcaption",{children:"Cover Image: Automatically generated by GPT-4 after reading this article"})]})}),"\n",(0,s.jsx)(t.hr,{}),"\n",(0,s.jsx)(t.p,{children:"As a seasoned PyTorch user, you should be well-versed in techniques for model training, parameter tuning, and optimization. How could you possibly still end up with an OOM (Out of Memory) error?"}),"\n",(0,s.jsx)(t.hr,{}),"\n",(0,s.jsxs)(t.ul,{children:["\n",(0,s.jsx)(t.li,{children:"Please note, we're talking about system memory here, not GPU memory."}),"\n",(0,s.jsx)(t.li,{children:"Of course, GPU memory is also a common concern, but we're not discussing that here."}),"\n"]}),"\n",(0,s.jsx)(t.hr,{}),"\n",(0,s.jsx)(t.p,{children:"With OOM issues stemming from various causes, this time we'll focus on one commonly encountered by professionals:"}),"\n",(0,s.jsxs)(t.ul,{children:["\n",(0,s.jsx)(t.li,{children:"You might be using a List structure!"}),"\n"]}),"\n",(0,s.jsx)(t.p,{children:"After investigation, we've pinpointed the exact scenario where leaks occur."}),"\n",(0,s.jsx)(t.p,{children:"Consider the following code snippet:"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-python",children:"from torch.utils.data import Dataset, DataLoader\nimport numpy as np\nimport torch\n\n\nclass DataIter(Dataset):\n\n    def __init__(self):\n        self.data_np = np.array([x for x in range(10000000)])\n        self.data = [x for x in range(10000000)]\n\n    def __len__(self):\n        return len(self.data)\n\n    def __getitem__(self, idx):\n        data = self.data[idx]\n        data = np.array([data], dtype=np.int64)\n        return torch.tensor(data)\n\n\ntrain_data = DataIter()\ntrain_loader = DataLoader(train_data, batch_size=300, num_workers=18)\n\nfor i, item in enumerate(train_loader):\n    if i % 1000 == 0:\n        print(i)\n"})}),"\n",(0,s.jsx)(t.hr,{}),"\n",(0,s.jsx)(t.p,{children:"Cutting to the chase after examining this example:"}),"\n",(0,s.jsxs)(t.p,{children:["See the ",(0,s.jsx)(t.code,{children:"self.data"})," List? That's what leads to the OOM problem."]}),"\n",(0,s.jsx)(t.p,{children:"We attempted to find related information and it seems this isn't a PyTorch issue but rather a Python one."}),"\n",(0,s.jsx)(t.p,{children:"In essence, refrain from using Lists; use NumPy or Tensors to store data, and you won't encounter OOM problems."}),"\n",(0,s.jsx)(t.p,{children:"At least, that's effective in this example."}),"\n",(0,s.jsx)(t.hr,{}),"\n",(0,s.jsx)(t.h2,{id:"ive-written-code-like-this-why-havent-i-experienced-any-issues",children:"I've written code like this, why haven't I experienced any issues?"}),"\n",(0,s.jsx)(t.p,{children:"The world is a beautiful place until you encounter a large dataset."}),"\n",(0,s.jsx)(t.p,{children:"Based on my own testing, when the dataset is small, using Lists doesn't trigger memory leaks."}),"\n",(0,s.jsx)(t.p,{children:"More specifically, with just over ten thousand data points, there's no issue; but with over a million, it blows up."}),"\n",(0,s.jsx)(t.p,{children:"So, if your dataset isn't large, you might never encounter this problem."}),"\n",(0,s.jsx)(t.p,{children:"As for the threshold of data size, I'm unsure. I speculate it's a moment of interaction between Python or PyTorch that triggers the anomaly."})]})}function d(e={}){const{wrapper:t}={...(0,r.R)(),...e.components};return t?(0,s.jsx)(t,{...e,children:(0,s.jsx)(c,{...e})}):c(e)}},11987:(e,t,n)=>{n.d(t,{A:()=>i});const i=n.p+"assets/images/0220-4d2f7cd9eb321330653be4207feb6758.webp"},28453:(e,t,n)=>{n.d(t,{R:()=>o,x:()=>a});var i=n(96540);const s={},r=i.createContext(s);function o(e){const t=i.useContext(r);return i.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function a(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:o(e.components),i.createElement(r.Provider,{value:t},e.children)}},15186:e=>{e.exports=JSON.parse('{"permalink":"/en/blog/pytorch-training-out-of-memory","source":"@site/i18n/en/docusaurus-plugin-content-blog/2024/02-20-pytorch-training-oom/index.md","title":"The Pitfall of Lists in PyTorch","description":"Resolving PyTorch OOM Issues.","date":"2024-02-20T00:00:00.000Z","tags":[{"inline":true,"label":"PyTorch","permalink":"/en/blog/tags/py-torch"},{"inline":true,"label":"OOM","permalink":"/en/blog/tags/oom"}],"readingTime":1.74,"hasTruncateMarker":true,"authors":[{"name":"Zephyr","title":"Engineer","url":"https://github.com/zephyr-sh","imageURL":"https://github.com/zephyr-sh.png","key":"Zephyr","page":null}],"frontMatter":{"slug":"pytorch-training-out-of-memory","title":"The Pitfall of Lists in PyTorch","authors":"Zephyr","tags":["PyTorch","OOM"],"image":"/en/img/2024/0220.webp","description":"Resolving PyTorch OOM Issues."},"unlisted":false,"prevItem":{"title":"Setting Up Nextcloud Guide","permalink":"/en/blog/setting-up-nextcloud"},"nextItem":{"title":"Convert PDF to Images using Python","permalink":"/en/blog/convert-pdf-to-images"}}')}}]);