"use strict";(self.webpackChunkdocsaid_website=self.webpackChunkdocsaid_website||[]).push([["12270"],{88005:function(e,n,r){r.r(n),r.d(n,{metadata:()=>s,contentTitle:()=>a,default:()=>h,assets:()=>t,toc:()=>d,frontMatter:()=>o});var s=JSON.parse('{"id":"capybara/funcs/vision/improc/imread","title":"imread","description":"imread(path str = \'BGR\', verbose: bool = False) -> Union[np.ndarray, None]","source":"@site/i18n/en/docusaurus-plugin-content-docs/current/capybara/funcs/vision/improc/imread.md","sourceDirName":"capybara/funcs/vision/improc","slug":"/capybara/funcs/vision/improc/imread","permalink":"/en/docs/capybara/funcs/vision/improc/imread","draft":false,"unlisted":false,"tags":[],"version":"current","lastUpdatedBy":"zephyr-sh","lastUpdatedAt":1734942587000,"frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"imencode","permalink":"/en/docs/capybara/funcs/vision/improc/imencode"},"next":{"title":"imwrite","permalink":"/en/docs/capybara/funcs/vision/improc/imwrite"}}'),i=r("85893"),c=r("50065");let o={},a="imread",t={},d=[];function l(e){let n={a:"a",blockquote:"blockquote",code:"code",h1:"h1",header:"header",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,c.a)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.header,{children:(0,i.jsx)(n.h1,{id:"imread",children:"imread"})}),"\n",(0,i.jsxs)(n.blockquote,{children:["\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.a,{href:"https://github.com/DocsaidLab/Capybara/blob/975d62fba4f76db59e715c220f7a2af5ad8d050e/capybara/vision/improc.py#L197",children:"imread(path: Union[str, Path], color_base: str = 'BGR', verbose: bool = False) -> Union[np.ndarray, None]"})}),"\n"]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Description"}),": Reads an image using different methods based on the image format. Supported formats are as follows:"]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:".heic"}),": Uses ",(0,i.jsx)(n.code,{children:"read_heic_to_numpy"})," to read and converts to ",(0,i.jsx)(n.code,{children:"BGR"})," format."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:".jpg"}),": Uses ",(0,i.jsx)(n.code,{children:"jpgread"})," to read and converts to ",(0,i.jsx)(n.code,{children:"BGR"})," format."]}),"\n",(0,i.jsxs)(n.li,{children:["Other formats: Uses ",(0,i.jsx)(n.code,{children:"cv2.imread"})," to read and converts to ",(0,i.jsx)(n.code,{children:"BGR"})," format."]}),"\n",(0,i.jsxs)(n.li,{children:["If ",(0,i.jsx)(n.code,{children:"jpgread"})," returns ",(0,i.jsx)(n.code,{children:"None"}),", ",(0,i.jsx)(n.code,{children:"cv2.imread"})," will be used as a fallback."]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Parameters"}),":"]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"path"})," (",(0,i.jsx)(n.code,{children:"Union[str, Path]"}),"): The path to the image file."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"color_base"})," (",(0,i.jsx)(n.code,{children:"str"}),"): The color space of the image. If it is not ",(0,i.jsx)(n.code,{children:"BGR"}),", the function will convert it using the ",(0,i.jsx)(n.code,{children:"imcvtcolor"})," function. Default is ",(0,i.jsx)(n.code,{children:"BGR"}),"."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"verbose"})," (",(0,i.jsx)(n.code,{children:"bool"}),"): If set to ",(0,i.jsx)(n.code,{children:"True"}),", a warning will be issued when the image read result is ",(0,i.jsx)(n.code,{children:"None"}),". Default is ",(0,i.jsx)(n.code,{children:"False"}),"."]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Return value"}),":"]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"np.ndarray"}),": Returns the image as a NumPy ndarray if successful, otherwise returns ",(0,i.jsx)(n.code,{children:"None"}),"."]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Example"}),":"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-python",children:"import capybara as cb\n\nimg = cb.imread('lena.png')\n"})}),"\n"]}),"\n"]})]})}function h(e={}){let{wrapper:n}={...(0,c.a)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(l,{...e})}):l(e)}},50065:function(e,n,r){r.d(n,{Z:function(){return a},a:function(){return o}});var s=r(67294);let i={},c=s.createContext(i);function o(e){let n=s.useContext(c);return s.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:o(e.components),s.createElement(c.Provider,{value:n},e.children)}}}]);