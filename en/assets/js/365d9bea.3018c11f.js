"use strict";(self.webpackChunkblog=self.webpackChunkblog||[]).push([[7516],{27879:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>h,contentTitle:()=>c,default:()=>m,frontMatter:()=>s,metadata:()=>d,toc:()=>g});var i=t(74848),o=t(28453),l=t(96540);const r=e=>{let{chooseFileLabel:n,uploadButtonLabel:t,downloadButtonLabel:o,clearButtonLabel:r,processingMessage:a,errorMessage:s,warningMessage:c,imageInfoTitle:d,inferenceInfoTitle:h,polygonInfoTitle:g,inferenceTimeLabel:u,timestampLabel:m,fileNameLabel:p,fileSizeLabel:f,fileTypeLabel:x,imageSizeLabel:w,externalImage:j}=e;const y=(0,l.useRef)(null),b=(0,l.useRef)(null),I=(0,l.useRef)(null),[L,T]=(0,l.useState)(null),[v,M]=(0,l.useState)(!1),[S,F]=(0,l.useState)(null),[P,D]=(0,l.useState)(null),[k,B]=(0,l.useState)(null),[C,R]=(0,l.useState)(null),[N,z]=(0,l.useState)(1),[A,E]=(0,l.useState)(0),[_,$]=(0,l.useState)(0),[O,U]=(0,l.useState)(null);(0,l.useEffect)((()=>{j&&W(j)}),[j]);const W=e=>{const n=b.current;G(),F(null),D(null),T(null),B(null);const t=new Image;t.crossOrigin="Anonymous",t.onload=function(){const e=t.width,i=t.height;let o=1;(t.width>1e3||t.height>1e3)&&(o=1e3/Math.max(t.width,t.height)),z(o);const l=t.width*o,r=t.height*o;n.width=l,n.height=r,(t.width>4e3||t.height>4e3)&&D(c.imageTooLarge);n.getContext("2d").drawImage(t,0,0,l,r),H(n,l,r),B({width:l,height:r}),R({width:e,height:i}),n.toBlob((function(e){const n=new File([e],"example.jpg",{type:"image/jpeg"});U(n)}),"image/jpeg")},t.src=e},V=e=>["image/jpeg","image/png","image/webp"].includes(e.type),G=()=>{T(null),D(null),B(null),R(null),U(null),E(0),z(1);const e=b.current.getContext("2d"),n=I.current.getContext("2d");e.clearRect(0,0,b.current.width,b.current.height),n.clearRect(0,0,I.current.width,I.current.height)},H=(e,n,t)=>{const i=document.querySelector(".images-container").clientWidth/2-20;if(n>i){const o=t/n;e.style.width=`${i}px`,e.style.height=i*o+"px"}else e.style.width=`${n}px`,e.style.height=`${t}px`},J=(e,n)=>{const t=[[0,255,255],[0,255,0],[255,0,0],[255,255,0]],i=Y(n),o=i.length;i.forEach(((n,l)=>{const r=i[(l+1)%o],a=`rgb(${t[l%t.length].join(",")})`,s=Math.max(.005*e.canvas.width,1);e.beginPath(),e.arc(n[0],n[1],2*s,0,2*Math.PI,!1),e.fillStyle=a,e.fill(),q(e,n[0],n[1],r[0],r[1],s,a)}))},Y=e=>{const n=e.slice().sort(((e,n)=>e[1]-n[1])),t=n.slice(0,2),i=n.slice(2),[o,l]=t.sort(((e,n)=>e[0]-n[0])),[r,a]=i.sort(((e,n)=>e[0]-n[0]));return[o,l,a,r]},q=(e,n,t,i,o,l,r)=>{const a=5*l,s=Math.atan2(o-t,i-n);e.beginPath(),e.moveTo(n,t),e.lineTo(i,o),e.strokeStyle=r,e.lineWidth=l,e.stroke(),e.beginPath(),e.moveTo(i,o),e.lineTo(i-a*Math.cos(s-Math.PI/6),o-a*Math.sin(s-Math.PI/6)),e.lineTo(i-a*Math.cos(s+Math.PI/6),o-a*Math.sin(s+Math.PI/6)),e.lineTo(i,o),e.fillStyle=r,e.fill()},K=O||y.current&&y.current.files[0];return(0,i.jsxs)("div",{className:"doc-aligner-demo",children:[(0,i.jsx)("div",{children:(0,i.jsxs)("label",{className:"custom-file-upload",children:[(0,i.jsx)("input",{type:"file",ref:y,onChange:()=>{const e=y.current,n=b.current;if(G(),!e.files||0===e.files.length)return F(s.chooseFile),void G();const t=e.files[0];if(!V(t))return F(s.invalidFileType),void G();F(null),D(null),T(null),B(null);const i=new FileReader;i.onload=function(e){const i=new Image;i.onload=function(){const e=i.width,o=i.height;let l=1;(i.width>1e3||i.height>1e3)&&(l=1e3/Math.max(i.width,i.height)),z(l);const r=i.width*l,a=i.height*l;n.width=r,n.height=a,(i.width>4e3||i.height>4e3)&&D(c.imageTooLarge);n.getContext("2d").drawImage(i,0,0,r,a),H(n,r,a),B({width:r,height:a}),R({width:e,height:o}),n.toBlob((function(e){const n=new File([e],t.name,{type:t.type});U(n)}),t.type)},i.src=e.target.result},i.readAsDataURL(t)}}),n]})}),(0,i.jsx)("br",{}),k&&K&&C&&(0,i.jsxs)("div",{id:"imageInfo",children:[(0,i.jsx)("h3",{children:d}),(0,i.jsxs)("ul",{children:[(0,i.jsxs)("li",{children:[p,": ",K.name]}),(0,i.jsxs)("li",{children:[f,": ",Math.round(K.size/1024)," KB"]}),(0,i.jsxs)("li",{children:[x,": ",K.type]}),(0,i.jsxs)("li",{children:[w,": ",C.width," x ",C.height," pixel"]})]})]}),(0,i.jsxs)("div",{className:"images-container",children:[(0,i.jsx)("canvas",{ref:b}),(0,i.jsx)("canvas",{ref:I})]}),(0,i.jsxs)("div",{align:"center",children:[(0,i.jsx)("button",{id:"uploadButton",onClick:()=>{const e=b.current,n=I.current;let t=null;if(!O)return F(s.chooseFile),void G();if(t=O,!V(t))return F(s.invalidFileType),void G();M(!0),F(null),D(null),T(null);const i=new FormData;i.append("file",t),fetch("https://api.docsaid.org/docaligner-predict",{method:"POST",body:i}).then((e=>{if(!e.ok)throw new Error(s.networkError);return e.json()})).then((t=>{if(!t.polygon||0===t.polygon.length)return D(c.noPolygon),void M(!1);E(t.inference_time),$(t.timestamp);const i=t.polygon.map((e=>[e[0]/N,e[1]/N]));T({...t,polygon:i});const o=n.getContext("2d");o.clearRect(0,0,n.width,n.height),n.width=e.width,n.height=e.height,o.drawImage(e,0,0),H(n,e.width,e.height),J(o,t.polygon)})).catch((e=>{console.error("Error:",e),F(`${s.uploadError}: ${e.message||e}`)})).finally((()=>{M(!1)}))},children:t}),L&&!P&&(0,i.jsx)("button",{id:"downloadButton",onClick:()=>{if(!L)return;const e="data:text/json;charset=utf-8,"+encodeURIComponent(JSON.stringify(L)),n=document.createElement("a");n.setAttribute("href",e),n.setAttribute("download","prediction.json"),document.body.appendChild(n),n.click(),n.remove()},children:o}),(0,i.jsx)("button",{id:"clearButton",onClick:G,children:r})]}),v&&(0,i.jsx)("div",{id:"loadingIndicator",children:a}),S&&(0,i.jsx)("div",{id:"errorMessage",children:S}),P&&(0,i.jsx)("div",{id:"warningMessage",children:P}),(0,i.jsx)("hr",{}),k&&(0,i.jsxs)("div",{id:"imageInfo",children:[(0,i.jsx)("h3",{children:h}),(0,i.jsxs)("ul",{children:[(0,i.jsxs)("li",{children:[u,": ",A.toFixed(2)," sec "]}),(0,i.jsxs)("li",{children:[m,": ",_]})]})]}),(0,i.jsx)("hr",{}),L&&!P&&(0,i.jsxs)("div",{id:"polygonInfo",children:[(0,i.jsx)("h3",{children:g}),(0,i.jsx)("ul",{children:L.polygon.map(((e,n)=>(0,i.jsxs)("li",{children:["Point ",n+1,"\uff1a(",Math.round(e[0]),", ",Math.round(e[1]),")"]},n)))})]})]})},a=e=>{let{titleStage1:n,titleStage2:t,chooseFileLabel:o,uploadButtonLabel:a,downloadButtonLabel:s,clearButtonLabel:c,processingMessage:d,errorMessage:h,warningMessage:g,imageInfoTitle:u,inferenceInfoTitle:m,polygonInfoTitle:p,inferenceTimeLabel:f,timestampLabel:x,fileNameLabel:w,fileSizeLabel:j,fileTypeLabel:y,imageSizeLabel:b,defaultImages:I}=e;const[L,T]=(0,l.useState)(null);return(0,i.jsxs)("div",{children:[(0,i.jsx)("h2",{children:n}),(0,i.jsx)("div",{className:"image-grid",children:I.map(((e,n)=>(0,i.jsxs)("div",{children:[(0,i.jsx)("img",{src:e.src,alt:`example${n+1}`,onClick:()=>{return n=e.src,void T(n);var n}}),(0,i.jsx)("p",{children:e.description})]},n)))}),(0,i.jsx)("h2",{children:t}),(0,i.jsx)(r,{chooseFileLabel:o,uploadButtonLabel:a,downloadButtonLabel:s,clearButtonLabel:c,processingMessage:d,errorMessage:h,warningMessage:g,imageInfoTitle:u,inferenceInfoTitle:m,polygonInfoTitle:p,inferenceTimeLabel:f,timestampLabel:x,fileNameLabel:w,fileSizeLabel:j,fileTypeLabel:y,imageSizeLabel:b,externalImage:L})]})},s={},c="DocAligner Demo",d={id:"docaligner-demo",title:"DocAligner Demo",description:"You can select a few images with documents from your file system to test this feature.",source:"@site/i18n/en/docusaurus-plugin-content-docs-playground/current/docaligner-demo.md",sourceDirName:".",slug:"/docaligner-demo",permalink:"/en/playground/docaligner-demo",draft:!1,unlisted:!1,tags:[],version:"current",lastUpdatedBy:"zephyr-sh",lastUpdatedAt:1728653436e3,frontMatter:{},sidebar:"playgroundSidebar",previous:{title:"Playground",permalink:"/en/playground/intro"}},h={},g=[];function u(e){const n={a:"a",admonition:"admonition",code:"code",h1:"h1",header:"header",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",...(0,o.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.header,{children:(0,i.jsx)(n.h1,{id:"docaligner-demo",children:"DocAligner Demo"})}),"\n",(0,i.jsx)(n.p,{children:"You can select a few images with documents from your file system to test this feature."}),"\n",(0,i.jsx)(n.p,{children:"If you can't find images immediately, we can borrow a few from the MIDV-2020 dataset for now:"}),"\n",(0,i.jsxs)(n.admonition,{type:"tip",children:[(0,i.jsx)(n.p,{children:"MIDV-2020 is an open-source dataset containing many document images, perfect for testing document analysis models."}),(0,i.jsxs)(n.p,{children:["If needed, you can download it here: ",(0,i.jsx)(n.a,{href:"http://l3i-share.univ-lr.fr/MIDV2020/midv2020.html",children:(0,i.jsx)(n.strong,{children:"MIDV-2020 Download"})})]})]}),"\n",(0,i.jsxs)(n.admonition,{type:"info",children:[(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Clicking on the images below will allow you to use them directly in the Demo."})}),(0,i.jsx)(n.p,{children:"These images perform well since they are from the training dataset, which the model has already seen!"}),(0,i.jsx)(n.p,{children:"However, in real-world applications, you might encounter a wider range of scenarios. So we recommend testing with a variety of images to better understand the model's performance."}),(0,i.jsx)(n.p,{children:"In the following demonstration, we use the inference code below:"}),(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-python",metastring:"title='python demo code'",children:"from docaligner import DocAligner\n\nmodel = DocAligner(model_cfg='fastvit_sa24')\npolygon = model(\n    img=input_img,\n    do_center_crop=False,\n    return_document_obj=False\n)\n"})}),(0,i.jsx)(n.p,{children:"When selecting images, please note the following:"}),(0,i.jsxs)(n.ol,{children:["\n",(0,i.jsx)(n.li,{children:"If the document's corners are outside the image, the model will not be able to find all four corners and will return an error message."}),"\n",(0,i.jsx)(n.li,{children:"If multiple documents are present in the image, the model may randomly select four corners from the many available."}),"\n"]}),(0,i.jsx)(n.p,{children:"With these reminders, we wish you a pleasant experience!"})]}),"\n","\n",(0,i.jsx)(a,{titleStage1:"Test Images",titleStage2:"Demo",chooseFileLabel:"Select File",uploadButtonLabel:"Upload and Predict",downloadButtonLabel:"Download Prediction Results",clearButtonLabel:"Clear Results",processingMessage:"Processing, please wait...",errorMessage:{chooseFile:"Please select a file",invalidFileType:"Only JPG, PNG, Webp images are supported",networkError:"Network error, please try again later.",uploadError:"An error occurred, please try again later."},warningMessage:{noPolygon:"No four corners detected. The model might not recognize this document type.",imageTooLarge:"The image is too large and may cause the browser to crash."},imageInfoTitle:"Image Information",inferenceInfoTitle:"Model Inference Information",polygonInfoTitle:"Detection Results",inferenceTimeLabel:"Inference Time",timestampLabel:"Timestamp",fileNameLabel:"File Name",fileSizeLabel:"File Size",fileTypeLabel:"File Type",imageSizeLabel:"Image Size",defaultImages:[{src:"/en/img/docalign-demo/000025.jpg",description:"Text Interference"},{src:"/en/img/docalign-demo/000121.jpg",description:"Partial Occlusion"},{src:"/en/img/docalign-demo/000139.jpg",description:"Strong Reflection"},{src:"/en/img/docalign-demo/000169.jpg",description:"Low Light Scene"},{src:"/en/img/docalign-demo/000175.jpg",description:"Highly Skewed"}]})]})}function m(e={}){const{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(u,{...e})}):u(e)}},28453:(e,n,t)=>{t.d(n,{R:()=>r,x:()=>a});var i=t(96540);const o={},l=i.createContext(o);function r(e){const n=i.useContext(l);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:r(e.components),i.createElement(l.Provider,{value:n},e.children)}}}]);