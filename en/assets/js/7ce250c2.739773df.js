"use strict";(self.webpackChunkdocsaid_website=self.webpackChunkdocsaid_website||[]).push([["77169"],{10274:function(n,t,s){s.r(t),s.d(t,{default:()=>u,frontMatter:()=>i,metadata:()=>e,assets:()=>l,toc:()=>d,contentTitle:()=>c});var e=JSON.parse('{"id":"docsaidkit/funcs/utils/colorstr","title":"colorstr","description":"colorstr(obj Union[COLORSTR, int, str] = COLORSTR.BLUE, fmt: Union[FORMATSTR, int, str] = FORMATSTR.BOLD) -> str","source":"@site/i18n/en/docusaurus-plugin-content-docs/current/docsaidkit/funcs/utils/colorstr.md","sourceDirName":"docsaidkit/funcs/utils","slug":"/docsaidkit/funcs/utils/colorstr","permalink":"/en/docs/docsaidkit/funcs/utils/colorstr","draft":false,"unlisted":false,"tags":[],"version":"current","lastUpdatedBy":"zephyr-sh","lastUpdatedAt":1713493370000,"sidebarPosition":20,"frontMatter":{"sidebar_position":20},"sidebar":"tutorialSidebar","previous":{"title":"make_batch","permalink":"/en/docs/docsaidkit/funcs/utils/make_batch"},"next":{"title":"download","permalink":"/en/docs/docsaidkit/funcs/utils/download"}}'),r=s("85893"),o=s("50065");let i={sidebar_position:20},c="colorstr",l={},d=[];function a(n){let t={a:"a",blockquote:"blockquote",code:"code",h1:"h1",header:"header",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,o.a)(),...n.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(t.header,{children:(0,r.jsx)(t.h1,{id:"colorstr",children:"colorstr"})}),"\n",(0,r.jsxs)(t.blockquote,{children:["\n",(0,r.jsx)(t.p,{children:(0,r.jsx)(t.a,{href:"https://github.com/DocsaidLab/DocsaidKit/blob/71170598902b6f8e89a969f1ce27ed4fd05b2ff2/docsaidkit/utils/utils.py#L37",children:"colorstr(obj: Any, color: Union[COLORSTR, int, str] = COLORSTR.BLUE, fmt: Union[FORMATSTR, int, str] = FORMATSTR.BOLD) -> str"})}),"\n"]}),"\n",(0,r.jsxs)(t.ul,{children:["\n",(0,r.jsxs)(t.li,{children:["\n",(0,r.jsxs)(t.p,{children:[(0,r.jsx)(t.strong,{children:"Description"}),": This function is used to convert Python objects into colored strings."]}),"\n"]}),"\n",(0,r.jsxs)(t.li,{children:["\n",(0,r.jsxs)(t.p,{children:[(0,r.jsx)(t.strong,{children:"Parameters"}),":"]}),"\n",(0,r.jsxs)(t.ul,{children:["\n",(0,r.jsxs)(t.li,{children:[(0,r.jsx)(t.strong,{children:"obj"})," (",(0,r.jsx)(t.code,{children:"Any"}),"): Python object to be converted into a colored string."]}),"\n",(0,r.jsxs)(t.li,{children:[(0,r.jsx)(t.strong,{children:"color"})," (",(0,r.jsx)(t.code,{children:"Union[COLORSTR, int, str]"}),"): Color of the object. Default is ",(0,r.jsx)(t.code,{children:"COLORSTR.BLUE"}),"."]}),"\n",(0,r.jsxs)(t.li,{children:[(0,r.jsx)(t.strong,{children:"fmt"})," (",(0,r.jsx)(t.code,{children:"Union[FORMATSTR, int, str]"}),"): Format of the object. Default is ",(0,r.jsx)(t.code,{children:"FORMATSTR.BOLD"}),"."]}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(t.li,{children:["\n",(0,r.jsxs)(t.p,{children:[(0,r.jsx)(t.strong,{children:"Returns"}),":"]}),"\n",(0,r.jsxs)(t.ul,{children:["\n",(0,r.jsxs)(t.li,{children:[(0,r.jsx)(t.strong,{children:"str"}),": Colored string."]}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(t.li,{children:["\n",(0,r.jsxs)(t.p,{children:[(0,r.jsx)(t.strong,{children:"Example"}),":"]}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-python",children:"import docsaidkit as D\n\n# Print blue color string\nblue_str = D.colorstr('This is blue color string.', color='blue')\nprint(blue_str)\n\n# Print red color string with bold format\nred_str = D.colorstr('This is red color string with bold format.', color='red', fmt='bold')\nprint(red_str)\n"})}),"\n"]}),"\n"]})]})}function u(n={}){let{wrapper:t}={...(0,o.a)(),...n.components};return t?(0,r.jsx)(t,{...n,children:(0,r.jsx)(a,{...n})}):a(n)}},50065:function(n,t,s){s.d(t,{Z:function(){return c},a:function(){return i}});var e=s(67294);let r={},o=e.createContext(r);function i(n){let t=e.useContext(o);return e.useMemo(function(){return"function"==typeof n?n(t):{...t,...n}},[t,n])}function c(n){let t;return t=n.disableParentContext?"function"==typeof n.components?n.components(r):n.components||r:i(n.components),e.createElement(o.Provider,{value:t},n.children)}}}]);