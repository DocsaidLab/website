"use strict";(self.webpackChunkdocsaid_website=self.webpackChunkdocsaid_website||[]).push([["33856"],{76335:function(e,n,i){i.r(n),i.d(n,{default:()=>p,frontMatter:()=>s,metadata:()=>r,assets:()=>t,toc:()=>c,contentTitle:()=>d});var r=JSON.parse('{"id":"capybara/funcs/vision/improc/jpg_process","title":"JPG Process","description":"getorientationcode(stream: Union[str, Path, bytes]) -> Union[ROTATE, None]","source":"@site/i18n/en/docusaurus-plugin-content-docs/current/capybara/funcs/vision/improc/jpg_process.md","sourceDirName":"capybara/funcs/vision/improc","slug":"/capybara/funcs/vision/improc/jpg_process","permalink":"/en/docs/capybara/funcs/vision/improc/jpg_process","draft":false,"unlisted":false,"tags":[],"version":"current","lastUpdatedBy":"zephyr-sh","lastUpdatedAt":1734942587000,"frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"imwrite","permalink":"/en/docs/capybara/funcs/vision/improc/imwrite"},"next":{"title":"npyread","permalink":"/en/docs/capybara/funcs/vision/improc/npyread"}}'),a=i("85893"),o=i("50065");let s={},d="JPG Process",t={},c=[{value:"Description",id:"description",level:2},{value:"Parameters",id:"parameters",level:2},{value:"jpgencode",id:"jpgencode",level:3},{value:"jpgdecode",id:"jpgdecode",level:3},{value:"jpgread",id:"jpgread",level:3},{value:"Example",id:"example",level:2},{value:"jpgencode",id:"jpgencode-1",level:3},{value:"jpgdecode",id:"jpgdecode-1",level:3},{value:"jpgread",id:"jpgread-1",level:3},{value:"Additional Notes: TurboJPEG",id:"additional-notes-turbojpeg",level:2}];function l(e){let n={a:"a",blockquote:"blockquote",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,o.a)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(n.header,{children:(0,a.jsx)(n.h1,{id:"jpg-process",children:"JPG Process"})}),"\n",(0,a.jsxs)(n.blockquote,{children:["\n",(0,a.jsx)(n.p,{children:(0,a.jsx)(n.a,{href:"https://github.com/DocsaidLab/Capybara/blob/975d62fba4f76db59e715c220f7a2af5ad8d050e/capybara/vision/improc.py#L34",children:"get_orientation_code(stream: Union[str, Path, bytes]) -> Union[ROTATE, None]"})}),"\n"]}),"\n",(0,a.jsxs)(n.blockquote,{children:["\n",(0,a.jsx)(n.p,{children:(0,a.jsx)(n.a,{href:"https://github.com/DocsaidLab/Capybara/blob/975d62fba4f76db59e715c220f7a2af5ad8d050e/capybara/vision/improc.py#L50",children:"jpgencode(img: np.ndarray, quality: int = 90) -> Union[bytes, None]"})}),"\n"]}),"\n",(0,a.jsxs)(n.blockquote,{children:["\n",(0,a.jsx)(n.p,{children:(0,a.jsx)(n.a,{href:"https://github.com/DocsaidLab/Capybara/blob/975d62fba4f76db59e715c220f7a2af5ad8d050e/capybara/vision/improc.py#L60",children:"jpgdecode(byte_: bytes) -> Union[np.ndarray, None]"})}),"\n"]}),"\n",(0,a.jsxs)(n.blockquote,{children:["\n",(0,a.jsx)(n.p,{children:(0,a.jsx)(n.a,{href:"https://github.com/DocsaidLab/Capybara/blob/975d62fba4f76db59e715c220f7a2af5ad8d050e/capybara/vision/improc.py#L72",children:"jpgread(img_file: Union[str, Path]) -> Union[np.ndarray, None]"})}),"\n"]}),"\n",(0,a.jsx)(n.p,{children:"These functions provide support for encoding, decoding, and reading JPG images, as well as automatically adjusting image orientation from EXIF data."}),"\n",(0,a.jsx)(n.h2,{id:"description",children:"Description"}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.strong,{children:"get_orientation_code"}),": Extracts orientation information from the image's EXIF data and converts it into a code suitable for image rotation. This step is automatically performed in the ",(0,a.jsx)(n.code,{children:"jpgdecode"})," and ",(0,a.jsx)(n.code,{children:"jpgread"})," functions to ensure that the image is correctly oriented when read."]}),"\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.strong,{children:"jpgencode"}),": Encodes a NumPy image array into a JPG format byte string. The ",(0,a.jsx)(n.code,{children:"quality"})," parameter allows for balancing image quality and file size."]}),"\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.strong,{children:"jpgdecode"}),": Decodes a JPG format byte string into a NumPy image array, adjusting the image orientation based on EXIF data."]}),"\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.strong,{children:"jpgread"}),": Reads a JPG image file, decodes it into a NumPy image array, and adjusts the image orientation based on EXIF data."]}),"\n"]}),"\n",(0,a.jsx)(n.h2,{id:"parameters",children:"Parameters"}),"\n",(0,a.jsx)(n.h3,{id:"jpgencode",children:"jpgencode"}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.strong,{children:"img"})," (",(0,a.jsx)(n.code,{children:"np.ndarray"}),"): The image array to encode."]}),"\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.strong,{children:"quality"})," (",(0,a.jsx)(n.code,{children:"int"}),"): The encoding quality, ranging from 1 to 100. Default is 90."]}),"\n"]}),"\n",(0,a.jsx)(n.h3,{id:"jpgdecode",children:"jpgdecode"}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.strong,{children:"byte_"})," (",(0,a.jsx)(n.code,{children:"bytes"}),"): The JPG format byte string to decode."]}),"\n"]}),"\n",(0,a.jsx)(n.h3,{id:"jpgread",children:"jpgread"}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.strong,{children:"img_file"})," (",(0,a.jsx)(n.code,{children:"Union[str, Path]"}),"): The path to the JPG image file to read."]}),"\n"]}),"\n",(0,a.jsx)(n.h2,{id:"example",children:"Example"}),"\n",(0,a.jsx)(n.h3,{id:"jpgencode-1",children:"jpgencode"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-python",children:"import numpy as np\nimport capybara as cb\n\nimg_array = np.random.rand(100, 100, 3) * 255\nencoded_bytes = cb.jpgencode(img_array, quality=95)\n"})}),"\n",(0,a.jsx)(n.h3,{id:"jpgdecode-1",children:"jpgdecode"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-python",children:"decoded_img = cb.jpgdecode(encoded_bytes)\n"})}),"\n",(0,a.jsx)(n.h3,{id:"jpgread-1",children:"jpgread"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-python",children:"img_array = cb.jpgread('path/to/image.jpg')\n"})}),"\n",(0,a.jsx)(n.h2,{id:"additional-notes-turbojpeg",children:"Additional Notes: TurboJPEG"}),"\n",(0,a.jsxs)(n.p,{children:[(0,a.jsx)(n.a,{href:"https://github.com/libjpeg-turbo/libjpeg-turbo",children:(0,a.jsx)(n.strong,{children:"TurboJPEG"})})," is an efficient JPEG image processing library that offers fast encoding, decoding, compression, and decompression functionalities. The ",(0,a.jsx)(n.code,{children:"jpgencode"})," and ",(0,a.jsx)(n.code,{children:"jpgdecode"})," functions utilize ",(0,a.jsx)(n.code,{children:"TurboJPEG"})," for encoding and decoding JPG images. ",(0,a.jsx)(n.code,{children:"TurboJPEG"})," is a Python wrapper for ",(0,a.jsx)(n.code,{children:"libjpeg-turbo"}),", providing faster image processing speeds and supporting multiple image formats."]}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsxs)(n.li,{children:["\n",(0,a.jsxs)(n.p,{children:[(0,a.jsx)(n.strong,{children:"Features"}),":"]}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.strong,{children:"High efficiency"}),": Leverages the high-performance features of the libjpeg-turbo library, significantly improving image processing speed compared to traditional JPEG methods."]}),"\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.strong,{children:"Ease of use"}),": Provides a clear and simple API, making it easy for developers to implement efficient JPEG image processing in applications."]}),"\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.strong,{children:"Flexibility"}),": Supports various image quality and compression settings to meet different requirements for image quality and file size."]}),"\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.strong,{children:"Cross-platform"}),": Supports multiple operating systems, including Windows, macOS, and Linux, making it convenient for use in different development environments."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,a.jsx)(n.p,{children:"After installation, you can use TurboJPEG for encoding and decoding in Python as follows:"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-python",children:"from turbojpeg import TurboJPEG\n\n# Initialize TurboJPEG instance\njpeg = TurboJPEG()\n\n# Decode\nbgr_array = jpeg.decode(byte_)\n\n# Encode\nbyte_ = jpeg.encode(img, quality=quality)\n"})})]})}function p(e={}){let{wrapper:n}={...(0,o.a)(),...e.components};return n?(0,a.jsx)(n,{...e,children:(0,a.jsx)(l,{...e})}):l(e)}},50065:function(e,n,i){i.d(n,{Z:function(){return d},a:function(){return s}});var r=i(67294);let a={},o=r.createContext(a);function s(e){let n=r.useContext(o);return r.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function d(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:s(e.components),r.createElement(o.Provider,{value:n},e.children)}}}]);