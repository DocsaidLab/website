"use strict";(self.webpackChunkdocsaid_website=self.webpackChunkdocsaid_website||[]).push([["20283"],{77661:function(e,s,t){t.r(s),t.d(s,{frontMatter:()=>l,default:()=>d,contentTitle:()=>r,assets:()=>c,toc:()=>h,metadata:()=>n});var n=JSON.parse('{"id":"text-detection/mixnet/index","title":"[23.08] MixNet","description":"Multi-scale Shuffle Network","source":"@site/i18n/en/docusaurus-plugin-content-docs-papers/current/text-detection/2308-mixnet/index.md","sourceDirName":"text-detection/2308-mixnet","slug":"/text-detection/mixnet/","permalink":"/en/papers/text-detection/mixnet/","draft":false,"unlisted":false,"tags":[],"version":"current","lastUpdatedBy":"zephyr-sh","lastUpdatedAt":1739242156000,"frontMatter":{"title":"[23.08] MixNet","authors":"Z. Yuan"},"sidebar":"papersSidebar","previous":{"title":"[23.02] TCM","permalink":"/en/papers/text-detection/tcm/"},"next":{"title":"Text Recognition (20)","permalink":"/en/papers/category/text-recognition-20"}}'),i=t(85893),a=t(50065);let l={title:"[23.08] MixNet",authors:"Z. Yuan"},r=void 0,c={},h=[{value:"Multi-scale Shuffle Network",id:"multi-scale-shuffle-network",level:2},{value:"Problem Definition",id:"problem-definition",level:2},{value:"Solution",id:"solution",level:2},{value:"Model Architecture",id:"model-architecture",level:3},{value:"Feature Shuffle Network",id:"feature-shuffle-network",level:3},{value:"Central Transformer Block",id:"central-transformer-block",level:3},{value:"Implementation Details",id:"implementation-details",level:3},{value:"Discussion",id:"discussion",level:2},{value:"Effectiveness of FSNet",id:"effectiveness-of-fsnet",level:3},{value:"Ablation Study",id:"ablation-study",level:3},{value:"Comparison with Other Methods",id:"comparison-with-other-methods",level:3},{value:"Visualization Results",id:"visualization-results",level:3},{value:"Conclusion",id:"conclusion",level:2}];function o(e){let s={a:"a",admonition:"admonition",annotation:"annotation",h2:"h2",h3:"h3",hr:"hr",img:"img",li:"li",math:"math",mi:"mi",mn:"mn",mo:"mo",mrow:"mrow",msub:"msub",ol:"ol",p:"p",semantics:"semantics",span:"span",strong:"strong",ul:"ul",...(0,a.a)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(s.h2,{id:"multi-scale-shuffle-network",children:"Multi-scale Shuffle Network"}),"\n",(0,i.jsx)(s.p,{children:(0,i.jsx)(s.a,{href:"https://arxiv.org/abs/2308.12817",children:(0,i.jsx)(s.strong,{children:"MixNet: Toward Accurate Detection of Challenging Scene Text in the Wild"})})}),"\n",(0,i.jsx)(s.hr,{}),"\n",(0,i.jsx)(s.p,{children:"As the performance on validation datasets approaches saturation, the key to success lies in the accuracy of the final text control points."}),"\n",(0,i.jsx)(s.p,{children:"Background noise might be a problem that must be addressed."}),"\n",(0,i.jsx)(s.h2,{id:"problem-definition",children:"Problem Definition"}),"\n",(0,i.jsx)(s.p,{children:"When detecting text in natural scenes, text blocks often appear in arbitrary shapes and orientations. In small and curved text instances, traditional convolutional neural network-based detection methods are easily disturbed by localized noise and variations in image quality, making it difficult to stably and accurately capture the global geometric distribution characteristics of the text."}),"\n",(0,i.jsx)(s.p,{children:"The authors believe the issue here lies in existing methods focusing on local image features, ignoring the global information about the overall text's geometric distribution. As a result, when facing small, curved text or interference from lighting and background noise, the robustness of detection significantly decreases."}),"\n",(0,i.jsx)(s.p,{children:"Additionally, in commonly used backbone networks (such as ResNet, VGG, HRNet), when providing high-resolution features, it is difficult to extract clear and easily measurable information due to noise interference, which is especially unfavorable for small text instances."}),"\n",(0,i.jsx)(s.p,{children:'Therefore, the core problem the authors aim to solve is how to "maintain the intercommunication between high and low-resolution features" to reduce the negative impact of noise interference on high-resolution features.'}),"\n",(0,i.jsx)(s.h2,{id:"solution",children:"Solution"}),"\n",(0,i.jsx)(s.h3,{id:"model-architecture",children:"Model Architecture"}),"\n",(0,i.jsx)("div",{align:"center",children:(0,i.jsx)("figure",{style:{width:"90%"},children:(0,i.jsx)(s.p,{children:(0,i.jsx)(s.img,{alt:"model architecture",src:t(84981).Z+"",width:"1456",height:"630"})})})}),"\n",(0,i.jsx)(s.p,{children:"To solve the problem of feature communication, most CNN architectures heavily rely on local convolution operations and lack effective cross-scale feature communication channels, making it difficult to fully utilize the noise suppression ability of low-resolution features."}),"\n",(0,i.jsx)(s.p,{children:'In this paper, the authors propose a new network structure that combines the Backbone and Neck parts, allowing high- and low-resolution features to interweave and jointly produce more robust, fine, and noise-resistant representations. This structure is called "Feature Shuffle Network," abbreviated as FSNet.'}),"\n",(0,i.jsx)(s.p,{children:'Another part of the system is based on the features generated by FSNet to refine the control points of text instances. This part is called the "Central Transformer Block."'}),"\n",(0,i.jsx)(s.p,{children:"Let\u2019s first look at the structure of FSNet."}),"\n",(0,i.jsx)(s.h3,{id:"feature-shuffle-network",children:"Feature Shuffle Network"}),"\n",(0,i.jsx)("div",{align:"center",children:(0,i.jsx)("figure",{style:{width:"80%"},children:(0,i.jsx)(s.p,{children:(0,i.jsx)(s.img,{alt:"channel shuffle network",src:t(49361).Z+"",width:"2809",height:"1567"})})})}),"\n",(0,i.jsx)(s.p,{children:"At first glance, this structure may seem a bit complicated, but it is actually based on a simple concept. Let's break it down:"}),"\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsxs)(s.li,{children:[(0,i.jsx)(s.strong,{children:"Red box part"}),": This corresponds to the feature extraction part of the Backbone network, which includes several stages of downsampling processes."]}),"\n",(0,i.jsxs)(s.li,{children:[(0,i.jsx)(s.strong,{children:"Blue box part"}),": This corresponds to the feature extraction part of the Neck network, where the feature shuffle operation is implemented."]}),"\n"]}),"\n",(0,i.jsx)(s.p,{children:"The method is to split the feature channels of each resolution, remix them, upsample/downsample, and finally concatenate them into new features."}),"\n",(0,i.jsx)(s.p,{children:"Through this mixing and reshuffling, the model can more efficiently leverage the advantages of features at different scales, producing more recognizable features for small, curved, and low-quality text. The detailed operation is shown in the figure below:"}),"\n",(0,i.jsx)("div",{align:"center",children:(0,i.jsx)("figure",{style:{width:"60%"},children:(0,i.jsx)(s.p,{children:(0,i.jsx)(s.img,{alt:"detail of channel shuffle network",src:t(62399).Z+"",width:"754",height:"768"})})})}),"\n",(0,i.jsx)(s.p,{children:"In FSNet, two shuffle layers are designed. The first shuffle layer receives input features from two scales, while the second shuffle layer receives input features from three scales."}),"\n",(0,i.jsxs)(s.p,{children:["Taking the second shuffle layer as an example, suppose we have three sets of input features, ",(0,i.jsxs)(s.span,{className:"katex",children:[(0,i.jsx)(s.span,{className:"katex-mathml",children:(0,i.jsx)(s.math,{xmlns:"http://www.w3.org/1998/Math/MathML",children:(0,i.jsxs)(s.semantics,{children:[(0,i.jsxs)(s.mrow,{children:[(0,i.jsxs)(s.msub,{children:[(0,i.jsx)(s.mi,{children:"F"}),(0,i.jsx)(s.mn,{children:"1"})]}),(0,i.jsx)(s.mo,{separator:"true",children:","}),(0,i.jsxs)(s.msub,{children:[(0,i.jsx)(s.mi,{children:"F"}),(0,i.jsx)(s.mn,{children:"2"})]}),(0,i.jsx)(s.mo,{separator:"true",children:","}),(0,i.jsxs)(s.msub,{children:[(0,i.jsx)(s.mi,{children:"F"}),(0,i.jsx)(s.mn,{children:"3"})]})]}),(0,i.jsx)(s.annotation,{encoding:"application/x-tex",children:"F_1, F_2, F_3"})]})})}),(0,i.jsx)(s.span,{className:"katex-html","aria-hidden":"true",children:(0,i.jsxs)(s.span,{className:"base",children:[(0,i.jsx)(s.span,{className:"strut",style:{height:"0.8778em",verticalAlign:"-0.1944em"}}),(0,i.jsxs)(s.span,{className:"mord",children:[(0,i.jsx)(s.span,{className:"mord mathnormal",style:{marginRight:"0.13889em"},children:"F"}),(0,i.jsx)(s.span,{className:"msupsub",children:(0,i.jsxs)(s.span,{className:"vlist-t vlist-t2",children:[(0,i.jsxs)(s.span,{className:"vlist-r",children:[(0,i.jsx)(s.span,{className:"vlist",style:{height:"0.3011em"},children:(0,i.jsxs)(s.span,{style:{top:"-2.55em",marginLeft:"-0.1389em",marginRight:"0.05em"},children:[(0,i.jsx)(s.span,{className:"pstrut",style:{height:"2.7em"}}),(0,i.jsx)(s.span,{className:"sizing reset-size6 size3 mtight",children:(0,i.jsx)(s.span,{className:"mord mtight",children:"1"})})]})}),(0,i.jsx)(s.span,{className:"vlist-s",children:"\u200B"})]}),(0,i.jsx)(s.span,{className:"vlist-r",children:(0,i.jsx)(s.span,{className:"vlist",style:{height:"0.15em"},children:(0,i.jsx)(s.span,{})})})]})})]}),(0,i.jsx)(s.span,{className:"mpunct",children:","}),(0,i.jsx)(s.span,{className:"mspace",style:{marginRight:"0.1667em"}}),(0,i.jsxs)(s.span,{className:"mord",children:[(0,i.jsx)(s.span,{className:"mord mathnormal",style:{marginRight:"0.13889em"},children:"F"}),(0,i.jsx)(s.span,{className:"msupsub",children:(0,i.jsxs)(s.span,{className:"vlist-t vlist-t2",children:[(0,i.jsxs)(s.span,{className:"vlist-r",children:[(0,i.jsx)(s.span,{className:"vlist",style:{height:"0.3011em"},children:(0,i.jsxs)(s.span,{style:{top:"-2.55em",marginLeft:"-0.1389em",marginRight:"0.05em"},children:[(0,i.jsx)(s.span,{className:"pstrut",style:{height:"2.7em"}}),(0,i.jsx)(s.span,{className:"sizing reset-size6 size3 mtight",children:(0,i.jsx)(s.span,{className:"mord mtight",children:"2"})})]})}),(0,i.jsx)(s.span,{className:"vlist-s",children:"\u200B"})]}),(0,i.jsx)(s.span,{className:"vlist-r",children:(0,i.jsx)(s.span,{className:"vlist",style:{height:"0.15em"},children:(0,i.jsx)(s.span,{})})})]})})]}),(0,i.jsx)(s.span,{className:"mpunct",children:","}),(0,i.jsx)(s.span,{className:"mspace",style:{marginRight:"0.1667em"}}),(0,i.jsxs)(s.span,{className:"mord",children:[(0,i.jsx)(s.span,{className:"mord mathnormal",style:{marginRight:"0.13889em"},children:"F"}),(0,i.jsx)(s.span,{className:"msupsub",children:(0,i.jsxs)(s.span,{className:"vlist-t vlist-t2",children:[(0,i.jsxs)(s.span,{className:"vlist-r",children:[(0,i.jsx)(s.span,{className:"vlist",style:{height:"0.3011em"},children:(0,i.jsxs)(s.span,{style:{top:"-2.55em",marginLeft:"-0.1389em",marginRight:"0.05em"},children:[(0,i.jsx)(s.span,{className:"pstrut",style:{height:"2.7em"}}),(0,i.jsx)(s.span,{className:"sizing reset-size6 size3 mtight",children:(0,i.jsx)(s.span,{className:"mord mtight",children:"3"})})]})}),(0,i.jsx)(s.span,{className:"vlist-s",children:"\u200B"})]}),(0,i.jsx)(s.span,{className:"vlist-r",children:(0,i.jsx)(s.span,{className:"vlist",style:{height:"0.15em"},children:(0,i.jsx)(s.span,{})})})]})})]})]})})]}),", where ",(0,i.jsxs)(s.span,{className:"katex",children:[(0,i.jsx)(s.span,{className:"katex-mathml",children:(0,i.jsx)(s.math,{xmlns:"http://www.w3.org/1998/Math/MathML",children:(0,i.jsxs)(s.semantics,{children:[(0,i.jsx)(s.mrow,{children:(0,i.jsxs)(s.msub,{children:[(0,i.jsx)(s.mi,{children:"F"}),(0,i.jsx)(s.mi,{children:"i"})]})}),(0,i.jsx)(s.annotation,{encoding:"application/x-tex",children:"F_i"})]})})}),(0,i.jsx)(s.span,{className:"katex-html","aria-hidden":"true",children:(0,i.jsxs)(s.span,{className:"base",children:[(0,i.jsx)(s.span,{className:"strut",style:{height:"0.8333em",verticalAlign:"-0.15em"}}),(0,i.jsxs)(s.span,{className:"mord",children:[(0,i.jsx)(s.span,{className:"mord mathnormal",style:{marginRight:"0.13889em"},children:"F"}),(0,i.jsx)(s.span,{className:"msupsub",children:(0,i.jsxs)(s.span,{className:"vlist-t vlist-t2",children:[(0,i.jsxs)(s.span,{className:"vlist-r",children:[(0,i.jsx)(s.span,{className:"vlist",style:{height:"0.3117em"},children:(0,i.jsxs)(s.span,{style:{top:"-2.55em",marginLeft:"-0.1389em",marginRight:"0.05em"},children:[(0,i.jsx)(s.span,{className:"pstrut",style:{height:"2.7em"}}),(0,i.jsx)(s.span,{className:"sizing reset-size6 size3 mtight",children:(0,i.jsx)(s.span,{className:"mord mathnormal mtight",children:"i"})})]})}),(0,i.jsx)(s.span,{className:"vlist-s",children:"\u200B"})]}),(0,i.jsx)(s.span,{className:"vlist-r",children:(0,i.jsx)(s.span,{className:"vlist",style:{height:"0.15em"},children:(0,i.jsx)(s.span,{})})})]})})]})]})})]})," represents the feature at the ",(0,i.jsxs)(s.span,{className:"katex",children:[(0,i.jsx)(s.span,{className:"katex-mathml",children:(0,i.jsx)(s.math,{xmlns:"http://www.w3.org/1998/Math/MathML",children:(0,i.jsxs)(s.semantics,{children:[(0,i.jsx)(s.mrow,{children:(0,i.jsx)(s.mi,{children:"i"})}),(0,i.jsx)(s.annotation,{encoding:"application/x-tex",children:"i"})]})})}),(0,i.jsx)(s.span,{className:"katex-html","aria-hidden":"true",children:(0,i.jsxs)(s.span,{className:"base",children:[(0,i.jsx)(s.span,{className:"strut",style:{height:"0.6595em"}}),(0,i.jsx)(s.span,{className:"mord mathnormal",children:"i"})]})})]}),"th resolution. The shuffle layer splits the channels of each feature into three equal parts, i.e., ",(0,i.jsxs)(s.span,{className:"katex",children:[(0,i.jsx)(s.span,{className:"katex-mathml",children:(0,i.jsx)(s.math,{xmlns:"http://www.w3.org/1998/Math/MathML",children:(0,i.jsxs)(s.semantics,{children:[(0,i.jsx)(s.mrow,{children:(0,i.jsxs)(s.msub,{children:[(0,i.jsx)(s.mi,{children:"F"}),(0,i.jsx)(s.mi,{children:"i"})]})}),(0,i.jsx)(s.annotation,{encoding:"application/x-tex",children:"F_i"})]})})}),(0,i.jsx)(s.span,{className:"katex-html","aria-hidden":"true",children:(0,i.jsxs)(s.span,{className:"base",children:[(0,i.jsx)(s.span,{className:"strut",style:{height:"0.8333em",verticalAlign:"-0.15em"}}),(0,i.jsxs)(s.span,{className:"mord",children:[(0,i.jsx)(s.span,{className:"mord mathnormal",style:{marginRight:"0.13889em"},children:"F"}),(0,i.jsx)(s.span,{className:"msupsub",children:(0,i.jsxs)(s.span,{className:"vlist-t vlist-t2",children:[(0,i.jsxs)(s.span,{className:"vlist-r",children:[(0,i.jsx)(s.span,{className:"vlist",style:{height:"0.3117em"},children:(0,i.jsxs)(s.span,{style:{top:"-2.55em",marginLeft:"-0.1389em",marginRight:"0.05em"},children:[(0,i.jsx)(s.span,{className:"pstrut",style:{height:"2.7em"}}),(0,i.jsx)(s.span,{className:"sizing reset-size6 size3 mtight",children:(0,i.jsx)(s.span,{className:"mord mathnormal mtight",children:"i"})})]})}),(0,i.jsx)(s.span,{className:"vlist-s",children:"\u200B"})]}),(0,i.jsx)(s.span,{className:"vlist-r",children:(0,i.jsx)(s.span,{className:"vlist",style:{height:"0.15em"},children:(0,i.jsx)(s.span,{})})})]})})]})]})})]})," is divided into ",(0,i.jsxs)(s.span,{className:"katex",children:[(0,i.jsx)(s.span,{className:"katex-mathml",children:(0,i.jsx)(s.math,{xmlns:"http://www.w3.org/1998/Math/MathML",children:(0,i.jsxs)(s.semantics,{children:[(0,i.jsxs)(s.mrow,{children:[(0,i.jsxs)(s.msub,{children:[(0,i.jsx)(s.mi,{children:"F"}),(0,i.jsxs)(s.mrow,{children:[(0,i.jsx)(s.mi,{children:"i"}),(0,i.jsx)(s.mn,{children:"1"})]})]}),(0,i.jsx)(s.mo,{separator:"true",children:","}),(0,i.jsxs)(s.msub,{children:[(0,i.jsx)(s.mi,{children:"F"}),(0,i.jsxs)(s.mrow,{children:[(0,i.jsx)(s.mi,{children:"i"}),(0,i.jsx)(s.mn,{children:"2"})]})]}),(0,i.jsx)(s.mo,{separator:"true",children:","}),(0,i.jsxs)(s.msub,{children:[(0,i.jsx)(s.mi,{children:"F"}),(0,i.jsxs)(s.mrow,{children:[(0,i.jsx)(s.mi,{children:"i"}),(0,i.jsx)(s.mn,{children:"3"})]})]})]}),(0,i.jsx)(s.annotation,{encoding:"application/x-tex",children:"F_{i1}, F_{i2}, F_{i3}"})]})})}),(0,i.jsx)(s.span,{className:"katex-html","aria-hidden":"true",children:(0,i.jsxs)(s.span,{className:"base",children:[(0,i.jsx)(s.span,{className:"strut",style:{height:"0.8778em",verticalAlign:"-0.1944em"}}),(0,i.jsxs)(s.span,{className:"mord",children:[(0,i.jsx)(s.span,{className:"mord mathnormal",style:{marginRight:"0.13889em"},children:"F"}),(0,i.jsx)(s.span,{className:"msupsub",children:(0,i.jsxs)(s.span,{className:"vlist-t vlist-t2",children:[(0,i.jsxs)(s.span,{className:"vlist-r",children:[(0,i.jsx)(s.span,{className:"vlist",style:{height:"0.3117em"},children:(0,i.jsxs)(s.span,{style:{top:"-2.55em",marginLeft:"-0.1389em",marginRight:"0.05em"},children:[(0,i.jsx)(s.span,{className:"pstrut",style:{height:"2.7em"}}),(0,i.jsx)(s.span,{className:"sizing reset-size6 size3 mtight",children:(0,i.jsxs)(s.span,{className:"mord mtight",children:[(0,i.jsx)(s.span,{className:"mord mathnormal mtight",children:"i"}),(0,i.jsx)(s.span,{className:"mord mtight",children:"1"})]})})]})}),(0,i.jsx)(s.span,{className:"vlist-s",children:"\u200B"})]}),(0,i.jsx)(s.span,{className:"vlist-r",children:(0,i.jsx)(s.span,{className:"vlist",style:{height:"0.15em"},children:(0,i.jsx)(s.span,{})})})]})})]}),(0,i.jsx)(s.span,{className:"mpunct",children:","}),(0,i.jsx)(s.span,{className:"mspace",style:{marginRight:"0.1667em"}}),(0,i.jsxs)(s.span,{className:"mord",children:[(0,i.jsx)(s.span,{className:"mord mathnormal",style:{marginRight:"0.13889em"},children:"F"}),(0,i.jsx)(s.span,{className:"msupsub",children:(0,i.jsxs)(s.span,{className:"vlist-t vlist-t2",children:[(0,i.jsxs)(s.span,{className:"vlist-r",children:[(0,i.jsx)(s.span,{className:"vlist",style:{height:"0.3117em"},children:(0,i.jsxs)(s.span,{style:{top:"-2.55em",marginLeft:"-0.1389em",marginRight:"0.05em"},children:[(0,i.jsx)(s.span,{className:"pstrut",style:{height:"2.7em"}}),(0,i.jsx)(s.span,{className:"sizing reset-size6 size3 mtight",children:(0,i.jsxs)(s.span,{className:"mord mtight",children:[(0,i.jsx)(s.span,{className:"mord mathnormal mtight",children:"i"}),(0,i.jsx)(s.span,{className:"mord mtight",children:"2"})]})})]})}),(0,i.jsx)(s.span,{className:"vlist-s",children:"\u200B"})]}),(0,i.jsx)(s.span,{className:"vlist-r",children:(0,i.jsx)(s.span,{className:"vlist",style:{height:"0.15em"},children:(0,i.jsx)(s.span,{})})})]})})]}),(0,i.jsx)(s.span,{className:"mpunct",children:","}),(0,i.jsx)(s.span,{className:"mspace",style:{marginRight:"0.1667em"}}),(0,i.jsxs)(s.span,{className:"mord",children:[(0,i.jsx)(s.span,{className:"mord mathnormal",style:{marginRight:"0.13889em"},children:"F"}),(0,i.jsx)(s.span,{className:"msupsub",children:(0,i.jsxs)(s.span,{className:"vlist-t vlist-t2",children:[(0,i.jsxs)(s.span,{className:"vlist-r",children:[(0,i.jsx)(s.span,{className:"vlist",style:{height:"0.3117em"},children:(0,i.jsxs)(s.span,{style:{top:"-2.55em",marginLeft:"-0.1389em",marginRight:"0.05em"},children:[(0,i.jsx)(s.span,{className:"pstrut",style:{height:"2.7em"}}),(0,i.jsx)(s.span,{className:"sizing reset-size6 size3 mtight",children:(0,i.jsxs)(s.span,{className:"mord mtight",children:[(0,i.jsx)(s.span,{className:"mord mathnormal mtight",children:"i"}),(0,i.jsx)(s.span,{className:"mord mtight",children:"3"})]})})]})}),(0,i.jsx)(s.span,{className:"vlist-s",children:"\u200B"})]}),(0,i.jsx)(s.span,{className:"vlist-r",children:(0,i.jsx)(s.span,{className:"vlist",style:{height:"0.15em"},children:(0,i.jsx)(s.span,{})})})]})})]})]})})]}),"."]}),"\n",(0,i.jsxs)(s.p,{children:["Then, based on the resolution index corresponding to each part, the features ",(0,i.jsxs)(s.span,{className:"katex",children:[(0,i.jsx)(s.span,{className:"katex-mathml",children:(0,i.jsx)(s.math,{xmlns:"http://www.w3.org/1998/Math/MathML",children:(0,i.jsxs)(s.semantics,{children:[(0,i.jsxs)(s.mrow,{children:[(0,i.jsxs)(s.msub,{children:[(0,i.jsx)(s.mi,{children:"F"}),(0,i.jsxs)(s.mrow,{children:[(0,i.jsx)(s.mi,{children:"i"}),(0,i.jsx)(s.mn,{children:"1"})]})]}),(0,i.jsx)(s.mo,{separator:"true",children:","}),(0,i.jsxs)(s.msub,{children:[(0,i.jsx)(s.mi,{children:"F"}),(0,i.jsxs)(s.mrow,{children:[(0,i.jsx)(s.mi,{children:"i"}),(0,i.jsx)(s.mn,{children:"2"})]})]}),(0,i.jsx)(s.mo,{separator:"true",children:","}),(0,i.jsxs)(s.msub,{children:[(0,i.jsx)(s.mi,{children:"F"}),(0,i.jsxs)(s.mrow,{children:[(0,i.jsx)(s.mi,{children:"i"}),(0,i.jsx)(s.mn,{children:"3"})]})]})]}),(0,i.jsx)(s.annotation,{encoding:"application/x-tex",children:"F_{i1}, F_{i2}, F_{i3}"})]})})}),(0,i.jsx)(s.span,{className:"katex-html","aria-hidden":"true",children:(0,i.jsxs)(s.span,{className:"base",children:[(0,i.jsx)(s.span,{className:"strut",style:{height:"0.8778em",verticalAlign:"-0.1944em"}}),(0,i.jsxs)(s.span,{className:"mord",children:[(0,i.jsx)(s.span,{className:"mord mathnormal",style:{marginRight:"0.13889em"},children:"F"}),(0,i.jsx)(s.span,{className:"msupsub",children:(0,i.jsxs)(s.span,{className:"vlist-t vlist-t2",children:[(0,i.jsxs)(s.span,{className:"vlist-r",children:[(0,i.jsx)(s.span,{className:"vlist",style:{height:"0.3117em"},children:(0,i.jsxs)(s.span,{style:{top:"-2.55em",marginLeft:"-0.1389em",marginRight:"0.05em"},children:[(0,i.jsx)(s.span,{className:"pstrut",style:{height:"2.7em"}}),(0,i.jsx)(s.span,{className:"sizing reset-size6 size3 mtight",children:(0,i.jsxs)(s.span,{className:"mord mtight",children:[(0,i.jsx)(s.span,{className:"mord mathnormal mtight",children:"i"}),(0,i.jsx)(s.span,{className:"mord mtight",children:"1"})]})})]})}),(0,i.jsx)(s.span,{className:"vlist-s",children:"\u200B"})]}),(0,i.jsx)(s.span,{className:"vlist-r",children:(0,i.jsx)(s.span,{className:"vlist",style:{height:"0.15em"},children:(0,i.jsx)(s.span,{})})})]})})]}),(0,i.jsx)(s.span,{className:"mpunct",children:","}),(0,i.jsx)(s.span,{className:"mspace",style:{marginRight:"0.1667em"}}),(0,i.jsxs)(s.span,{className:"mord",children:[(0,i.jsx)(s.span,{className:"mord mathnormal",style:{marginRight:"0.13889em"},children:"F"}),(0,i.jsx)(s.span,{className:"msupsub",children:(0,i.jsxs)(s.span,{className:"vlist-t vlist-t2",children:[(0,i.jsxs)(s.span,{className:"vlist-r",children:[(0,i.jsx)(s.span,{className:"vlist",style:{height:"0.3117em"},children:(0,i.jsxs)(s.span,{style:{top:"-2.55em",marginLeft:"-0.1389em",marginRight:"0.05em"},children:[(0,i.jsx)(s.span,{className:"pstrut",style:{height:"2.7em"}}),(0,i.jsx)(s.span,{className:"sizing reset-size6 size3 mtight",children:(0,i.jsxs)(s.span,{className:"mord mtight",children:[(0,i.jsx)(s.span,{className:"mord mathnormal mtight",children:"i"}),(0,i.jsx)(s.span,{className:"mord mtight",children:"2"})]})})]})}),(0,i.jsx)(s.span,{className:"vlist-s",children:"\u200B"})]}),(0,i.jsx)(s.span,{className:"vlist-r",children:(0,i.jsx)(s.span,{className:"vlist",style:{height:"0.15em"},children:(0,i.jsx)(s.span,{})})})]})})]}),(0,i.jsx)(s.span,{className:"mpunct",children:","}),(0,i.jsx)(s.span,{className:"mspace",style:{marginRight:"0.1667em"}}),(0,i.jsxs)(s.span,{className:"mord",children:[(0,i.jsx)(s.span,{className:"mord mathnormal",style:{marginRight:"0.13889em"},children:"F"}),(0,i.jsx)(s.span,{className:"msupsub",children:(0,i.jsxs)(s.span,{className:"vlist-t vlist-t2",children:[(0,i.jsxs)(s.span,{className:"vlist-r",children:[(0,i.jsx)(s.span,{className:"vlist",style:{height:"0.3117em"},children:(0,i.jsxs)(s.span,{style:{top:"-2.55em",marginLeft:"-0.1389em",marginRight:"0.05em"},children:[(0,i.jsx)(s.span,{className:"pstrut",style:{height:"2.7em"}}),(0,i.jsx)(s.span,{className:"sizing reset-size6 size3 mtight",children:(0,i.jsxs)(s.span,{className:"mord mtight",children:[(0,i.jsx)(s.span,{className:"mord mathnormal mtight",children:"i"}),(0,i.jsx)(s.span,{className:"mord mtight",children:"3"})]})})]})}),(0,i.jsx)(s.span,{className:"vlist-s",children:"\u200B"})]}),(0,i.jsx)(s.span,{className:"vlist-r",children:(0,i.jsx)(s.span,{className:"vlist",style:{height:"0.15em"},children:(0,i.jsx)(s.span,{})})})]})})]})]})})]})," are upsampled or downsampled to a uniform size. Finally, the feature parts from different resolutions and re-scaled at different rates are concatenated into a new feature representation."]}),"\n",(0,i.jsx)(s.p,{children:'In this way, the original single-resolution features are "shuffled" into new features that mix multiple resolution information.'}),"\n",(0,i.jsxs)(s.admonition,{type:"tip",children:[(0,i.jsx)(s.p,{children:"It\u2019s quite similar to what we saw in ShuffleNet:"}),(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsxs)(s.li,{children:["\n",(0,i.jsx)(s.p,{children:(0,i.jsx)(s.a,{href:"/en/papers/lightweight/shufflenet/",children:(0,i.jsx)(s.strong,{children:"[17.07] ShuffleNet: Channel Shuffling Network"})})}),"\n",(0,i.jsx)("div",{align:"center",children:(0,i.jsx)("figure",{style:{width:"80%"},children:(0,i.jsx)(s.p,{children:(0,i.jsx)(s.img,{alt:"shufflenet",src:t(1442).Z+"",width:"1746",height:"678"})})})}),"\n"]}),"\n"]}),(0,i.jsx)(s.p,{children:'If you remember, in ShuffleNet, after performing "group convolution," the channels of each group\u2019s feature map are shuffled. Here in MixNet, the idea is modified to shuffle feature maps at different resolutions, with a very similar design philosophy.'})]}),"\n",(0,i.jsx)(s.h3,{id:"central-transformer-block",children:"Central Transformer Block"}),"\n",(0,i.jsx)("div",{align:"center",children:(0,i.jsx)("figure",{style:{width:"80%"},children:(0,i.jsx)(s.p,{children:(0,i.jsx)(s.img,{alt:"central transformer block",src:t(24522).Z+"",width:"1224",height:"716"})})})}),"\n",(0,i.jsx)(s.p,{children:"Let's break down the architecture diagram and isolate the CTBlock part to examine its operation flow:"}),"\n",(0,i.jsxs)(s.ol,{children:["\n",(0,i.jsxs)(s.li,{children:["\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.strong,{children:"Contour Points"}),":"]}),"\n",(0,i.jsx)(s.p,{children:"Initially, CTBlock uses the heatmap generated by FSNet to obtain a rough boundary of each text instance. Then, it samples N evenly spaced points (with N=20 in the experiment) along the boundary as the text contour representative points. The image features of these points, along with the corresponding heatmap values, form a feature sequence that is fed into the first Transformer module."}),"\n"]}),"\n",(0,i.jsxs)(s.li,{children:["\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.strong,{children:"Central Points"}),":"]}),"\n",(0,i.jsx)(s.p,{children:"After the first Transformer module, a feature point sequence representing the central line of the text region is obtained (the number of central line points is fixed at C=10). Similarly, the image features corresponding to these central line points and their heatmaps form another feature sequence."}),"\n"]}),"\n",(0,i.jsxs)(s.li,{children:["\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.strong,{children:"Transformer Encoder-Decoder"}),":"]}),"\n",(0,i.jsx)(s.p,{children:"The Transformer used in CTBlock adopts an encoder-decoder structure. The Encoder contains multiple transformer blocks, each with multi-head self-attention and MLP, allowing the feature sequence to learn the overall geometric distribution of the text contour and central line points through global attention mechanisms. The Decoder consists of a simple MLP that predicts the vertex offset for each contour point based on the features extracted by the encoder, thus generating more accurate final text contours."}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(s.p,{children:"The correspondence between contour and central points is shown in the figure below:"}),"\n",(0,i.jsx)("div",{align:"center",children:(0,i.jsx)("figure",{style:{width:"90%"},children:(0,i.jsx)(s.p,{children:(0,i.jsx)(s.img,{alt:"contour and central points",src:t(63763).Z+"",width:"1422",height:"526"})})})}),"\n",(0,i.jsxs)(s.admonition,{type:"tip",children:[(0,i.jsx)(s.p,{children:'Please note that the Transformer output is the "Offset," not the direct contour point positions. This design allows the model to more easily learn the subtle changes in the contour points and is more easily scalable to text of various shapes.'}),(0,i.jsx)(s.p,{children:"Thus, in the figure above, you will see that the model output must be added to the original contour points to obtain the final contour point positions."})]}),"\n",(0,i.jsx)(s.h3,{id:"implementation-details",children:"Implementation Details"}),"\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsxs)(s.li,{children:[(0,i.jsx)(s.strong,{children:"Backbone:"})," FSNet"]}),"\n",(0,i.jsxs)(s.li,{children:[(0,i.jsx)(s.strong,{children:"Pre-training:"})," The model is trained for 5 epochs on the SynthText dataset using the Adam optimizer, with a fixed learning rate of 0.001."]}),"\n",(0,i.jsxs)(s.li,{children:[(0,i.jsx)(s.strong,{children:"Fine-tuning:"})," The model is trained for 600 epochs on Total-Text, ArT, and other datasets."]}),"\n",(0,i.jsxs)(s.li,{children:[(0,i.jsx)(s.strong,{children:"Training Environment:"})," Python3, PyTorch 1.10.2, RTX-3090 GPU"]}),"\n",(0,i.jsxs)(s.li,{children:[(0,i.jsx)(s.strong,{children:"Input Image Size:"})," 640 \xd7 640"]}),"\n",(0,i.jsxs)(s.li,{children:[(0,i.jsx)(s.strong,{children:"Data Augmentation:"})," Random rotation (\u221230\xb0 to 30\xb0), random cropping, random flipping, color jittering"]}),"\n"]}),"\n",(0,i.jsx)(s.h2,{id:"discussion",children:"Discussion"}),"\n",(0,i.jsx)(s.h3,{id:"effectiveness-of-fsnet",children:"Effectiveness of FSNet"}),"\n",(0,i.jsx)(s.p,{children:"The main focus of this paper is FSNet, so let\u2019s first see if FSNet actually works."}),"\n",(0,i.jsx)("div",{align:"center",children:(0,i.jsx)("figure",{style:{width:"90%"},children:(0,i.jsx)(s.p,{children:(0,i.jsx)(s.img,{alt:"result",src:t(87045).Z+"",width:"1698",height:"324"})})})}),"\n",(0,i.jsx)(s.p,{children:"The authors first classify the text into small, medium, and large categories based on size and compare the detection performance of FSNet with other commonly used backbone networks (such as ResNet50) on a noise-free dataset."}),"\n",(0,i.jsx)(s.p,{children:'The results show that FSNet achieves significant improvement in detecting "small and medium" text. This improvement is mainly attributed to the exchange mechanism between high- and low-resolution features in the FSNet architecture, which reduces the noise interference in high-resolution features, allowing the model to better capture the contours and shape features of small text.'}),"\n",(0,i.jsx)(s.p,{children:"In addition, to validate FSNet's robustness against noise, the authors add specific ratios of impulse noise to the test data and compare the detection performance of FSNet and ResNet50 under noise-free, 5% noise, and 10% noise conditions."}),"\n",(0,i.jsx)(s.p,{children:"Although noise degrades the performance of all models, FSNet still demonstrates better robustness. In the noise-free case, FSNet's F1-score is 2.1% higher than ResNet50, and under 5% and 10% noise, the improvement reaches 4.5% and 6.0%, respectively."}),"\n",(0,i.jsx)(s.p,{children:"Finally, for generalization improvement, the authors replace the backbone network in existing text detection methods with FSNet, including DB, PAN, and FAST architectures, with results shown in the table below:"}),"\n",(0,i.jsx)("div",{align:"center",children:(0,i.jsx)("figure",{style:{width:"60%"},children:(0,i.jsx)(s.p,{children:(0,i.jsx)(s.img,{alt:"result",src:t(90356).Z+"",width:"936",height:"356"})})})}),"\n",(0,i.jsx)(s.p,{children:"After replacing the original backbone networks of these methods with FSNet, both DB and PAN's F1-scores increased by about 1.5%, and FAST's increased by about 1.8%. This result shows that FSNet not only improves recognition ability independently but also effectively enhances the detection performance of various existing methods when used as a backbone network."}),"\n",(0,i.jsxs)(s.admonition,{type:"tip",children:[(0,i.jsx)(s.p,{children:"If you're interested in the other network architectures mentioned above, you can refer to our previous articles:"}),(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsx)(s.li,{children:(0,i.jsx)(s.a,{href:"/en/papers/text-detection/pan/",children:(0,i.jsx)(s.strong,{children:"[19.08] PAN: Pixel Aggregation Strategy"})})}),"\n",(0,i.jsx)(s.li,{children:(0,i.jsx)(s.a,{href:"/en/papers/text-detection/dbnet/",children:(0,i.jsx)(s.strong,{children:"[19.11] DBNet: Differentiable Binarization Function"})})}),"\n",(0,i.jsx)(s.li,{children:(0,i.jsx)(s.a,{href:"/en/papers/text-detection/fast/",children:(0,i.jsx)(s.strong,{children:"[21.11] FAST: Quick as a Flash"})})}),"\n"]})]}),"\n",(0,i.jsx)(s.h3,{id:"ablation-study",children:"Ablation Study"}),"\n",(0,i.jsx)("div",{align:"center",children:(0,i.jsx)("figure",{style:{width:"80%"},children:(0,i.jsx)(s.p,{children:(0,i.jsx)(s.img,{alt:"ablation study",src:t(9878).Z+"",width:"1046",height:"336"})})})}),"\n",(0,i.jsx)(s.p,{children:"Next, the authors validate the effectiveness of each design. Here, we see the results of an ablation study using the Total-Text dataset, with ResNet50 as the baseline model for comparison."}),"\n",(0,i.jsx)(s.p,{children:"The results show that FSNet achieves a 2.1% improvement in F1-score. Furthermore, after introducing the central line features in CTBlock, there is an additional improvement of 0.5%."}),"\n",(0,i.jsx)(s.h3,{id:"comparison-with-other-methods",children:"Comparison with Other Methods"}),"\n",(0,i.jsx)("div",{align:"center",children:(0,i.jsx)("figure",{style:{width:"80%"},children:(0,i.jsx)(s.p,{children:(0,i.jsx)(s.img,{alt:"comparison",src:t(31358).Z+"",width:"1224",height:"352"})})})}),"\n",(0,i.jsx)(s.p,{children:"The table above shows the comparison results for multi-directional text detection on the MSRA-TD500 dataset. It can be seen that MixNet achieves an F1-score of 89.4%, which is 2.1% higher than other methods, confirming its superior performance in multi-language and multi-directional text detection scenarios."}),"\n",(0,i.jsx)("div",{align:"center",children:(0,i.jsx)("figure",{style:{width:"80%"},children:(0,i.jsx)(s.p,{children:(0,i.jsx)(s.img,{alt:"comparison",src:t(46087).Z+"",width:"1430",height:"514"})})})}),"\n",(0,i.jsx)(s.p,{children:"Next, we look at the comparison for arbitrary-shaped text detection on the Total-Text dataset, as shown in the table above."}),"\n",(0,i.jsx)(s.p,{children:"MixNet achieves an F1-score of 90.5% on Total-Text, 1.5% higher than TextFuseNet."}),"\n",(0,i.jsx)(s.h3,{id:"visualization-results",children:"Visualization Results"}),"\n",(0,i.jsx)("div",{align:"center",children:(0,i.jsx)("figure",{style:{width:"90%"},children:(0,i.jsx)(s.p,{children:(0,i.jsx)(s.img,{alt:"visualization",src:t(22088).Z+"",width:"1226",height:"658"})})})}),"\n",(0,i.jsx)(s.h2,{id:"conclusion",children:"Conclusion"}),"\n",(0,i.jsx)(s.p,{children:"The MixNet architecture proposed in this paper, with FSNet and the CTBlock modules as the core, successfully solves the issue of high-resolution features being easily affected by noise during the traditional multi-scale feature fusion process. It also significantly improves the detection accuracy for small, curved, and low-quality text."}),"\n",(0,i.jsx)(s.p,{children:"The experimental results also confirm that FSNet can be easily integrated into different architectures and effectively improve their overall detection performance."}),"\n",(0,i.jsx)(s.admonition,{type:"tip",children:(0,i.jsx)(s.p,{children:"The implementation of this paper is not particularly difficult, but after adding FSNet, the inference speed slows down by about 30%. When applying it, we still need to consider the balance between speed and accuracy."})})]})}function d(e={}){let{wrapper:s}={...(0,a.a)(),...e.components};return s?(0,i.jsx)(s,{...e,children:(0,i.jsx)(o,{...e})}):o(e)}},84981:function(e,s,t){t.d(s,{Z:()=>n});let n=t.p+"assets/images/img1-b89393fff3c20eccff68a4f7e0e09d56.jpg"},22088:function(e,s,t){t.d(s,{Z:()=>n});let n=t.p+"assets/images/img10-96b0757ca2be97ad900a8799bf3da4b3.jpg"},24522:function(e,s,t){t.d(s,{Z:()=>n});let n=t.p+"assets/images/img11-6759efa17e496965bd10c60ca37d3ca0.jpg"},49361:function(e,s,t){t.d(s,{Z:()=>n});let n=t.p+"assets/images/img2-73ac7e394223fda9bccf0f6bceb35fb5.jpg"},62399:function(e,s,t){t.d(s,{Z:()=>n});let n=t.p+"assets/images/img3-39b10555c6d875d58f636f5f5958c12f.jpg"},63763:function(e,s,t){t.d(s,{Z:()=>n});let n=t.p+"assets/images/img4-257ac8e43a8709b2316c756a4f8f8a40.jpg"},87045:function(e,s,t){t.d(s,{Z:()=>n});let n=t.p+"assets/images/img5-a542d9d6d044a562d1d3da4cd05bdec4.jpg"},90356:function(e,s,t){t.d(s,{Z:()=>n});let n=t.p+"assets/images/img6-d70545bf3a7518fd5b8ffb718eb114f6.jpg"},9878:function(e,s,t){t.d(s,{Z:()=>n});let n=t.p+"assets/images/img7-ddb09ec886127d408c4349765e574d4a.jpg"},31358:function(e,s,t){t.d(s,{Z:()=>n});let n=t.p+"assets/images/img8-e408a08a66b440a4300fe3a98220b86b.jpg"},46087:function(e,s,t){t.d(s,{Z:()=>n});let n=t.p+"assets/images/img9-ae54ab265b666212061b62d22d85811b.jpg"},1442:function(e,s,t){t.d(s,{Z:()=>n});let n=t.p+"assets/images/shufflenet_arch-f39f9320a0986aa8041285b5b52fb2c1.jpg"},50065:function(e,s,t){t.d(s,{Z:()=>r,a:()=>l});var n=t(67294);let i={},a=n.createContext(i);function l(e){let s=n.useContext(a);return n.useMemo(function(){return"function"==typeof e?e(s):{...s,...e}},[s,e])}function r(e){let s;return s=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:l(e.components),n.createElement(a.Provider,{value:s},e.children)}}}]);