"use strict";(self.webpackChunkdocsaid_website=self.webpackChunkdocsaid_website||[]).push([["71786"],{76308:function(e,n,t){t.r(n),t.d(n,{frontMatter:()=>c,default:()=>h,contentTitle:()=>o,assets:()=>a,toc:()=>l,metadata:()=>r});var r=JSON.parse('{"id":"capybara/funcs/powerdict","title":"PowerDict","description":"PowerDict(d=None, \\\\\\\\kwargs)","source":"@site/i18n/en/docusaurus-plugin-content-docs/current/capybara/funcs/powerdict.md","sourceDirName":"capybara/funcs","slug":"/capybara/funcs/powerdict","permalink":"/en/docs/capybara/funcs/powerdict","draft":false,"unlisted":false,"tags":[],"version":"current","lastUpdatedBy":"zephyr-sh","lastUpdatedAt":1734942587000,"frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"write_metadata_into_onnx","permalink":"/en/docs/capybara/funcs/onnxengine/write_metadata_into_onnx"},"next":{"title":"Structures","permalink":"/en/docs/category/structures"}}'),i=t(85893),s=t(50065);let c={},o="PowerDict",a={},l=[];function d(e){let n={a:"a",blockquote:"blockquote",code:"code",h1:"h1",header:"header",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,s.a)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.header,{children:(0,i.jsx)(n.h1,{id:"powerdict",children:"PowerDict"})}),"\n",(0,i.jsxs)(n.blockquote,{children:["\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.a,{href:"https://github.com/DocsaidLab/Capybara/blob/975d62fba4f76db59e715c220f7a2af5ad8d050e/capybara/utils/powerdict.py#L10",children:"PowerDict(d=None, **kwargs)"})}),"\n"]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Description"}),": This class is used to create a dictionary with freeze and melt functionality, allowing access to internal attributes via the ",(0,i.jsx)(n.code,{children:"."})," operator."]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Attributes"})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"is_frozen"})," (",(0,i.jsx)(n.code,{children:"bool"}),"): Indicates whether the dictionary is frozen."]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Methods"})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"freeze()"}),": Freezes the dictionary."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"melt()"}),": Unfreezes the dictionary."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"to_dict()"}),": Converts the dictionary to a standard dictionary."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"to_json(path: Union[str, Path]) -> None"}),": Writes the dictionary to a JSON file."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"to_yaml(path: Union[str, Path]) -> None"}),": Writes the dictionary to a YAML file."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"to_txt(path: Union[str, Path]) -> None"}),": Writes the dictionary to a TXT file."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"to_pickle(path: Union[str, Path]) -> None"}),": Writes the dictionary to a pickle file."]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Class Methods"})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"load_json(path: Union[str, Path]) -> PowerDict"}),": Loads a dictionary from a JSON file."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"load_pickle(path: Union[str, Path]) -> PowerDict"}),": Loads a dictionary from a pickle file."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"load_yaml(path: Union[str, Path]) -> PowerDict"}),": Loads a dictionary from a YAML file."]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Parameters"})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"d"})," (",(0,i.jsx)(n.code,{children:"dict"}),"): The dictionary to be converted. Default is None."]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Example"})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-python",children:"from capybara import PowerDict\n\nd = {'key': 'value'}\ncfg = PowerDict(d)\nprint(cfg.key)\n# >>> 'value'\n"})}),"\n"]}),"\n"]})]})}function h(e={}){let{wrapper:n}={...(0,s.a)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(d,{...e})}):d(e)}},50065:function(e,n,t){t.d(n,{Z:()=>o,a:()=>c});var r=t(67294);let i={},s=r.createContext(i);function c(e){let n=r.useContext(s);return r.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:c(e.components),r.createElement(s.Provider,{value:n},e.children)}}}]);