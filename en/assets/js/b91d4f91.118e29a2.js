"use strict";(self.webpackChunkblog=self.webpackChunkblog||[]).push([[49647],{49505:(e,n,o)=>{o.r(n),o.d(n,{assets:()=>i,contentTitle:()=>c,default:()=>u,frontMatter:()=>d,metadata:()=>s,toc:()=>a});const s=JSON.parse('{"id":"docsaidkit/funcs/structures/box_mode","title":"BoxMode","description":"BoxMode","source":"@site/i18n/en/docusaurus-plugin-content-docs/current/docsaidkit/funcs/structures/box_mode.md","sourceDirName":"docsaidkit/funcs/structures","slug":"/docsaidkit/funcs/structures/box_mode","permalink":"/en/docs/docsaidkit/funcs/structures/box_mode","draft":false,"unlisted":false,"tags":[],"version":"current","lastUpdatedBy":"zephyr-sh","lastUpdatedAt":1713493370000,"sidebarPosition":1,"frontMatter":{"sidebar_position":1},"sidebar":"tutorialSidebar","previous":{"title":"Structures","permalink":"/en/docs/category/structures"},"next":{"title":"Box","permalink":"/en/docs/docsaidkit/funcs/structures/box"}}');var t=o(74848),r=o(28453);const d={sidebar_position:1},c="BoxMode",i={},a=[];function l(e){const n={a:"a",blockquote:"blockquote",code:"code",h1:"h1",header:"header",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,r.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.header,{children:(0,t.jsx)(n.h1,{id:"boxmode",children:"BoxMode"})}),"\n",(0,t.jsxs)(n.blockquote,{children:["\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.a,{href:"https://github.com/DocsaidLab/DocsaidKit/blob/012540eebaebb2718987dd3ec0f7dcf40f403caa/docsaidkit/structures/boxes.py#L31",children:"BoxMode"})}),"\n"]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Description"})}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.code,{children:"BoxMode"})," is an enumeration class used to represent different bounding box formats. Typically, bounding boxes are expressed in one of three formats:"]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"XYXY"}),": Defined as ",(0,t.jsx)(n.code,{children:"(x0, y0, x1, y1)"})," using absolute float coordinates. Coordinates range between ",(0,t.jsx)(n.code,{children:"[0, w]"})," and ",(0,t.jsx)(n.code,{children:"[0, h]"}),"."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"XYWH"}),": Defined as ",(0,t.jsx)(n.code,{children:"(x0, y0, w, h)"})," using absolute float coordinates. ",(0,t.jsx)(n.code,{children:"(x0, y0)"})," is the top-left corner of the bounding box, and ",(0,t.jsx)(n.code,{children:"(w, h)"})," are its width and height."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"CXCYWH"}),": Defined as ",(0,t.jsx)(n.code,{children:"(xc, yc, w, h)"})," using absolute float coordinates. ",(0,t.jsx)(n.code,{children:"(xc, yc)"})," is the center of the bounding box, and ",(0,t.jsx)(n.code,{children:"(w, h)"})," are its width and height."]}),"\n"]}),"\n",(0,t.jsxs)(n.p,{children:["A good design should allow easy conversion between these types, so we implemented a ",(0,t.jsx)(n.code,{children:"convert"})," method under ",(0,t.jsx)(n.code,{children:"BoxMode"}),". You can refer to the example below for usage. Additionally, this class also features an ",(0,t.jsx)(n.code,{children:"align_code"})," method that accepts a string of the mode, regardless of case, and converts it to an uppercase representation."]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Example"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-python",children:"import docsaidkit as D\nimport numpy as np\n\nbox = np.array([10, 20, 50, 80]).astype(np.float32)\nbox = D.BoxMode.convert(box, from_mode=D.BoxMode.XYXY, to_mode=D.BoxMode.XYWH)\n# >>> array([10, 20, 40, 60])\n\n# Using string to represent the mode\nbox = D.BoxMode.convert(box, from_mode='XYWH', to_mode='CXCYWH')\n# >>> array([30, 50, 40, 60])\n"})}),"\n"]}),"\n"]})]})}function u(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(l,{...e})}):l(e)}},28453:(e,n,o)=>{o.d(n,{R:()=>d,x:()=>c});var s=o(96540);const t={},r=s.createContext(t);function d(e){const n=s.useContext(r);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:d(e.components),s.createElement(r.Provider,{value:n},e.children)}}}]);