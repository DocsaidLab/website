"use strict";(self.webpackChunkdocsaid_website=self.webpackChunkdocsaid_website||[]).push([["46313"],{17522:function(e,n,t){t.r(n),t.d(n,{assets:function(){return l},contentTitle:function(){return c},default:function(){return h},frontMatter:function(){return o},metadata:function(){return s},toc:function(){return u}});var s=t(326),i=t(85893),r=t(50065);let o={slug:"ubuntu-github-runner-systemd",title:"Automating GitHub Runner with Systemd",authors:"Zephyr",tags:["github-action","runner"],image:"/en/img/2023/0910.webp",description:"Running automatically with Ubuntu Systemd."},c=void 0,l={authorsImageUrls:[void 0]},u=[{value:"The Issue",id:"the-issue",level:2},{value:"Setup Process",id:"setup-process",level:2},{value:"Checking Service Status",id:"checking-service-status",level:2},{value:"Reconfiguring the Runner",id:"reconfiguring-the-runner",level:2}];function a(e){let n={admonition:"admonition",code:"code",h2:"h2",img:"img",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,r.a)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.p,{children:"In collaborative development on GitHub, we often use private hosts to manage CI/CD workflows. GitHub provides documentation for setting up a self-hosted runner, and by following these steps, you can get the runner up and running quickly."}),"\n",(0,i.jsxs)("div",{align:"center",children:[(0,i.jsx)("figure",{style:{width:"80%"},children:(0,i.jsx)(n.p,{children:(0,i.jsx)(n.img,{alt:"github_set_runner",src:t(7995).Z+"",width:"2048",height:"1173"})})}),(0,i.jsx)("figcaption",{children:"Documentation Screenshot"})]}),"\n",(0,i.jsx)(n.h2,{id:"the-issue",children:"The Issue"}),"\n",(0,i.jsx)(n.p,{children:"However, after setup, if the host machine is restarted for any reason, the runner does not automatically start. Often, this issue goes unnoticed until someone realizes that CI/CD jobs have stopped running, sometimes several days later."}),"\n",(0,i.jsx)(n.p,{children:"This situation can happen repeatedly and become quite a nuisance. So, to prevent this, we need to configure the runner to start automatically on boot!"}),"\n",(0,i.jsx)(n.h2,{id:"setup-process",children:"Setup Process"}),"\n",(0,i.jsxs)(n.p,{children:["To automatically run a task on system startup, we\u2019ll use ",(0,i.jsx)(n.code,{children:"systemd"}),"."]}),"\n",(0,i.jsxs)(n.ol,{children:["\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsx)(n.p,{children:(0,i.jsxs)(n.strong,{children:["Create a New ",(0,i.jsx)(n.code,{children:"systemd"})," Service File:"]})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"sudo vim /etc/systemd/system/actions-runner.service\n"})}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Paste the Following Content into the File:"})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",metastring:"{7-9}",children:"[Unit]\nDescription=GitHub Action Runner\nAfter=network.target\n\n[Service]\nType=simple\nUser=your-username\nWorkingDirectory=/home/your-username/actions-runner\nExecStart=/home/your-username/actions-runner/run.sh\nRestart=always\nRestartSec=5\n\n[Install]\nWantedBy=multi-user.target\n"})}),"\n",(0,i.jsx)(n.p,{children:"Pay close attention to the following fields:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"User"}),", ",(0,i.jsx)(n.code,{children:"ExecStart"}),", and ",(0,i.jsx)(n.code,{children:"WorkingDirectory"})," should be updated with your specific username."]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsx)(n.p,{children:(0,i.jsxs)(n.strong,{children:["Reload ",(0,i.jsx)(n.code,{children:"systemd"})," to Apply the New Service Configuration:"]})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"sudo systemctl daemon-reload\n"})}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Enable the Service to Start on Boot:"})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"sudo systemctl enable actions-runner.service\n"})}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Start the Service Manually or Reboot to Test:"})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"sudo systemctl start actions-runner.service\n"})}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.p,{children:["With this setup, the ",(0,i.jsx)(n.code,{children:"actions-runner"})," will automatically run in the background whenever your machine boots."]}),"\n",(0,i.jsx)(n.p,{children:"To stop the service, you can use the following command:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"sudo systemctl stop actions-runner.service\n"})}),"\n",(0,i.jsx)(n.admonition,{type:"warning",children:(0,i.jsxs)(n.p,{children:["Ensure that ",(0,i.jsx)(n.code,{children:"run.sh"})," has executable permissions."]})}),"\n",(0,i.jsx)(n.h2,{id:"checking-service-status",children:"Checking Service Status"}),"\n",(0,i.jsxs)(n.p,{children:["With ",(0,i.jsx)(n.code,{children:"systemd"})," managing the service, you can check the logs to monitor the runner\u2019s status."]}),"\n",(0,i.jsx)(n.p,{children:"Use the following command to view logs:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"sudo journalctl -u actions-runner.service -f\n"})}),"\n",(0,i.jsx)(n.p,{children:"Explanation:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"-u actions-runner.service"}),": Displays logs for the ",(0,i.jsx)(n.code,{children:"actions-runner"})," service only."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"-f"}),": Follows the log output, allowing you to monitor new entries in real-time."]}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:"If you want to check the service\u2019s current status, use:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"sudo systemctl status actions-runner.service\n"})}),"\n",(0,i.jsxs)(n.p,{children:["This command displays the current status of the ",(0,i.jsx)(n.code,{children:"actions-runner"})," service, including whether it\u2019s running and recent log output:"]}),"\n",(0,i.jsx)("div",{align:"center",children:(0,i.jsx)("figure",{style:{width:"80%"},children:(0,i.jsx)(n.p,{children:(0,i.jsx)(n.img,{alt:"action-service",src:t(13821).Z+"",width:"2048",height:"831"})})})}),"\n",(0,i.jsx)(n.h2,{id:"reconfiguring-the-runner",children:"Reconfiguring the Runner"}),"\n",(0,i.jsx)(n.p,{children:"If the original runner configuration is missing, this might occur when switching the repository\u2019s visibility between Public and Private, or if the runner has been inactive for a long time. In such cases, you\u2019ll need to reconfigure the runner."}),"\n",(0,i.jsxs)(n.p,{children:["To do this, go to the ",(0,i.jsx)(n.code,{children:"actions-runner"})," directory, delete the ",(0,i.jsx)(n.code,{children:".runner"})," file, and re-run the configuration script:"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"./config.sh --url ... (use the new token configuration)\n"})}),"\n",(0,i.jsx)(n.p,{children:"After completing the setup, restart the service to ensure everything is running smoothly."})]})}function h(e={}){let{wrapper:n}={...(0,r.a)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(a,{...e})}):a(e)}},13821:function(e,n,t){t.d(n,{Z:function(){return s}});let s=t.p+"assets/images/action-service-6b4de0ff1dc1dc29f3edb7aeb4d16fc8.jpg"},7995:function(e,n,t){t.d(n,{Z:function(){return s}});let s=t.p+"assets/images/github_set_runner-6ca68dc499f780fcc4c6e7d7461a2ffe.jpg"},50065:function(e,n,t){t.d(n,{Z:function(){return c},a:function(){return o}});var s=t(67294);let i={},r=s.createContext(i);function o(e){let n=s.useContext(r);return s.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:o(e.components),s.createElement(r.Provider,{value:n},e.children)}},326:function(e){e.exports=JSON.parse('{"permalink":"/en/blog/ubuntu-github-runner-systemd","source":"@site/i18n/en/docusaurus-plugin-content-blog/2023/09-10-ubuntu-github-action-runner-systemd/index.md","title":"Automating GitHub Runner with Systemd","description":"Running automatically with Ubuntu Systemd.","date":"2023-09-10T00:00:00.000Z","tags":[{"inline":true,"label":"github-action","permalink":"/en/blog/tags/github-action"},{"inline":true,"label":"runner","permalink":"/en/blog/tags/runner"}],"readingTime":2.245,"hasTruncateMarker":true,"authors":[{"name":"Zephyr","title":"Engineer","url":"https://github.com/zephyr-sh","imageURL":"https://github.com/zephyr-sh.png","key":"Zephyr","page":null}],"frontMatter":{"slug":"ubuntu-github-runner-systemd","title":"Automating GitHub Runner with Systemd","authors":"Zephyr","tags":["github-action","runner"],"image":"/en/img/2023/0910.webp","description":"Running automatically with Ubuntu Systemd."},"unlisted":false,"prevItem":{"title":"Setting Up SSH Server on Ubuntu","permalink":"/en/blog/ubuntu-install-ssh"},"nextItem":{"title":"Logging into RTF8207W Router","permalink":"/en/blog/login-rtf8207w"}}')}}]);