"use strict";(self.webpackChunkdocsaid_website=self.webpackChunkdocsaid_website||[]).push([["43955"],{45973:function(n,e,o){o.r(e),o.d(e,{default:()=>d,frontMatter:()=>s,metadata:()=>t,assets:()=>a,toc:()=>u,contentTitle:()=>c});var t=JSON.parse('{"id":"capybara/funcs/mixins/enum_check_mixin","title":"EnumCheckMixin","description":"EnumCheckMixin","source":"@site/i18n/en/docusaurus-plugin-content-docs/current/capybara/funcs/mixins/enum_check_mixin.md","sourceDirName":"capybara/funcs/mixins","slug":"/capybara/funcs/mixins/enum_check_mixin","permalink":"/en/docs/capybara/funcs/mixins/enum_check_mixin","draft":false,"unlisted":false,"tags":[],"version":"current","lastUpdatedBy":"zephyr-sh","lastUpdatedAt":1734942587000,"frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"DataClassToJsonMixin","permalink":"/en/docs/capybara/funcs/mixins/dataclass_to_json_mixin"},"next":{"title":"ONNXEngine","permalink":"/en/docs/category/onnxengine"}}'),i=o("85893"),r=o("50065");let s={},c="EnumCheckMixin",a={},u=[];function l(n){let e={a:"a",blockquote:"blockquote",code:"code",h1:"h1",header:"header",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,r.a)(),...n.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(e.header,{children:(0,i.jsx)(e.h1,{id:"enumcheckmixin",children:"EnumCheckMixin"})}),"\n",(0,i.jsxs)(e.blockquote,{children:["\n",(0,i.jsx)(e.p,{children:(0,i.jsx)(e.a,{href:"https://github.com/DocsaidLab/Capybara/blob/975d62fba4f76db59e715c220f7a2af5ad8d050e/capybara/mixins.py#L57",children:"EnumCheckMixin"})}),"\n"]}),"\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsxs)(e.li,{children:[(0,i.jsx)(e.strong,{children:"Description"}),": Provides the ",(0,i.jsx)(e.code,{children:"obj_to_enum"})," method for Enum objects, allowing for the conversion of various types into the corresponding enum values."]}),"\n"]}),"\n",(0,i.jsx)(e.p,{children:"The design concept of this method is to prevent users from using incorrect enum values by enforcing type constraints while also avoiding frustration when a matching enum value cannot be found."}),"\n",(0,i.jsxs)(e.p,{children:["Thus, the ",(0,i.jsx)(e.code,{children:"obj_to_enum"})," method is available to convert different types of enum values into the correct enum type."]}),"\n",(0,i.jsx)(e.p,{children:"Users can query enum values using strings, enum values, or integers."}),"\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsxs)(e.li,{children:["\n",(0,i.jsx)(e.p,{children:(0,i.jsx)(e.strong,{children:"Example"})}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-python",children:"from enum import IntEnum\nfrom capybara import EnumCheckMixin\n\nclass Color(EnumCheckMixin, IntEnum):\n    RED = 1\n    GREEN = 2\n    BLUE = 3\n\ncolor = Color.obj_to_enum('GREEN')\nprint(color)  # Color.GREEN\n\ncolor = Color.obj_to_enum(Color.RED)\nprint(color)  # Color.RED\n\ncolor = Color.obj_to_enum(3)\nprint(color)  # Color.BLUE\n"})}),"\n"]}),"\n"]})]})}function d(n={}){let{wrapper:e}={...(0,r.a)(),...n.components};return e?(0,i.jsx)(e,{...n,children:(0,i.jsx)(l,{...n})}):l(n)}},50065:function(n,e,o){o.d(e,{Z:function(){return c},a:function(){return s}});var t=o(67294);let i={},r=t.createContext(i);function s(n){let e=t.useContext(r);return t.useMemo(function(){return"function"==typeof n?n(e):{...e,...n}},[e,n])}function c(n){let e;return e=n.disableParentContext?"function"==typeof n.components?n.components(i):n.components||i:s(n.components),t.createElement(r.Provider,{value:e},n.children)}}}]);