"use strict";(self.webpackChunkdocsaid_website=self.webpackChunkdocsaid_website||[]).push([["68278"],{95119:function(e,t,n){n.r(t),n.d(t,{frontMatter:()=>l,toc:()=>u,default:()=>d,metadata:()=>r,assets:()=>c,contentTitle:()=>o});var r=JSON.parse('{"id":"gmailsummary/index","title":"GmailSummary","description":"The core functionality of this project is \\"Email Summary\\".","source":"@site/i18n/en/docusaurus-plugin-content-docs/current/gmailsummary/index.md","sourceDirName":"gmailsummary","slug":"/gmailsummary/","permalink":"/en/docs/gmailsummary/","draft":false,"unlisted":false,"tags":[],"version":"current","lastUpdatedBy":"zephyr-sh","lastUpdatedAt":1727073704000,"frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"Submission","permalink":"/en/docs/docclassifier/summit_data"},"next":{"title":"Introduction","permalink":"/en/docs/gmailsummary/intro"}}'),i=n(74848),s=n(84429),a=n(26441);let l={},o="GmailSummary",c={},u=[];function m(e){let t={a:"a",admonition:"admonition",h1:"h1",header:"header",hr:"hr",img:"img",li:"li",p:"p",strong:"strong",ul:"ul",...(0,s.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(t.header,{children:(0,i.jsx)(t.h1,{id:"gmailsummary",children:"GmailSummary"})}),"\n",(0,i.jsxs)(t.p,{children:['The core functionality of this project is "',(0,i.jsx)(t.strong,{children:"Email Summary"}),'".']}),"\n",(0,i.jsxs)(t.ul,{children:["\n",(0,i.jsx)(t.li,{children:(0,i.jsx)(t.a,{href:"https://github.com/DocsaidLab/GmailSummary",children:(0,i.jsx)(t.strong,{children:"GmailSummary Github"})})}),"\n"]}),"\n",(0,i.jsx)(t.hr,{}),"\n",(0,i.jsx)(t.p,{children:(0,i.jsx)(t.img,{alt:"title",src:n(12274).A+"",width:"1792",height:"1024"})}),"\n",(0,i.jsx)(t.hr,{}),"\n",(0,i.jsx)(t.admonition,{type:"info",children:(0,i.jsx)(t.p,{children:"This project isn't a ready-to-use Python tool; instead, it's an example of API integration. If you happen to have similar needs, you can refer to the instructions in this project for corresponding modifications and further development."})}),"\n",(0,i.jsx)(t.hr,{}),"\n","\n",(0,i.jsx)(a.A,{})]})}function d(e={}){let{wrapper:t}={...(0,s.R)(),...e.components};return t?(0,i.jsx)(t,{...e,children:(0,i.jsx)(m,{...e})}):m(e)}},12274:function(e,t,n){n.d(t,{A:()=>r});let r=n.p+"assets/images/title-d26983024c0e5231607cd345ef9ff11c.jpg"},26441:function(e,t,n){n.d(t,{A:()=>j});var r=n(74848);n(96540);var i=n(39836),s=n(39095),a=n(12801),l=n(90134),o=n(11943),c=n(43789),u=n(60782);function m({className:e,href:t,children:n}){return(0,r.jsx)(a.A,{href:t,className:(0,i.A)("card padding--lg","cardContainer_fWXF",e),children:n})}function d({className:e,href:t,icon:n,title:s,description:a}){return(0,r.jsxs)(m,{href:t,className:e,children:[(0,r.jsxs)(u.A,{as:"h2",className:(0,i.A)("text--truncate","cardTitle_rnsV"),title:s,children:[n," ",s]}),a&&(0,r.jsx)("p",{className:(0,i.A)("text--truncate","cardDescription_PWke"),title:a,children:a})]})}function h({item:e}){let t=(0,s.Nr)(e),n=function(){let{selectMessage:e}=(0,l.W)();return t=>e(t,(0,c.T)({message:"1 item|{count} items",id:"theme.docs.DocCard.categoryDescription.plurals",description:"The default description for a category card in the generated index about how many items this category includes"},{count:t}))}();return t?(0,r.jsx)(d,{className:e.className,href:t,icon:"\uD83D\uDDC3\uFE0F",title:e.label,description:e.description??n(e.items.length)}):null}function f({item:e}){let t=(0,o.A)(e.href)?"\u{1F4C4}\uFE0F":"\u{1F517}",n=(0,s.cC)(e.docId??void 0);return(0,r.jsx)(d,{className:e.className,href:e.href,icon:t,title:e.label,description:e.description??n?.description})}function p({item:e}){switch(e.type){case"link":return(0,r.jsx)(f,{item:e});case"category":return(0,r.jsx)(h,{item:e});default:throw Error(`unknown item type ${JSON.stringify(e)}`)}}function x({className:e}){let t=(0,s.a4)();return(0,r.jsx)(j,{items:t,className:e})}function g({item:e}){return(0,r.jsx)("article",{className:(0,i.A)("docCardListItem_W1sv","col col--6"),children:(0,r.jsx)(p,{item:e})})}function j(e){let{items:t,className:n}=e;if(!t)return(0,r.jsx)(x,{...e});let a=(0,s.d1)(t);return(0,r.jsx)("section",{className:(0,i.A)("row",n),children:a.map((e,t)=>(0,r.jsx)(g,{item:e},t))})}},90134:function(e,t,n){n.d(t,{W:()=>o});var r=n(96540),i=n(13341);let s=["zero","one","two","few","many","other"];function a(e){return s.filter(t=>e.includes(t))}let l={locale:"en",pluralForms:a(["one","other"]),select:e=>1===e?"one":"other"};function o(){let e=function(){let{i18n:{currentLocale:e}}=(0,i.A)();return(0,r.useMemo)(()=>{try{let t;return t=new Intl.PluralRules(e),{locale:e,pluralForms:a(t.resolvedOptions().pluralCategories),select:e=>t.select(e)}}catch(t){return console.error(`Failed to use Intl.PluralRules for locale "${e}".
Docusaurus will fallback to the default (English) implementation.
Error: ${t.message}
`),l}},[e])}();return{selectMessage:(t,n)=>(function(e,t,n){let r=e.split("|");if(1===r.length)return r[0];r.length>n.pluralForms.length&&console.error(`For locale=${n.locale}, a maximum of ${n.pluralForms.length} plural forms are expected (${n.pluralForms.join(",")}), but the message contains ${r.length}: ${e}`);let i=n.select(t);return r[Math.min(n.pluralForms.indexOf(i),r.length-1)]})(n,t,e)}}},84429:function(e,t,n){n.d(t,{R:()=>a,x:()=>l});var r=n(96540);let i={},s=r.createContext(i);function a(e){let t=r.useContext(s);return r.useMemo(function(){return"function"==typeof e?e(t):{...t,...e}},[t,e])}function l(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:a(e.components),r.createElement(s.Provider,{value:t},e.children)}}}]);