"use strict";(self.webpackChunkblog=self.webpackChunkblog||[]).push([[3919],{953:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>c,contentTitle:()=>r,default:()=>l,frontMatter:()=>a,metadata:()=>i,toc:()=>d});var o=t(74848),s=t(28453);const a={sidebar_position:9},r="Scheduled",i={id:"gmailsummary/automation",title:"Scheduled",description:"We expect to see the latest email summaries every morning, so we need an automated scheduling task to achieve this goal.",source:"@site/i18n/en/docusaurus-plugin-content-docs/current/gmailsummary/automation.md",sourceDirName:"gmailsummary",slug:"/gmailsummary/automation",permalink:"/en/docs/gmailsummary/automation",draft:!1,unlisted:!1,tags:[],version:"current",lastUpdatedBy:"zephyr-sh",lastUpdatedAt:1720450653e3,sidebarPosition:9,frontMatter:{sidebar_position:9},sidebar:"tutorialSidebar",previous:{title:"Integrating All",permalink:"/en/docs/gmailsummary/update_infos"},next:{title:"Conclusion",permalink:"/en/docs/gmailsummary/conclusion"}},c={},d=[{value:"Using <code>crontab</code>",id:"using-crontab",level:2},{value:"Testing <code>crontab</code>",id:"testing-crontab",level:2}];function h(e){const n={admonition:"admonition",code:"code",h1:"h1",h2:"h2",p:"p",pre:"pre",...(0,s.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(n.h1,{id:"scheduled",children:"Scheduled"}),"\n",(0,o.jsx)(n.p,{children:"We expect to see the latest email summaries every morning, so we need an automated scheduling task to achieve this goal."}),"\n",(0,o.jsxs)(n.h2,{id:"using-crontab",children:["Using ",(0,o.jsx)(n.code,{children:"crontab"})]}),"\n",(0,o.jsxs)(n.p,{children:["To fully automate this process, we utilize the ",(0,o.jsx)(n.code,{children:"crontab"})," feature of Linux to set up scheduled tasks."]}),"\n",(0,o.jsx)(n.p,{children:"This ensures that the program runs automatically at a fixed time every day, fetching new emails, generating summaries, and updating the GitHub repository."}),"\n",(0,o.jsxs)(n.p,{children:["The specific ",(0,o.jsx)(n.code,{children:"crontab"})," configuration is as follows:"]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-bash",children:"crontab -e\n"})}),"\n",(0,o.jsx)(n.p,{children:"Then add the following content:"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-bash",children:"# Edit this file to introduce tasks to be run by cron.\n#\n# Each task to run has to be defined through a single line\n# indicating with different fields when the task will be run\n# and what command to run for the task\n#\n# To define the time you can provide concrete values for\n# minute (m), hour (h), day of month (dom), month (mon),\n# and day of week (dow) or use '*' in these fields (for 'any').\n#\n# Notice that tasks will be started based on the cron's system\n# daemon's notion of time and timezones.\n#\n# Output of the crontab jobs (including errors) is sent through\n# email to the user the crontab file belongs to (unless redirected).\n#\n# For example, you can run a backup of all your user accounts\n# at 5 a.m every week with:\n# 0 5 * * 1 tar -zcf /var/backups/home.tgz /home/\n#\n# For more information see the manual pages of crontab(5) and cron(8)\n#\n# m h  dom mon dow   command\n\n# Define your environment variables\nOPENAI_API_KEY=\"your_openai_api_key\"\n\n# Automatically execute the update script every morning at 6\n0 6 * * * /path/to/your/script/update_targets_infos.sh\n"})}),"\n",(0,o.jsx)(n.p,{children:"Before setting up scheduled tasks, don't forget to grant execution permissions to the script files:"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-bash",children:"chmod +x /path/to/your/script/update_targets_infos.sh\n"})}),"\n",(0,o.jsxs)(n.p,{children:["Additionally, due to the specific environment of ",(0,o.jsx)(n.code,{children:"crontab"}),", you must ensure that the Python environment and related packages being executed are correct."]}),"\n",(0,o.jsx)(n.p,{children:"Therefore, in the program, we typically use absolute paths to execute Python scripts. Remember to modify the paths in the program."}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-bash",children:"# `update_targets_infos.sh`\n\n# ...omitting above\n\n# Execute Python program, replace this with your own python path\n$HOME/your/python main.py --project_name $project_name --time_length 1 2>&1\n\n# ...omitting below\n"})}),"\n",(0,o.jsxs)(n.admonition,{type:"tip",children:[(0,o.jsxs)(n.p,{children:["Crontab does not read your ",(0,o.jsx)(n.code,{children:".bashrc"})," or ",(0,o.jsx)(n.code,{children:".bash_profile"})," files, so you need to specify all environment variables in the program."]}),(0,o.jsxs)(n.p,{children:["This is also why we set the ",(0,o.jsx)(n.code,{children:"OPENAI_API_KEY"})," environment variable in the ",(0,o.jsx)(n.code,{children:"crontab"})," execution program."]})]}),"\n",(0,o.jsxs)(n.h2,{id:"testing-crontab",children:["Testing ",(0,o.jsx)(n.code,{children:"crontab"})]}),"\n",(0,o.jsxs)(n.p,{children:["So, after completing the setup, how can you test the automated tasks based on the ",(0,o.jsx)(n.code,{children:"crontab"})," environment?"]}),"\n",(0,o.jsx)(n.p,{children:"One feasible method is: start a new terminal, remove all environment variables, and then execute the program."}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-bash",children:"env -i HOME=$HOME OPENAI_API_KEY=your_openai_api_key /bin/bash --noprofile --norc\n\n# Then execute the program\n/path/to/your/script/update_targets_infos.sh\n"})}),"\n",(0,o.jsxs)(n.p,{children:["By running the program from this terminal, you can see how the program behaves in the ",(0,o.jsx)(n.code,{children:"crontab"})," environment."]})]})}function l(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,o.jsx)(n,{...e,children:(0,o.jsx)(h,{...e})}):h(e)}},28453:(e,n,t)=>{t.d(n,{R:()=>r,x:()=>i});var o=t(96540);const s={},a=o.createContext(s);function r(e){const n=o.useContext(a);return o.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function i(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:r(e.components),o.createElement(a.Provider,{value:n},e.children)}}}]);