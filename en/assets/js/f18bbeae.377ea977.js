"use strict";(self.webpackChunkblog=self.webpackChunkblog||[]).push([[9763],{55344:(e,s,a)=>{a.r(s),a.d(s,{assets:()=>h,contentTitle:()=>r,default:()=>o,frontMatter:()=>t,metadata:()=>l,toc:()=>c});var n=a(74848),i=a(28453);const t={},r="[21.06] BEiT",l={id:"beit/index",title:"[21.06] BEiT",description:"Discrete Encoding Pre-Training",source:"@site/i18n/en/docusaurus-plugin-content-docs-papers/current/2106-beit/index.md",sourceDirName:"2106-beit",slug:"/beit/",permalink:"/en/papers/beit/",draft:!1,unlisted:!1,tags:[],version:"current",lastUpdatedBy:"zephyr-sh",lastUpdatedAt:1724335925e3,frontMatter:{},sidebar:"papersSidebar",previous:{title:"[21.05] MLP-Mixer",permalink:"/en/papers/mlp-mixer/"},next:{title:"[21.09] PP-LCNet",permalink:"/en/papers/pp-lcnet/"}},h={},c=[{value:"Discrete Encoding Pre-Training",id:"discrete-encoding-pre-training",level:2},{value:"Problem Definition",id:"problem-definition",level:2},{value:"Problem Solving",id:"problem-solving",level:2},{value:"Model Architecture",id:"model-architecture",level:3},{value:"Training Method",id:"training-method",level:3},{value:"Fine-tuning for Downstream Tasks",id:"fine-tuning-for-downstream-tasks",level:3},{value:"Discussion",id:"discussion",level:2},{value:"Performance on ImageNet",id:"performance-on-imagenet",level:3},{value:"Ablation Studies",id:"ablation-studies",level:3},{value:"Conclusion",id:"conclusion",level:2}];function m(e){const s={a:"a",admonition:"admonition",annotation:"annotation",h1:"h1",h2:"h2",h3:"h3",header:"header",hr:"hr",img:"img",li:"li",math:"math",mfrac:"mfrac",mi:"mi",mn:"mn",mo:"mo",mrow:"mrow",msqrt:"msqrt",msub:"msub",msup:"msup",mtext:"mtext",ol:"ol",p:"p",path:"path",semantics:"semantics",span:"span",strong:"strong",svg:"svg",ul:"ul",...(0,i.R)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(s.header,{children:(0,n.jsx)(s.h1,{id:"2106-beit",children:"[21.06] BEiT"})}),"\n",(0,n.jsx)(s.h2,{id:"discrete-encoding-pre-training",children:"Discrete Encoding Pre-Training"}),"\n",(0,n.jsx)(s.p,{children:(0,n.jsx)(s.a,{href:"https://arxiv.org/abs/2106.08254",children:(0,n.jsx)(s.strong,{children:"BEiT: BERT Pre-Training of Image Transformers"})})}),"\n",(0,n.jsx)(s.hr,{}),"\n",(0,n.jsx)(s.p,{children:"The main comparisons in this paper are made between ViT and DeiT."}),"\n",(0,n.jsx)(s.p,{children:"The primary objective is to improve the classification performance of the ViT architecture on ImageNet."}),"\n",(0,n.jsx)(s.h2,{id:"problem-definition",children:"Problem Definition"}),"\n",(0,n.jsx)(s.p,{children:"BERT has achieved impressive results through MLM pre-training in the past, proving to be one of the most effective pre-training methods for self-encoding models."}),"\n",(0,n.jsxs)(s.ul,{children:["\n",(0,n.jsx)(s.li,{children:(0,n.jsx)(s.a,{href:"/en/papers/language-model/bert/",children:(0,n.jsx)(s.strong,{children:"BERT: Twelve Layers of Encoders"})})}),"\n"]}),"\n",(0,n.jsx)(s.p,{children:'However, the BERT concept doesn\'t translate as well to the image domain. In ViT, the authors attempted to mask parts of the model and predict the "RGB average" of each masked part for self-supervised learning, but the results were underwhelming. Eventually, they resorted to supervised learning for pre-training.'}),"\n",(0,n.jsx)(s.p,{children:"This paper aims to address the unresolved issues left by previous research by proposing a new pre-training method:"}),"\n",(0,n.jsxs)(s.ul,{children:["\n",(0,n.jsx)(s.li,{children:'Instead of directly predicting image pixel values, the authors suggest predicting "discrete labels" of images. This approach enables the model to learn higher-level features rather than just pixel values.'}),"\n"]}),"\n",(0,n.jsx)(s.h2,{id:"problem-solving",children:"Problem Solving"}),"\n",(0,n.jsx)(s.h3,{id:"model-architecture",children:"Model Architecture"}),"\n",(0,n.jsx)(s.p,{children:(0,n.jsx)(s.img,{alt:"BEiT arch",src:a(67259).A+"",width:"1578",height:"862"})}),"\n",(0,n.jsx)(s.p,{children:"There are two architectures present here, which we will examine in sequence."}),"\n",(0,n.jsx)(s.p,{children:"The first architecture is similar to a VAE, shown at the top of the image. This is not the author's proposed architecture but rather a result of prior research, only used to decompose images into small patches with labels."}),"\n",(0,n.jsx)(s.p,{children:'This part aims to discretize the image, allowing the model to learn higher-level features rather than just pixel values. The overall concept is like training an "image dictionary," corresponding to different abstract concepts of the image, with a total of 8192 labels.'}),"\n",(0,n.jsx)(s.p,{children:"For details on the training method and more information, please refer to the original paper:"}),"\n",(0,n.jsxs)(s.ul,{children:["\n",(0,n.jsxs)(s.li,{children:["\n",(0,n.jsx)(s.p,{children:(0,n.jsx)(s.a,{href:"https://arxiv.org/abs/2102.12092",children:(0,n.jsx)(s.strong,{children:"[21.02] Zero-Shot Text-to-Image Generation"})})}),"\n",(0,n.jsx)(s.admonition,{type:"tip",children:(0,n.jsx)(s.p,{children:"Yes, it's the famous DALL-E."})}),"\n"]}),"\n"]}),"\n",(0,n.jsx)(s.hr,{}),"\n",(0,n.jsx)(s.p,{children:"The second architecture, shown in the lower part of the image, is the model that actually participates in gradient updates."}),"\n",(0,n.jsx)(s.p,{children:"This part is identical to the ViT we are familiar with. The difference is that instead of using image labels for supervision, BEiT introduces BERT's MLM mechanism:"}),"\n",(0,n.jsxs)(s.ol,{children:["\n",(0,n.jsxs)(s.li,{children:["\n",(0,n.jsxs)(s.p,{children:[(0,n.jsx)(s.strong,{children:"Patchify"}),": The image is split into small patches, similar to ViT."]}),"\n"]}),"\n",(0,n.jsxs)(s.li,{children:["\n",(0,n.jsxs)(s.p,{children:[(0,n.jsx)(s.strong,{children:"Blockwise Masking"}),": This part differs, as some patches are randomly masked. The masking logic is detailed in the paper:"]}),"\n",(0,n.jsx)(s.p,{children:(0,n.jsx)(s.img,{alt:"masking",src:a(6636).A+"",width:"984",height:"572"})}),"\n",(0,n.jsx)(s.p,{children:'The masking logic uses "block-wise" rather than "token-level" masking like BERT. Each iteration randomly generates an aspect ratio and selects the mask size, then covers the entire block.'}),"\n",(0,n.jsx)(s.p,{children:"This process repeats until 40% of the image blocks are masked."}),"\n"]}),"\n",(0,n.jsxs)(s.li,{children:["\n",(0,n.jsxs)(s.p,{children:[(0,n.jsx)(s.strong,{children:"Transformer Encoder"}),": This part is the same as ViT's Encoder, where the masked blocks are input into the model for prediction."]}),"\n"]}),"\n",(0,n.jsxs)(s.li,{children:["\n",(0,n.jsxs)(s.p,{children:[(0,n.jsx)(s.strong,{children:"Masked Patch Prediction"}),": This part predicts the labels of the masked blocks, one of the 8192 labels mentioned earlier."]}),"\n"]}),"\n"]}),"\n",(0,n.jsx)(s.h3,{id:"training-method",children:"Training Method"}),"\n",(0,n.jsx)(s.p,{children:"BEiT's network architecture follows ViT-Base's design to ensure fair comparison. BEiT employs a 12-layer Transformer structure with a hidden size of 768, 12 attention heads, and a 3072 intermediate size in the FFN. The input patch size is 16 \xd7 16, with a vocabulary size of 8192 visual tokens generated by a trained image tokenizer."}),"\n",(0,n.jsx)(s.p,{children:"BEiT is pre-trained on the ImageNet-1K training set, containing about 1.2 million images. The pre-training process includes image augmentations like random resizing, cropping, horizontal flipping, and color jittering. Importantly, labels are not used during pre-training."}),"\n",(0,n.jsx)(s.p,{children:"The authors experimented with a 224 \xd7 224 resolution, splitting the input image into 14 \xd7 14 patches, and randomly masking up to 75 patches (around 40%)."}),"\n",(0,n.jsxs)(s.p,{children:["Pre-training lasted for approximately 500,000 steps (around 800 epochs) with a batch size of 2000. They used the Adam optimizer with ",(0,n.jsxs)(s.span,{className:"katex",children:[(0,n.jsx)(s.span,{className:"katex-mathml",children:(0,n.jsx)(s.math,{xmlns:"http://www.w3.org/1998/Math/MathML",children:(0,n.jsxs)(s.semantics,{children:[(0,n.jsxs)(s.mrow,{children:[(0,n.jsxs)(s.msub,{children:[(0,n.jsx)(s.mi,{children:"\u03b2"}),(0,n.jsx)(s.mn,{children:"1"})]}),(0,n.jsx)(s.mo,{children:"="}),(0,n.jsx)(s.mn,{children:"0.9"})]}),(0,n.jsx)(s.annotation,{encoding:"application/x-tex",children:"\\beta_1 = 0.9"})]})})}),(0,n.jsxs)(s.span,{className:"katex-html","aria-hidden":"true",children:[(0,n.jsxs)(s.span,{className:"base",children:[(0,n.jsx)(s.span,{className:"strut",style:{height:"0.8889em",verticalAlign:"-0.1944em"}}),(0,n.jsxs)(s.span,{className:"mord",children:[(0,n.jsx)(s.span,{className:"mord mathnormal",style:{marginRight:"0.05278em"},children:"\u03b2"}),(0,n.jsx)(s.span,{className:"msupsub",children:(0,n.jsxs)(s.span,{className:"vlist-t vlist-t2",children:[(0,n.jsxs)(s.span,{className:"vlist-r",children:[(0,n.jsx)(s.span,{className:"vlist",style:{height:"0.3011em"},children:(0,n.jsxs)(s.span,{style:{top:"-2.55em",marginLeft:"-0.0528em",marginRight:"0.05em"},children:[(0,n.jsx)(s.span,{className:"pstrut",style:{height:"2.7em"}}),(0,n.jsx)(s.span,{className:"sizing reset-size6 size3 mtight",children:(0,n.jsx)(s.span,{className:"mord mtight",children:"1"})})]})}),(0,n.jsx)(s.span,{className:"vlist-s",children:"\u200b"})]}),(0,n.jsx)(s.span,{className:"vlist-r",children:(0,n.jsx)(s.span,{className:"vlist",style:{height:"0.15em"},children:(0,n.jsx)(s.span,{})})})]})})]}),(0,n.jsx)(s.span,{className:"mspace",style:{marginRight:"0.2778em"}}),(0,n.jsx)(s.span,{className:"mrel",children:"="}),(0,n.jsx)(s.span,{className:"mspace",style:{marginRight:"0.2778em"}})]}),(0,n.jsxs)(s.span,{className:"base",children:[(0,n.jsx)(s.span,{className:"strut",style:{height:"0.6444em"}}),(0,n.jsx)(s.span,{className:"mord",children:"0.9"})]})]})]})," and ",(0,n.jsxs)(s.span,{className:"katex",children:[(0,n.jsx)(s.span,{className:"katex-mathml",children:(0,n.jsx)(s.math,{xmlns:"http://www.w3.org/1998/Math/MathML",children:(0,n.jsxs)(s.semantics,{children:[(0,n.jsxs)(s.mrow,{children:[(0,n.jsxs)(s.msub,{children:[(0,n.jsx)(s.mi,{children:"\u03b2"}),(0,n.jsx)(s.mn,{children:"2"})]}),(0,n.jsx)(s.mo,{children:"="}),(0,n.jsx)(s.mn,{children:"0.999"})]}),(0,n.jsx)(s.annotation,{encoding:"application/x-tex",children:"\\beta_2 = 0.999"})]})})}),(0,n.jsxs)(s.span,{className:"katex-html","aria-hidden":"true",children:[(0,n.jsxs)(s.span,{className:"base",children:[(0,n.jsx)(s.span,{className:"strut",style:{height:"0.8889em",verticalAlign:"-0.1944em"}}),(0,n.jsxs)(s.span,{className:"mord",children:[(0,n.jsx)(s.span,{className:"mord mathnormal",style:{marginRight:"0.05278em"},children:"\u03b2"}),(0,n.jsx)(s.span,{className:"msupsub",children:(0,n.jsxs)(s.span,{className:"vlist-t vlist-t2",children:[(0,n.jsxs)(s.span,{className:"vlist-r",children:[(0,n.jsx)(s.span,{className:"vlist",style:{height:"0.3011em"},children:(0,n.jsxs)(s.span,{style:{top:"-2.55em",marginLeft:"-0.0528em",marginRight:"0.05em"},children:[(0,n.jsx)(s.span,{className:"pstrut",style:{height:"2.7em"}}),(0,n.jsx)(s.span,{className:"sizing reset-size6 size3 mtight",children:(0,n.jsx)(s.span,{className:"mord mtight",children:"2"})})]})}),(0,n.jsx)(s.span,{className:"vlist-s",children:"\u200b"})]}),(0,n.jsx)(s.span,{className:"vlist-r",children:(0,n.jsx)(s.span,{className:"vlist",style:{height:"0.15em"},children:(0,n.jsx)(s.span,{})})})]})})]}),(0,n.jsx)(s.span,{className:"mspace",style:{marginRight:"0.2778em"}}),(0,n.jsx)(s.span,{className:"mrel",children:"="}),(0,n.jsx)(s.span,{className:"mspace",style:{marginRight:"0.2778em"}})]}),(0,n.jsxs)(s.span,{className:"base",children:[(0,n.jsx)(s.span,{className:"strut",style:{height:"0.6444em"}}),(0,n.jsx)(s.span,{className:"mord",children:"0.999"})]})]})]}),", a learning rate set at ",(0,n.jsxs)(s.span,{className:"katex",children:[(0,n.jsx)(s.span,{className:"katex-mathml",children:(0,n.jsx)(s.math,{xmlns:"http://www.w3.org/1998/Math/MathML",children:(0,n.jsxs)(s.semantics,{children:[(0,n.jsxs)(s.mrow,{children:[(0,n.jsx)(s.mn,{children:"1.5"}),(0,n.jsx)(s.mo,{children:"\xd7"}),(0,n.jsx)(s.mn,{children:"1"}),(0,n.jsxs)(s.msup,{children:[(0,n.jsx)(s.mn,{children:"0"}),(0,n.jsxs)(s.mrow,{children:[(0,n.jsx)(s.mo,{children:"\u2212"}),(0,n.jsx)(s.mn,{children:"3"})]})]})]}),(0,n.jsx)(s.annotation,{encoding:"application/x-tex",children:"1.5 \\times 10^{-3}"})]})})}),(0,n.jsxs)(s.span,{className:"katex-html","aria-hidden":"true",children:[(0,n.jsxs)(s.span,{className:"base",children:[(0,n.jsx)(s.span,{className:"strut",style:{height:"0.7278em",verticalAlign:"-0.0833em"}}),(0,n.jsx)(s.span,{className:"mord",children:"1.5"}),(0,n.jsx)(s.span,{className:"mspace",style:{marginRight:"0.2222em"}}),(0,n.jsx)(s.span,{className:"mbin",children:"\xd7"}),(0,n.jsx)(s.span,{className:"mspace",style:{marginRight:"0.2222em"}})]}),(0,n.jsxs)(s.span,{className:"base",children:[(0,n.jsx)(s.span,{className:"strut",style:{height:"0.8141em"}}),(0,n.jsx)(s.span,{className:"mord",children:"1"}),(0,n.jsxs)(s.span,{className:"mord",children:[(0,n.jsx)(s.span,{className:"mord",children:"0"}),(0,n.jsx)(s.span,{className:"msupsub",children:(0,n.jsx)(s.span,{className:"vlist-t",children:(0,n.jsx)(s.span,{className:"vlist-r",children:(0,n.jsx)(s.span,{className:"vlist",style:{height:"0.8141em"},children:(0,n.jsxs)(s.span,{style:{top:"-3.063em",marginRight:"0.05em"},children:[(0,n.jsx)(s.span,{className:"pstrut",style:{height:"2.7em"}}),(0,n.jsx)(s.span,{className:"sizing reset-size6 size3 mtight",children:(0,n.jsxs)(s.span,{className:"mord mtight",children:[(0,n.jsx)(s.span,{className:"mord mtight",children:"\u2212"}),(0,n.jsx)(s.span,{className:"mord mtight",children:"3"})]})})]})})})})})]})]})]})]}),", with the first 10 epochs as a warm-up period, followed by cosine learning rate decay. Weight decay was set at 0.05, and random depth with a rate of 0.1 was employed."]}),"\n",(0,n.jsx)(s.p,{children:"Training utilized 16 Nvidia Tesla V100 32GB GPU cards, taking about five days."}),"\n",(0,n.jsxs)(s.p,{children:["To stabilize large-scale Transformer pre-training, the authors emphasized proper initialization. Initially, all parameters were randomly initialized within a small range (e.g., ",(0,n.jsxs)(s.span,{className:"katex",children:[(0,n.jsx)(s.span,{className:"katex-mathml",children:(0,n.jsx)(s.math,{xmlns:"http://www.w3.org/1998/Math/MathML",children:(0,n.jsxs)(s.semantics,{children:[(0,n.jsxs)(s.mrow,{children:[(0,n.jsx)(s.mo,{stretchy:"false",children:"["}),(0,n.jsx)(s.mo,{children:"\u2212"}),(0,n.jsx)(s.mn,{children:"0.02"}),(0,n.jsx)(s.mo,{separator:"true",children:","}),(0,n.jsx)(s.mn,{children:"0.02"}),(0,n.jsx)(s.mo,{stretchy:"false",children:"]"})]}),(0,n.jsx)(s.annotation,{encoding:"application/x-tex",children:"[-0.02, 0.02]"})]})})}),(0,n.jsx)(s.span,{className:"katex-html","aria-hidden":"true",children:(0,n.jsxs)(s.span,{className:"base",children:[(0,n.jsx)(s.span,{className:"strut",style:{height:"1em",verticalAlign:"-0.25em"}}),(0,n.jsx)(s.span,{className:"mopen",children:"["}),(0,n.jsx)(s.span,{className:"mord",children:"\u2212"}),(0,n.jsx)(s.span,{className:"mord",children:"0.02"}),(0,n.jsx)(s.span,{className:"mpunct",children:","}),(0,n.jsx)(s.span,{className:"mspace",style:{marginRight:"0.1667em"}}),(0,n.jsx)(s.span,{className:"mord",children:"0.02"}),(0,n.jsx)(s.span,{className:"mclose",children:"]"})]})})]}),"), and for the ",(0,n.jsxs)(s.span,{className:"katex",children:[(0,n.jsx)(s.span,{className:"katex-mathml",children:(0,n.jsx)(s.math,{xmlns:"http://www.w3.org/1998/Math/MathML",children:(0,n.jsxs)(s.semantics,{children:[(0,n.jsx)(s.mrow,{children:(0,n.jsx)(s.mi,{children:"l"})}),(0,n.jsx)(s.annotation,{encoding:"application/x-tex",children:"l"})]})})}),(0,n.jsx)(s.span,{className:"katex-html","aria-hidden":"true",children:(0,n.jsxs)(s.span,{className:"base",children:[(0,n.jsx)(s.span,{className:"strut",style:{height:"0.6944em"}}),(0,n.jsx)(s.span,{className:"mord mathnormal",style:{marginRight:"0.01968em"},children:"l"})]})})]}),"-th layer of the Transformer, the output matrices of the self-attention module and FFN were rescaled by ",(0,n.jsxs)(s.span,{className:"katex",children:[(0,n.jsx)(s.span,{className:"katex-mathml",children:(0,n.jsx)(s.math,{xmlns:"http://www.w3.org/1998/Math/MathML",children:(0,n.jsxs)(s.semantics,{children:[(0,n.jsx)(s.mrow,{children:(0,n.jsxs)(s.mfrac,{children:[(0,n.jsx)(s.mn,{children:"1"}),(0,n.jsx)(s.msqrt,{children:(0,n.jsxs)(s.mrow,{children:[(0,n.jsx)(s.mn,{children:"2"}),(0,n.jsx)(s.mi,{children:"l"})]})})]})}),(0,n.jsx)(s.annotation,{encoding:"application/x-tex",children:"\\frac{1}{\\sqrt{2l}}"})]})})}),(0,n.jsx)(s.span,{className:"katex-html","aria-hidden":"true",children:(0,n.jsxs)(s.span,{className:"base",children:[(0,n.jsx)(s.span,{className:"strut",style:{height:"1.3831em",verticalAlign:"-0.538em"}}),(0,n.jsxs)(s.span,{className:"mord",children:[(0,n.jsx)(s.span,{className:"mopen nulldelimiter"}),(0,n.jsx)(s.span,{className:"mfrac",children:(0,n.jsxs)(s.span,{className:"vlist-t vlist-t2",children:[(0,n.jsxs)(s.span,{className:"vlist-r",children:[(0,n.jsxs)(s.span,{className:"vlist",style:{height:"0.8451em"},children:[(0,n.jsxs)(s.span,{style:{top:"-2.5335em"},children:[(0,n.jsx)(s.span,{className:"pstrut",style:{height:"3em"}}),(0,n.jsx)(s.span,{className:"sizing reset-size6 size3 mtight",children:(0,n.jsx)(s.span,{className:"mord mtight",children:(0,n.jsx)(s.span,{className:"mord sqrt mtight",children:(0,n.jsxs)(s.span,{className:"vlist-t vlist-t2",children:[(0,n.jsxs)(s.span,{className:"vlist-r",children:[(0,n.jsxs)(s.span,{className:"vlist",style:{height:"0.9378em"},children:[(0,n.jsxs)(s.span,{className:"svg-align",style:{top:"-3em"},children:[(0,n.jsx)(s.span,{className:"pstrut",style:{height:"3em"}}),(0,n.jsxs)(s.span,{className:"mord mtight",style:{paddingLeft:"0.833em"},children:[(0,n.jsx)(s.span,{className:"mord mtight",children:"2"}),(0,n.jsx)(s.span,{className:"mord mathnormal mtight",style:{marginRight:"0.01968em"},children:"l"})]})]}),(0,n.jsxs)(s.span,{style:{top:"-2.8978em"},children:[(0,n.jsx)(s.span,{className:"pstrut",style:{height:"3em"}}),(0,n.jsx)(s.span,{className:"hide-tail mtight",style:{minWidth:"0.853em",height:"1.08em"},children:(0,n.jsx)(s.svg,{xmlns:"http://www.w3.org/2000/svg",width:"400em",height:"1.08em",viewBox:"0 0 400000 1080",preserveAspectRatio:"xMinYMin slice",children:(0,n.jsx)(s.path,{d:"M95,702\nc-2.7,0,-7.17,-2.7,-13.5,-8c-5.8,-5.3,-9.5,-10,-9.5,-14\nc0,-2,0.3,-3.3,1,-4c1.3,-2.7,23.83,-20.7,67.5,-54\nc44.2,-33.3,65.8,-50.3,66.5,-51c1.3,-1.3,3,-2,5,-2c4.7,0,8.7,3.3,12,10\ns173,378,173,378c0.7,0,35.3,-71,104,-213c68.7,-142,137.5,-285,206.5,-429\nc69,-144,104.5,-217.7,106.5,-221\nl0 -0\nc5.3,-9.3,12,-14,20,-14\nH400000v40H845.2724\ns-225.272,467,-225.272,467s-235,486,-235,486c-2.7,4.7,-9,7,-19,7\nc-6,0,-10,-1,-12,-3s-194,-422,-194,-422s-65,47,-65,47z\nM834 80h400000v40h-400000z"})})})]})]}),(0,n.jsx)(s.span,{className:"vlist-s",children:"\u200b"})]}),(0,n.jsx)(s.span,{className:"vlist-r",children:(0,n.jsx)(s.span,{className:"vlist",style:{height:"0.1022em"},children:(0,n.jsx)(s.span,{})})})]})})})})]}),(0,n.jsxs)(s.span,{style:{top:"-3.23em"},children:[(0,n.jsx)(s.span,{className:"pstrut",style:{height:"3em"}}),(0,n.jsx)(s.span,{className:"frac-line",style:{borderBottomWidth:"0.04em"}})]}),(0,n.jsxs)(s.span,{style:{top:"-3.394em"},children:[(0,n.jsx)(s.span,{className:"pstrut",style:{height:"3em"}}),(0,n.jsx)(s.span,{className:"sizing reset-size6 size3 mtight",children:(0,n.jsx)(s.span,{className:"mord mtight",children:(0,n.jsx)(s.span,{className:"mord mtight",children:"1"})})})]})]}),(0,n.jsx)(s.span,{className:"vlist-s",children:"\u200b"})]}),(0,n.jsx)(s.span,{className:"vlist-r",children:(0,n.jsx)(s.span,{className:"vlist",style:{height:"0.538em"},children:(0,n.jsx)(s.span,{})})})]})}),(0,n.jsx)(s.span,{className:"mclose nulldelimiter"})]})]})})]}),"."]}),"\n",(0,n.jsx)(s.h3,{id:"fine-tuning-for-downstream-tasks",children:"Fine-tuning for Downstream Tasks"}),"\n",(0,n.jsx)(s.p,{children:"After pre-training BEiT, the authors added task-specific layers on the Transformer and fine-tuned the parameters on downstream tasks, similar to BERT."}),"\n",(0,n.jsx)(s.p,{children:"The paper uses image classification and semantic segmentation as examples. For other visual tasks, the pre-train and fine-tune paradigm can be directly applied."}),"\n",(0,n.jsxs)(s.ul,{children:["\n",(0,n.jsxs)(s.li,{children:["\n",(0,n.jsxs)(s.p,{children:[(0,n.jsx)(s.strong,{children:"Image Classification"}),": For image classification, the authors used a simple linear classifier as the task layer. The representations were aggregated using average pooling and passed to a softmax classifier."]}),"\n"]}),"\n",(0,n.jsxs)(s.li,{children:["\n",(0,n.jsxs)(s.p,{children:[(0,n.jsx)(s.strong,{children:"Semantic Segmentation"}),": For semantic segmentation, the authors followed the task layer used in SETR-PUP. They employed the pre-trained BEiT as the backbone encoder and combined it with several deconvolution layers as the decoder to generate segmentation. The model was fine-tuned end-to-end, similar to image classification."]}),"\n",(0,n.jsxs)(s.ul,{children:["\n",(0,n.jsx)(s.li,{children:(0,n.jsx)(s.a,{href:"https://arxiv.org/abs/2012.15840",children:(0,n.jsx)(s.strong,{children:"[20.12] Rethinking Semantic Segmentation from a Sequence-to-Sequence Perspective with Transformers"})})}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,n.jsx)(s.h2,{id:"discussion",children:"Discussion"}),"\n",(0,n.jsx)(s.h3,{id:"performance-on-imagenet",children:"Performance on ImageNet"}),"\n",(0,n.jsx)(s.p,{children:(0,n.jsx)(s.img,{alt:"imagenet",src:a(61897).A+"",width:"1348",height:"938"})}),"\n",(0,n.jsx)(s.p,{children:"The authors investigated the performance of the BEiT model on the image classification task, comparing it in detail with several popular visual Transformer models. Among these models, only iGPT has 1.36B parameters, while the others are of basic size. Notably, ViT-JFT300M was pre-trained on 300 million images internally at Google, giving it an advantage in comparison."}),"\n",(0,n.jsx)(s.p,{children:"However, the study shows that the pre-trained BEiT model significantly outperforms these comparative models on the ImageNet dataset."}),"\n",(0,n.jsxs)(s.p,{children:["To further validate BEiT's performance, the authors fine-tuned it on a 224 \xd7 224 resolution and then additionally fine-tuned on images with a 384 \xd7 384 resolution. The results indicate that the higher resolution significantly improves BEiT's performance on ImageNet, even surpassing ",(0,n.jsxs)(s.span,{className:"katex",children:[(0,n.jsx)(s.span,{className:"katex-mathml",children:(0,n.jsx)(s.math,{xmlns:"http://www.w3.org/1998/Math/MathML",children:(0,n.jsxs)(s.semantics,{children:[(0,n.jsx)(s.mrow,{children:(0,n.jsxs)(s.msub,{children:[(0,n.jsx)(s.mtext,{children:"ViT"}),(0,n.jsx)(s.mn,{children:"384"})]})}),(0,n.jsx)(s.annotation,{encoding:"application/x-tex",children:"\\text{ViT}_{384}"})]})})}),(0,n.jsx)(s.span,{className:"katex-html","aria-hidden":"true",children:(0,n.jsxs)(s.span,{className:"base",children:[(0,n.jsx)(s.span,{className:"strut",style:{height:"0.8333em",verticalAlign:"-0.15em"}}),(0,n.jsxs)(s.span,{className:"mord",children:[(0,n.jsx)(s.span,{className:"mord text",children:(0,n.jsx)(s.span,{className:"mord",children:"ViT"})}),(0,n.jsx)(s.span,{className:"msupsub",children:(0,n.jsxs)(s.span,{className:"vlist-t vlist-t2",children:[(0,n.jsxs)(s.span,{className:"vlist-r",children:[(0,n.jsx)(s.span,{className:"vlist",style:{height:"0.3011em"},children:(0,n.jsxs)(s.span,{style:{top:"-2.55em",marginRight:"0.05em"},children:[(0,n.jsx)(s.span,{className:"pstrut",style:{height:"2.7em"}}),(0,n.jsx)(s.span,{className:"sizing reset-size6 size3 mtight",children:(0,n.jsx)(s.span,{className:"mord mtight",children:(0,n.jsx)(s.span,{className:"mord mtight",children:"384"})})})]})}),(0,n.jsx)(s.span,{className:"vlist-s",children:"\u200b"})]}),(0,n.jsx)(s.span,{className:"vlist-r",children:(0,n.jsx)(s.span,{className:"vlist",style:{height:"0.15em"},children:(0,n.jsx)(s.span,{})})})]})})]})]})})]}),", which was pre-trained on ImageNet-22K."]}),"\n",(0,n.jsx)(s.p,{children:"Additionally, the study extended the BEiT model to larger versions (e.g., BEiT-L) and found that its performance improvement is more pronounced than when scaling ViT from base to large versions. This demonstrates BEiT's potential in handling larger models. As the model size increases, BEiT's performance improvement is more significant, especially in scenarios with insufficient labeled data."}),"\n",(0,n.jsx)(s.h3,{id:"ablation-studies",children:"Ablation Studies"}),"\n",(0,n.jsx)(s.p,{children:(0,n.jsx)(s.img,{alt:"ablation",src:a(25434).A+"",width:"1224",height:"450"})}),"\n",(0,n.jsx)(s.p,{children:"Finally, the authors conducted ablation studies on several key components. Firstly, they examined Blockwise masking by randomly sampling mask positions. The results show that Blockwise masking benefits both image classification and semantic segmentation tasks, particularly in the latter."}),"\n",(0,n.jsx)(s.p,{children:"Next, the authors removed visual tokens and instead predicted the original pixels of the masked areas, turning the pre-training task into a pixel regression problem. The results demonstrate that the proposed masked image modeling task significantly outperforms simple pixel-level autoencoding."}),"\n",(0,n.jsx)(s.p,{children:"Compared to the results in the table, the ablation results underperform compared to vision Transformers trained from scratch, indicating that visual token prediction is a crucial component of BEIT."}),"\n",(0,n.jsx)(s.p,{children:"Thirdly, the authors ablated both visual tokens and Blockwise masking, showing that Blockwise masking benefits pixel-level autoencoding more by alleviating short-range dependency issues."}),"\n",(0,n.jsx)(s.p,{children:"Fourthly, restoring all visual tokens harms downstream task performance. Fifthly, the authors compared BEiT's performance at different training steps, showing that extending pre-training time can further improve downstream task performance."}),"\n",(0,n.jsx)(s.p,{children:"These ablation studies indicate that Blockwise masking and visual token prediction are essential to BEIT's success."}),"\n",(0,n.jsx)(s.h2,{id:"conclusion",children:"Conclusion"}),"\n",(0,n.jsx)(s.p,{children:(0,n.jsx)(s.img,{alt:"conclusion",src:a(96599).A+"",width:"1224",height:"620"})}),"\n",(0,n.jsx)(s.p,{children:"BEiT continues the unfinished self-supervised pre-training of ViT, successfully transferring BERT's success to the ViT architecture. By introducing a self-supervised pre-training framework, BEiT achieves excellent fine-tuning results on downstream tasks like image classification and semantic segmentation."}),"\n",(0,n.jsx)(s.p,{children:"Additionally, this method has an interesting feature of automatically acquiring knowledge about semantic regions without any manual labeling (as shown above), laying a significant foundation for future multi-modal pre-training tasks."}),"\n",(0,n.jsx)(s.p,{children:"Subsequent versions, BEiT-V2 and BEiT-V3, have further improvements, which we will discuss when they become relevant."})]})}function o(e={}){const{wrapper:s}={...(0,i.R)(),...e.components};return s?(0,n.jsx)(s,{...e,children:(0,n.jsx)(m,{...e})}):m(e)}},67259:(e,s,a)=>{a.d(s,{A:()=>n});const n=a.p+"assets/images/img1-fbf20a2c0a4757972baf1ee3d04f59fe.jpg"},6636:(e,s,a)=>{a.d(s,{A:()=>n});const n=a.p+"assets/images/img2-b660dd352e924304d1fb22f10a5997aa.jpg"},61897:(e,s,a)=>{a.d(s,{A:()=>n});const n=a.p+"assets/images/img3-8072f5faa49ffc9491d0e1d5f73cbe05.jpg"},25434:(e,s,a)=>{a.d(s,{A:()=>n});const n=a.p+"assets/images/img4-f9ebaf81f88238b730ca300b052f5045.jpg"},96599:(e,s,a)=>{a.d(s,{A:()=>n});const n=a.p+"assets/images/img5-3ed83b16295b8cb9ed232387063ff75a.jpg"},28453:(e,s,a)=>{a.d(s,{R:()=>r,x:()=>l});var n=a(96540);const i={},t=n.createContext(i);function r(e){const s=n.useContext(t);return n.useMemo((function(){return"function"==typeof e?e(s):{...s,...e}}),[s,e])}function l(e){let s;return s=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:r(e.components),n.createElement(t.Provider,{value:s},e.children)}}}]);