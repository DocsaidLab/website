"use strict";(self.webpackChunkdocsaid_website=self.webpackChunkdocsaid_website||[]).push([["97971"],{82164:function(e,n,s){s.r(n),s.d(n,{assets:()=>c,contentTitle:()=>o,default:()=>h,frontMatter:()=>a,metadata:()=>i,toc:()=>l});var i=s(97149),r=s(74848),t=s(84429);let a={slug:"setting-up-pypiserver-on-ubuntu-with-docker",title:"Setting Up PyPiServer on Ubuntu with Docker",authors:"Z. Yuan",tags:["docker","pypiserver"],image:"/en/img/2023/0913.webp",description:"Recording the process of setting up PyPiServer on Ubuntu."},o,c={authorsImageUrls:[void 0]},l=[{value:"Pull the Image",id:"pull-the-image",level:2},{value:"Create Directory",id:"create-directory",level:2},{value:"Set Up htpasswd",id:"set-up-htpasswd",level:2},{value:"Mount as a Background Service",id:"mount-as-a-background-service",level:2},{value:"Create Configuration File",id:"create-configuration-file",level:3},{value:"Create Systemd Service",id:"create-systemd-service",level:3},{value:"Start the Service",id:"start-the-service",level:3},{value:"Check the Status",id:"check-the-status",level:2},{value:"Get Started",id:"get-started",level:2},{value:"Upload a Package",id:"upload-a-package",level:3},{value:"Download and Install a Package",id:"download-and-install-a-package",level:3},{value:"Use Basic Authentication",id:"use-basic-authentication",level:3},{value:"Set Up <code>pip.conf</code>",id:"set-up-pipconf",level:2},{value:"Configuration File",id:"configuration-file",level:3},{value:"Conclusion",id:"conclusion",level:2}];function d(e){let n={a:"a",admonition:"admonition",code:"code",h2:"h2",h3:"h3",img:"img",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,t.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.p,{children:"Recently, I set up a PyPi Server to host my package installation files. I used an Ubuntu system with Docker for the setup, and I\u2019ll document the process here."}),"\n",(0,r.jsx)(n.admonition,{type:"tip",children:(0,r.jsx)(n.p,{children:"I assume the reader already has Docker installed on Ubuntu and is familiar with basic Docker operations. If not, you might want to first review related knowledge."})}),"\n",(0,r.jsx)(n.h2,{id:"pull-the-image",children:"Pull the Image"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"docker pull pypiserver/pypiserver:latest\n"})}),"\n",(0,r.jsx)(n.h2,{id:"create-directory",children:"Create Directory"}),"\n",(0,r.jsx)(n.p,{children:"No need for much explanation, simply create a directory under your home directory to store Python packages."}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"mkdir ~/packages\n"})}),"\n",(0,r.jsx)(n.p,{children:"You can choose your preferred name, but make sure to update the configuration files accordingly."}),"\n",(0,r.jsx)(n.h2,{id:"set-up-htpasswd",children:"Set Up htpasswd"}),"\n",(0,r.jsx)(n.admonition,{type:"tip",children:(0,r.jsx)(n.p,{children:"If you don\u2019t want to set up a password, you can skip this step."})}),"\n",(0,r.jsx)(n.p,{children:"htpasswd is a file format used to store usernames and passwords, which PyPiServer uses for user authentication. This is a simple yet effective way to enhance PyPiServer's security."}),"\n",(0,r.jsxs)(n.p,{children:["First, install ",(0,r.jsx)(n.code,{children:"apache2-utils"}),":"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"sudo apt install apache2-utils\n"})}),"\n",(0,r.jsxs)(n.p,{children:["Then, use the following command to create a new ",(0,r.jsx)(n.code,{children:".htpasswd"})," file:"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"htpasswd -c ~/.htpasswd [username]\n"})}),"\n",(0,r.jsxs)(n.p,{children:["It will prompt you to enter the password for ",(0,r.jsx)(n.code,{children:"username"}),". After entering the password, the ",(0,r.jsx)(n.code,{children:".htpasswd"})," file will be created in your home directory. Once the file is created, we can run ",(0,r.jsx)(n.code,{children:"pypiserver"})," with the ",(0,r.jsx)(n.code,{children:"docker run"})," command and use the ",(0,r.jsx)(n.code,{children:".htpasswd"})," file for authentication."]}),"\n",(0,r.jsx)(n.h2,{id:"mount-as-a-background-service",children:"Mount as a Background Service"}),"\n",(0,r.jsx)(n.p,{children:"To run the Docker container as a background service, we will use Docker Compose and Systemd."}),"\n",(0,r.jsx)(n.p,{children:"If you haven't installed Docker Compose yet, follow the installation instructions:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"https://docs.docker.com/compose/install/",children:(0,r.jsx)(n.strong,{children:"Official Docker Compose Installation Guide"})})}),"\n"]}),"\n",(0,r.jsxs)(n.p,{children:["Note that Docker Compose has undergone significant updates recently, and many commands have changed. The most notable change is that the previously used ",(0,r.jsx)(n.code,{children:"docker-compose"})," command is now simply ",(0,r.jsx)(n.code,{children:"docker compose"}),"."]}),"\n",(0,r.jsx)(n.p,{children:"To install the latest version of Docker Compose, follow these steps:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"sudo apt update\nsudo apt install docker-compose-plugin\n"})}),"\n",(0,r.jsx)(n.p,{children:"Check if Docker Compose is installed correctly:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"docker compose version\n"})}),"\n",(0,r.jsx)(n.h3,{id:"create-configuration-file",children:"Create Configuration File"}),"\n",(0,r.jsxs)(n.p,{children:["Create a ",(0,r.jsx)(n.code,{children:"docker-compose.yml"})," file in a convenient location and add the following content:"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-yaml",metastring:'{6-7} title="docker-compose.yml"',children:'version: "3.3"\nservices:\n  pypiserver:\n    image: pypiserver/pypiserver:latest\n    volumes:\n      - /home/[username]/auth:/data/auth\n      - /home/[username]/packages:/data/packages\n    command: run -P /data/auth/.htpasswd -a update,download,list /data/packages\n    ports:\n      - "8080:8080"\n'})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["Make sure to replace ",(0,r.jsx)(n.code,{children:"[username]"})," with your actual username."]}),"\n",(0,r.jsxs)(n.li,{children:["You can modify the external port mapping, for example: ",(0,r.jsx)(n.code,{children:'"18080:8080"'}),"."]}),"\n"]}),"\n",(0,r.jsx)(n.admonition,{type:"tip",children:(0,r.jsxs)(n.p,{children:["You can refer to the example provided by ",(0,r.jsx)(n.code,{children:"pypiserver"})," here: ",(0,r.jsx)(n.a,{href:"https://github.com/pypiserver/pypiserver/blob/master/docker-compose.yml",children:(0,r.jsx)(n.strong,{children:"docker-compose.yml"})})]})}),"\n",(0,r.jsxs)(n.p,{children:["If you don\u2019t want to set up a password for authentication, modify the ",(0,r.jsx)(n.code,{children:"command"})," line in the ",(0,r.jsx)(n.code,{children:"docker-compose.yml"})," file as follows:"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-yaml",children:"command: run -a . -P . /data/packages --server wsgiref\n"})}),"\n",(0,r.jsx)(n.h3,{id:"create-systemd-service",children:"Create Systemd Service"}),"\n",(0,r.jsx)(n.p,{children:"Create a configuration file for the service:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"sudo vim /etc/systemd/system/pypiserver.service\n"})}),"\n",(0,r.jsx)(n.p,{children:"Add the following content:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",metastring:'{7} title="/etc/systemd/system/pypiserver.service"',children:"[Unit]\nDescription=PypiServer Docker Compose\nRequires=docker.service\nAfter=docker.service\n\n[Service]\nWorkingDirectory=/path/to/your/docker-compose/directory\nExecStart=/usr/bin/docker compose up --remove-orphans\nExecStop=/usr/bin/docker compose down\nRestart=always\n\n[Install]\nWantedBy=multi-user.target\n"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["Make sure to replace ",(0,r.jsx)(n.code,{children:"/path/to/your/docker-compose/directory"})," with the actual path where your ",(0,r.jsx)(n.code,{children:"docker-compose.yml"})," file is located, without the filename."]}),"\n",(0,r.jsxs)(n.li,{children:["Verify that the Docker path is correct by using ",(0,r.jsx)(n.code,{children:"which docker"})," if needed."]}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"start-the-service",children:"Start the Service"}),"\n",(0,r.jsx)(n.p,{children:"Tell systemd to reload the new service configuration:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"sudo systemctl daemon-reload\n"})}),"\n",(0,r.jsx)(n.p,{children:"Start the service:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"sudo systemctl enable pypiserver.service\nsudo systemctl start pypiserver.service\n"})}),"\n",(0,r.jsx)(n.h2,{id:"check-the-status",children:"Check the Status"}),"\n",(0,r.jsx)(n.p,{children:"To check the current status of the service, use:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"sudo systemctl status pypiserver.service\n"})}),"\n",(0,r.jsxs)(n.p,{children:["This will show the current status of the ",(0,r.jsx)(n.code,{children:"pypiserver"})," service, including whether it is running and the most recent log output."]}),"\n",(0,r.jsx)("div",{align:"center",children:(0,r.jsx)("figure",{style:{width:"80%"},children:(0,r.jsx)(n.p,{children:(0,r.jsx)(n.img,{alt:"pypiserver status",src:s(31811).A+"",width:"2048",height:"707"})})})}),"\n",(0,r.jsx)(n.h2,{id:"get-started",children:"Get Started"}),"\n",(0,r.jsxs)(n.p,{children:["Now, you can start using ",(0,r.jsx)(n.code,{children:"pip"})," to install and upload packages."]}),"\n",(0,r.jsx)(n.h3,{id:"upload-a-package",children:"Upload a Package"}),"\n",(0,r.jsxs)(n.p,{children:["Let\u2019s assume we have a package named ",(0,r.jsx)(n.code,{children:"example_package-0.1-py3-none-any.whl"}),". Use ",(0,r.jsx)(n.code,{children:"twine"})," to upload the package:"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"pip install twine\ntwine upload --repository-url http://localhost:8080/ example_package-0.1-py3-none-any.whl\n"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["Make sure that ",(0,r.jsx)(n.code,{children:"localhost:8080"})," is the correct address and port of your PyPiServer."]}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"download-and-install-a-package",children:"Download and Install a Package"}),"\n",(0,r.jsx)(n.p,{children:"To install a package, specify the address and port of your PyPiServer:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"pip install --index-url http://localhost:8080/ example_package\n"})}),"\n",(0,r.jsx)(n.h3,{id:"use-basic-authentication",children:"Use Basic Authentication"}),"\n",(0,r.jsx)(n.p,{children:"If you have set up basic authentication for your PyPiServer, you will need to provide credentials when uploading or downloading packages:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:"Upload a package:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"twine upload \\\n  --repository-url http://localhost:8080/ \\\n  --username [username] \\\n  --password [password] \\\n  example_package-0.1-py3-none-any.whl\n"})}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:"Install a package:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"pip install \\\n  --index-url http://[username]:[password]@localhost:8080/ \\\n  example_package\n"})}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.h2,{id:"set-up-pipconf",children:["Set Up ",(0,r.jsx)(n.code,{children:"pip.conf"})]}),"\n",(0,r.jsxs)(n.p,{children:["If you often install packages from this server, you might not want to specify the ",(0,r.jsx)(n.code,{children:"--index-url"})," every time you use ",(0,r.jsx)(n.code,{children:"pip install"}),". Instead, you can add the related configuration to your ",(0,r.jsx)(n.code,{children:"pip.conf"}),"."]}),"\n",(0,r.jsx)(n.h3,{id:"configuration-file",children:"Configuration File"}),"\n",(0,r.jsxs)(n.p,{children:["The ",(0,r.jsx)(n.code,{children:"pip.conf"})," file can exist in several places, and they are checked in the following order of priority:"]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:"Priority 1: Site-level configuration file:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.code,{children:"/home/[username]/.pyenv/versions/3.x.x/envs/main/pip.conf"})}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:"Priority 2: User-level configuration file:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.code,{children:"/home/[username]/.pip/pip.conf"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.code,{children:"/home/[username]/.config/pip/pip.conf"})}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:"Priority 3: Global configuration file:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.code,{children:"/etc/pip.conf"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.code,{children:"/etc/xdg/pip/pip.conf"})}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.p,{children:["Once you identify the correct ",(0,r.jsx)(n.code,{children:"pip.conf"})," file for your current Python environment, add the following content:"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"[global]\nindex-url = http://[server-ip]:8080/\ntrusted-host = [server-ip]\n"})}),"\n",(0,r.jsxs)(n.p,{children:["Make sure to replace ",(0,r.jsx)(n.code,{children:"[server-ip]:8080"})," with the correct address and port of your PyPiServer."]}),"\n",(0,r.jsxs)(n.p,{children:["After this configuration, whenever you run ",(0,r.jsx)(n.code,{children:"pip install [package_name]"}),", the system will automatically use the server address set in ",(0,r.jsx)(n.code,{children:"pip.conf"})," as the package source."]}),"\n",(0,r.jsx)(n.h2,{id:"conclusion",children:"Conclusion"}),"\n",(0,r.jsx)(n.p,{children:"Now, you should have successfully set up your own PyPi server and learned how to upload and download packages."}),"\n",(0,r.jsx)(n.p,{children:"I hope this article helps resolve your setup issues."})]})}function h(e={}){let{wrapper:n}={...(0,t.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(d,{...e})}):d(e)}},31811:function(e,n,s){s.d(n,{A:()=>i});let i=s.p+"assets/images/pypiserver-3a82a5ef370f8387611a4c2322e85a8a.jpg"},84429:function(e,n,s){s.d(n,{R:()=>a,x:()=>o});var i=s(96540);let r={},t=i.createContext(r);function a(e){let n=i.useContext(t);return i.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:a(e.components),i.createElement(t.Provider,{value:n},e.children)}},97149:function(e){e.exports=JSON.parse('{"permalink":"/en/blog/setting-up-pypiserver-on-ubuntu-with-docker","source":"@site/i18n/en/docusaurus-plugin-content-blog/2023/09-13-ubuntu-docker-pypiserver/index.md","title":"Setting Up PyPiServer on Ubuntu with Docker","description":"Recording the process of setting up PyPiServer on Ubuntu.","date":"2023-09-13T00:00:00.000Z","tags":[{"inline":true,"label":"docker","permalink":"/en/blog/tags/docker"},{"inline":true,"label":"pypiserver","permalink":"/en/blog/tags/pypiserver"}],"readingTime":4.89,"hasTruncateMarker":true,"authors":[{"name":"Z. Yuan","title":"Dosaid maintainer, Full-Stack AI Engineer","url":"https://github.com/zephyr-sh","socials":{"github":"https://github.com/zephyr-sh","linkedin":"https://www.linkedin.com/in/ze-yuan-sh7/"},"imageURL":"https://github.com/zephyr-sh.png","key":"Z. Yuan","page":null}],"frontMatter":{"slug":"setting-up-pypiserver-on-ubuntu-with-docker","title":"Setting Up PyPiServer on Ubuntu with Docker","authors":"Z. Yuan","tags":["docker","pypiserver"],"image":"/en/img/2023/0913.webp","description":"Recording the process of setting up PyPiServer on Ubuntu."},"unlisted":false,"prevItem":{"title":"Recording and Troubleshooting Model Training Environment Issues","permalink":"/en/blog/python-env-info-collector"},"nextItem":{"title":"Set Up SSH Server on Ubuntu","permalink":"/en/blog/ubuntu-install-ssh"}}')}}]);