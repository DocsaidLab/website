"use strict";(self.webpackChunkblog=self.webpackChunkblog||[]).push([["98570"],{92782:function(n,a,e){e.r(a),e.d(a,{metadata:()=>r,contentTitle:()=>l,default:()=>m,assets:()=>o,toc:()=>c,frontMatter:()=>i});var r=JSON.parse('{"id":"capybara/funcs/drawings/draw_mask","title":"draw_mask","description":"drawmask(img np.ndarray, colormap Tuple[float, float] = (0.5, 0.5), gamma bool = False) -> np.ndarray","source":"@site/i18n/en/docusaurus-plugin-content-docs/current/capybara/funcs/drawings/draw_mask.md","sourceDirName":"capybara/funcs/drawings","slug":"/capybara/funcs/drawings/draw_mask","permalink":"/en/docs/capybara/funcs/drawings/draw_mask","draft":false,"unlisted":false,"tags":[],"version":"current","lastUpdatedBy":"zephyr-sh","lastUpdatedAt":1734933829000,"frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"draw_boxes","permalink":"/en/docs/capybara/funcs/drawings/draw_boxes"},"next":{"title":"draw_polygon","permalink":"/en/docs/capybara/funcs/drawings/draw_polygon"}}'),s=e("85893"),t=e("50065");let i={},l="draw_mask",o={},c=[];function d(n){let a={a:"a",blockquote:"blockquote",code:"code",h1:"h1",header:"header",img:"img",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,t.a)(),...n.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(a.header,{children:(0,s.jsx)(a.h1,{id:"draw_mask",children:"draw_mask"})}),"\n",(0,s.jsxs)(a.blockquote,{children:["\n",(0,s.jsx)(a.p,{children:(0,s.jsx)(a.a,{href:"https://github.com/DocsaidLab/Capybara/blob/975d62fba4f76db59e715c220f7a2af5ad8d050e/capybara/vision/visualization/draw.py#L507",children:"draw_mask(img: np.ndarray, mask: np.ndarray, colormap: int = cv2.COLORMAP_JET, weight: Tuple[float, float] = (0.5, 0.5), gamma: float = 0, min_max_normalize: bool = False) -> np.ndarray"})}),"\n"]}),"\n",(0,s.jsxs)(a.ul,{children:["\n",(0,s.jsxs)(a.li,{children:["\n",(0,s.jsxs)(a.p,{children:[(0,s.jsx)(a.strong,{children:"Description"}),": Draws a mask on an image."]}),"\n"]}),"\n",(0,s.jsxs)(a.li,{children:["\n",(0,s.jsxs)(a.p,{children:[(0,s.jsx)(a.strong,{children:"Parameters"}),":"]}),"\n",(0,s.jsxs)(a.ul,{children:["\n",(0,s.jsxs)(a.li,{children:[(0,s.jsx)(a.strong,{children:"img"})," (",(0,s.jsx)(a.code,{children:"np.ndarray"}),"): The image to draw on."]}),"\n",(0,s.jsxs)(a.li,{children:[(0,s.jsx)(a.strong,{children:"mask"})," (",(0,s.jsx)(a.code,{children:"np.ndarray"}),"): The mask to draw."]}),"\n",(0,s.jsxs)(a.li,{children:[(0,s.jsx)(a.strong,{children:"colormap"})," (",(0,s.jsx)(a.code,{children:"int"}),"): The colormap to apply to the mask. Defaults to ",(0,s.jsx)(a.code,{children:"cv2.COLORMAP_JET"}),"."]}),"\n",(0,s.jsxs)(a.li,{children:[(0,s.jsx)(a.strong,{children:"weight"})," (",(0,s.jsx)(a.code,{children:"Tuple[float, float]"}),"): The weights for the image and the mask. Defaults to (0.5, 0.5)."]}),"\n",(0,s.jsxs)(a.li,{children:[(0,s.jsx)(a.strong,{children:"gamma"})," (",(0,s.jsx)(a.code,{children:"float"}),"): The gamma value for the mask. Defaults to 0."]}),"\n",(0,s.jsxs)(a.li,{children:[(0,s.jsx)(a.strong,{children:"min_max_normalize"})," (",(0,s.jsx)(a.code,{children:"bool"}),"): Whether to normalize the mask to the range [0, 1]. Defaults to False."]}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(a.li,{children:["\n",(0,s.jsxs)(a.p,{children:[(0,s.jsx)(a.strong,{children:"Return Value"}),":"]}),"\n",(0,s.jsxs)(a.ul,{children:["\n",(0,s.jsxs)(a.li,{children:[(0,s.jsx)(a.strong,{children:"np.ndarray"}),": The image with the mask drawn on it."]}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(a.li,{children:["\n",(0,s.jsxs)(a.p,{children:[(0,s.jsx)(a.strong,{children:"Example"}),":"]}),"\n",(0,s.jsx)(a.pre,{children:(0,s.jsx)(a.code,{className:"language-python",children:"import capybara as cb\nimport numpy as np\n\nimg = cb.imread('lena.png')\npolygon = cb.Polygon([(20, 20), (100, 20), (80, 80), (20, 40)])\nmask = cb.draw_polygon(np.zeros_like(img), polygon, fillup=True, color=255)\nmask_img = cb.draw_mask(img, mask, colormap=cv2.COLORMAP_JET, weight=(0.5, 0.5), gamma=0, min_max_normalize=False)\n"})}),"\n",(0,s.jsx)(a.p,{children:(0,s.jsx)(a.img,{alt:"draw_mask",src:e(46732).Z+"",width:"256",height:"256"})}),"\n"]}),"\n"]})]})}function m(n={}){let{wrapper:a}={...(0,t.a)(),...n.components};return a?(0,s.jsx)(a,{...n,children:(0,s.jsx)(d,{...n})}):d(n)}},46732:function(n,a,e){e.d(a,{Z:function(){return r}});let r=e.p+"assets/images/test_draw_mask-790affdfa66ebbf22fceb184402c9c8f.jpg"},50065:function(n,a,e){e.d(a,{Z:function(){return l},a:function(){return i}});var r=e(67294);let s={},t=r.createContext(s);function i(n){let a=r.useContext(t);return r.useMemo(function(){return"function"==typeof n?n(a):{...a,...n}},[a,n])}function l(n){let a;return a=n.disableParentContext?"function"==typeof n.components?n.components(s):n.components||s:i(n.components),r.createElement(t.Provider,{value:a},n.children)}}}]);