"use strict";(self.webpackChunkdocsaid_website=self.webpackChunkdocsaid_website||[]).push([["23027"],{35454:function(n,e,i){i.r(e),i.d(e,{metadata:()=>s,contentTitle:()=>a,default:()=>u,assets:()=>l,toc:()=>c,frontMatter:()=>o});var s=JSON.parse('{"id":"capybara/intro","title":"Introduction","description":"Capybara primarily consists of the following components:","source":"@site/i18n/en/docusaurus-plugin-content-docs/current/capybara/intro.md","sourceDirName":"capybara","slug":"/capybara/intro","permalink":"/en/docs/capybara/intro","draft":false,"unlisted":false,"tags":[],"version":"current","lastUpdatedBy":"zephyr-sh","lastUpdatedAt":1735318429000,"sidebarPosition":1,"frontMatter":{"sidebar_position":1},"sidebar":"tutorialSidebar","previous":{"title":"Capybara","permalink":"/en/docs/capybara/"},"next":{"title":"Installation","permalink":"/en/docs/capybara/installation"}}'),t=i("85893"),r=i("50065");let o={sidebar_position:1},a="Introduction",l={},c=[{value:"Vision",id:"vision",level:2},{value:"Structures",id:"structures",level:2},{value:"ONNXEngine",id:"onnxengine",level:2},{value:"Utils",id:"utils",level:2},{value:"Tests",id:"tests",level:2}];function d(n){let e={code:"code",h1:"h1",h2:"h2",header:"header",hr:"hr",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,r.a)(),...n.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(e.header,{children:(0,t.jsx)(e.h1,{id:"introduction",children:"Introduction"})}),"\n",(0,t.jsx)(e.p,{children:"Capybara primarily consists of the following components:"}),"\n",(0,t.jsxs)(e.ul,{children:["\n",(0,t.jsxs)(e.li,{children:[(0,t.jsx)(e.strong,{children:"Vision"}),": Includes computer vision-related functionalities, such as image and video processing."]}),"\n",(0,t.jsxs)(e.li,{children:[(0,t.jsx)(e.strong,{children:"Structures"}),": Modules for handling structured data, such as BoundingBox and Polygon."]}),"\n",(0,t.jsxs)(e.li,{children:[(0,t.jsx)(e.strong,{children:"ONNXEngine"}),": Provides ONNX inference functionality, supporting ONNX format models."]}),"\n",(0,t.jsxs)(e.li,{children:[(0,t.jsx)(e.strong,{children:"Utils"}),": Contains various utility functions for system information, file handling, and other auxiliary tasks."]}),"\n",(0,t.jsxs)(e.li,{children:[(0,t.jsx)(e.strong,{children:"Tests"}),": Test files used for verifying the functionality of various functions."]}),"\n"]}),"\n",(0,t.jsx)(e.h2,{id:"vision",children:"Vision"}),"\n",(0,t.jsx)(e.p,{children:"The Vision module focuses on processing image and video data, offering a rich set of computer vision tools."}),"\n",(0,t.jsx)(e.p,{children:"Directory structure:"}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{children:"vision\n\u251C\u2500\u2500 functionals.py       # Basic image processing functions, such as filtering and transformations\n\u251C\u2500\u2500 geometric.py         # Geometric processing functions, such as rotation and scaling\n\u251C\u2500\u2500 improc.py            # Core image processing logic\n\u251C\u2500\u2500 ipcam                # Module for handling network camera streams\n\u251C\u2500\u2500 morphology.py        # Morphological processing functions, such as dilation and erosion\n\u251C\u2500\u2500 videotools           # Video-related tools\n\u2514\u2500\u2500 visualization        # Visualization tools, such as drawing frames and annotations\n"})}),"\n",(0,t.jsx)(e.p,{children:"Main features:"}),"\n",(0,t.jsxs)(e.ul,{children:["\n",(0,t.jsx)(e.li,{children:"Image and video reading, processing, and visualization."}),"\n",(0,t.jsx)(e.li,{children:"Supports various formats and sources (e.g., local files, network cameras)."}),"\n"]}),"\n",(0,t.jsx)(e.h2,{id:"structures",children:"Structures"}),"\n",(0,t.jsx)(e.p,{children:"The Structures module is responsible for handling structured data, commonly used in computer vision and data analysis scenarios."}),"\n",(0,t.jsx)(e.p,{children:"Directory structure:"}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{children:"structures\n\u251C\u2500\u2500 functionals.py       # Related functional functions\n\u251C\u2500\u2500 boxes.py             # Box and Boxes data structures\n\u251C\u2500\u2500 keypoints.py         # Keypoints data structure\n\u2514\u2500\u2500 polygons.py          # Polygon and Polygons data structures\n"})}),"\n",(0,t.jsx)(e.p,{children:"Main features:"}),"\n",(0,t.jsxs)(e.ul,{children:["\n",(0,t.jsx)(e.li,{children:"Provides structured data processing for Boxes, Keypoints, and Polygons."}),"\n",(0,t.jsx)(e.li,{children:"Supports various operations like intersection, union, scaling, etc."}),"\n"]}),"\n",(0,t.jsx)(e.h2,{id:"onnxengine",children:"ONNXEngine"}),"\n",(0,t.jsx)(e.p,{children:"The ONNXEngine module provides functionalities related to ONNX model inference."}),"\n",(0,t.jsx)(e.p,{children:"Directory structure:"}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{children:"onnxengine\n\u251C\u2500\u2500 engine.py            # Core inference logic\n\u251C\u2500\u2500 __init__.py          # Initialization file\n\u2514\u2500\u2500 metadata.py          # Model metadata management\n"})}),"\n",(0,t.jsx)(e.p,{children:"Main features:"}),"\n",(0,t.jsxs)(e.ul,{children:["\n",(0,t.jsx)(e.li,{children:"Supports loading and inference of ONNX models."}),"\n"]}),"\n",(0,t.jsx)(e.h2,{id:"utils",children:"Utils"}),"\n",(0,t.jsx)(e.p,{children:"The Utils module contains a wide range of auxiliary utility functions."}),"\n",(0,t.jsx)(e.p,{children:"Directory structure:"}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{children:"utils\n\u251C\u2500\u2500 custom_path.py       # Custom path operations\n\u251C\u2500\u2500 custom_tqdm.py       # Progress bar utility\n\u251C\u2500\u2500 files_utils.py       # File handling functions\n\u251C\u2500\u2500 powerdict.py         # Enhanced dictionary operations\n\u251C\u2500\u2500 system_info.py       # System information detection\n\u251C\u2500\u2500 time.py              # Time handling utilities\n\u2514\u2500\u2500 utils.py             # General utility functions\n"})}),"\n",(0,t.jsx)(e.p,{children:"Main features:"}),"\n",(0,t.jsxs)(e.ul,{children:["\n",(0,t.jsx)(e.li,{children:"File handling and system information detection."}),"\n",(0,t.jsx)(e.li,{children:"Provides custom tools like progress bars and enhanced dictionaries."}),"\n"]}),"\n",(0,t.jsx)(e.h2,{id:"tests",children:"Tests"}),"\n",(0,t.jsx)(e.p,{children:"The Tests module is used to verify that the system functions correctly."}),"\n",(0,t.jsx)(e.p,{children:"Main features:"}),"\n",(0,t.jsxs)(e.ul,{children:["\n",(0,t.jsx)(e.li,{children:"Includes unit tests for various modules."}),"\n",(0,t.jsx)(e.li,{children:"Provides fast regression and functionality verification."}),"\n"]}),"\n",(0,t.jsx)(e.hr,{}),"\n",(0,t.jsx)(e.p,{children:"This is a preliminary introduction to the modules of Capybara."}),"\n",(0,t.jsx)(e.p,{children:"For specific usage, you can continue reading the corresponding API documentation and sample code."})]})}function u(n={}){let{wrapper:e}={...(0,r.a)(),...n.components};return e?(0,t.jsx)(e,{...n,children:(0,t.jsx)(d,{...n})}):d(n)}},50065:function(n,e,i){i.d(e,{Z:function(){return a},a:function(){return o}});var s=i(67294);let t={},r=s.createContext(t);function o(n){let e=s.useContext(r);return s.useMemo(function(){return"function"==typeof n?n(e):{...e,...n}},[e,n])}function a(n){let e;return e=n.disableParentContext?"function"==typeof n.components?n.components(t):n.components||t:o(n.components),s.createElement(r.Provider,{value:e},n.children)}}}]);