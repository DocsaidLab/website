"use strict";(self.webpackChunkblog=self.webpackChunkblog||[]).push([["69535"],{74167:function(e,n,i){i.r(n),i.d(n,{metadata:()=>r,contentTitle:()=>t,default:()=>p,assets:()=>d,toc:()=>a,frontMatter:()=>c});var r=JSON.parse('{"id":"capybara/funcs/vision/improc/imdecode","title":"imdecode","description":"imdecode(byte_: bytes) -> Union[np.ndarray, None]","source":"@site/i18n/en/docusaurus-plugin-content-docs/current/capybara/funcs/vision/improc/imdecode.md","sourceDirName":"capybara/funcs/vision/improc","slug":"/capybara/funcs/vision/improc/imdecode","permalink":"/en/docs/capybara/funcs/vision/improc/imdecode","draft":false,"unlisted":false,"tags":[],"version":"current","lastUpdatedBy":"zephyr-sh","lastUpdatedAt":1734622390000,"sidebarPosition":8,"frontMatter":{"sidebar_position":8},"sidebar":"tutorialSidebar","previous":{"title":"imencode","permalink":"/en/docs/capybara/funcs/vision/improc/imencode"},"next":{"title":"npyread","permalink":"/en/docs/capybara/funcs/vision/improc/npyread"}}'),s=i("85893"),o=i("50065");let c={sidebar_position:8},t="imdecode",d={},a=[];function l(e){let n={a:"a",blockquote:"blockquote",code:"code",h1:"h1",header:"header",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,o.a)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.header,{children:(0,s.jsx)(n.h1,{id:"imdecode",children:"imdecode"})}),"\n",(0,s.jsxs)(n.blockquote,{children:["\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.a,{href:"https://github.com/DocsaidLab/DocsaidKit/blob/71170598902b6f8e89a969f1ce27ed4fd05b2ff2/docsaidkit/vision/improc.py#L107",children:"imdecode(byte_: bytes) -> Union[np.ndarray, None]"})}),"\n"]}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Description"}),": Decode an image byte string to a NumPy image array."]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Parameters"})}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"byte_"})," (",(0,s.jsx)(n.code,{children:"bytes"}),"): The image byte string to decode."]}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Returns"})}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"np.ndarray"}),": The decoded image array."]}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Example"})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-python",children:"import docsaidkit as D\n\nimg = D.imread('lena.png')\nencoded_bytes = D.imencode(img, IMGTYP=D.IMGTYP.PNG)\ndecoded_img = D.imdecode(encoded_bytes)\n"})}),"\n"]}),"\n"]})]})}function p(e={}){let{wrapper:n}={...(0,o.a)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(l,{...e})}):l(e)}},50065:function(e,n,i){i.d(n,{Z:function(){return t},a:function(){return c}});var r=i(67294);let s={},o=r.createContext(s);function c(e){let n=r.useContext(o);return r.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function t(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:c(e.components),r.createElement(o.Provider,{value:n},e.children)}}}]);