"use strict";(self.webpackChunkdocsaid_website=self.webpackChunkdocsaid_website||[]).push([["78266"],{64186:function(n,e,i){i.r(e),i.d(e,{metadata:()=>t,contentTitle:()=>c,default:()=>h,assets:()=>d,toc:()=>l,frontMatter:()=>o});var t=JSON.parse('{"id":"docsaidkit/funcs/powerdict","title":"PowerDict","description":"PowerDict(d=None, kwargs)","source":"@site/i18n/en/docusaurus-plugin-content-docs/current/docsaidkit/funcs/powerdict.md","sourceDirName":"docsaidkit/funcs","slug":"/docsaidkit/funcs/powerdict","permalink":"/en/docs/docsaidkit/funcs/powerdict","draft":false,"unlisted":false,"tags":[],"version":"current","lastUpdatedBy":"zephyr-sh","lastUpdatedAt":1713493370000,"sidebarPosition":5,"frontMatter":{"sidebar_position":5},"sidebar":"tutorialSidebar","previous":{"title":"Enums","permalink":"/en/docs/docsaidkit/funcs/enums"},"next":{"title":"SystemInfo","permalink":"/en/docs/docsaidkit/funcs/system_info"}}'),s=i("85893"),r=i("50065");let o={sidebar_position:5},c="PowerDict",d={},l=[];function a(n){let e={a:"a",blockquote:"blockquote",code:"code",h1:"h1",header:"header",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,r.a)(),...n.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(e.header,{children:(0,s.jsx)(e.h1,{id:"powerdict",children:"PowerDict"})}),"\n",(0,s.jsxs)(e.blockquote,{children:["\n",(0,s.jsx)(e.p,{children:(0,s.jsx)(e.a,{href:"https://github.com/DocsaidLab/DocsaidKit/blob/012540eebaebb2718987dd3ec0f7dcf40f403caa/docsaidkit/utils/powerdict.py#L10",children:"PowerDict(d=None, **kwargs)"})}),"\n"]}),"\n",(0,s.jsxs)(e.ul,{children:["\n",(0,s.jsxs)(e.li,{children:["\n",(0,s.jsxs)(e.p,{children:[(0,s.jsx)(e.strong,{children:"Description"}),": This class is designed to create a dictionary with freezing and unfreezing capabilities, and allows accessing its properties through dot notation."]}),"\n"]}),"\n",(0,s.jsxs)(e.li,{children:["\n",(0,s.jsx)(e.p,{children:(0,s.jsx)(e.strong,{children:"Attributes"})}),"\n",(0,s.jsxs)(e.ul,{children:["\n",(0,s.jsxs)(e.li,{children:[(0,s.jsx)(e.strong,{children:"is_frozen"})," (",(0,s.jsx)(e.code,{children:"bool"}),"): Determines whether the dictionary is frozen."]}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(e.li,{children:["\n",(0,s.jsx)(e.p,{children:(0,s.jsx)(e.strong,{children:"Methods"})}),"\n",(0,s.jsxs)(e.ul,{children:["\n",(0,s.jsxs)(e.li,{children:[(0,s.jsx)(e.strong,{children:"freeze()"}),": Freezes the dictionary."]}),"\n",(0,s.jsxs)(e.li,{children:[(0,s.jsx)(e.strong,{children:"melt()"}),": Unfreezes the dictionary."]}),"\n",(0,s.jsxs)(e.li,{children:[(0,s.jsx)(e.strong,{children:"to_dict()"}),": Converts the dictionary to a standard dictionary."]}),"\n",(0,s.jsxs)(e.li,{children:[(0,s.jsx)(e.strong,{children:"to_json(path: Union[str, Path]) -> None"}),": Writes the dictionary to a JSON file."]}),"\n",(0,s.jsxs)(e.li,{children:[(0,s.jsx)(e.strong,{children:"to_yaml(path: Union[str, Path]) -> None"}),": Writes the dictionary to a YAML file."]}),"\n",(0,s.jsxs)(e.li,{children:[(0,s.jsx)(e.strong,{children:"to_txt(path: Union[str, Path]) -> None"}),": Writes the dictionary to a text file."]}),"\n",(0,s.jsxs)(e.li,{children:[(0,s.jsx)(e.strong,{children:"to_pickle(path: Union[str, Path]) -> None"}),": Writes the dictionary to a pickle file."]}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(e.li,{children:["\n",(0,s.jsx)(e.p,{children:(0,s.jsx)(e.strong,{children:"Class Methods"})}),"\n",(0,s.jsxs)(e.ul,{children:["\n",(0,s.jsxs)(e.li,{children:[(0,s.jsx)(e.strong,{children:"load_json(path: Union[str, Path]) -> PowerDict"}),": Loads a dictionary from a JSON file."]}),"\n",(0,s.jsxs)(e.li,{children:[(0,s.jsx)(e.strong,{children:"load_pickle(path: Union[str, Path]) -> PowerDict"}),": Loads a dictionary from a pickle file."]}),"\n",(0,s.jsxs)(e.li,{children:[(0,s.jsx)(e.strong,{children:"load_yaml(path: Union[str, Path]) -> PowerDict"}),": Loads a dictionary from a YAML file."]}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(e.li,{children:["\n",(0,s.jsx)(e.p,{children:(0,s.jsx)(e.strong,{children:"Parameters"})}),"\n",(0,s.jsxs)(e.ul,{children:["\n",(0,s.jsxs)(e.li,{children:[(0,s.jsx)(e.strong,{children:"d"})," (",(0,s.jsx)(e.code,{children:"dict"}),"): The dictionary to convert. Default is None."]}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(e.li,{children:["\n",(0,s.jsx)(e.p,{children:(0,s.jsx)(e.strong,{children:"Example"})}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-python",children:"from docsaidkit import PowerDict\n\nd = {'key': 'value'}\ncfg = PowerDict(d)\nprint(cfg.key)\n# >>> 'value'\n"})}),"\n"]}),"\n"]})]})}function h(n={}){let{wrapper:e}={...(0,r.a)(),...n.components};return e?(0,s.jsx)(e,{...n,children:(0,s.jsx)(a,{...n})}):a(n)}},50065:function(n,e,i){i.d(e,{Z:function(){return c},a:function(){return o}});var t=i(67294);let s={},r=t.createContext(s);function o(n){let e=t.useContext(r);return t.useMemo(function(){return"function"==typeof n?n(e):{...e,...n}},[e,n])}function c(n){let e;return e=n.disableParentContext?"function"==typeof n.components?n.components(s):n.components||s:o(n.components),t.createElement(r.Provider,{value:e},n.children)}}}]);