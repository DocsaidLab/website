"use strict";(self.webpackChunkdocsaid_website=self.webpackChunkdocsaid_website||[]).push([["47659"],{46462:function(e,n,t){t.r(n),t.d(n,{default:()=>u,frontMatter:()=>a,metadata:()=>o,assets:()=>d,toc:()=>c,contentTitle:()=>s});var o=JSON.parse('{"id":"docaligner-demo","title":"DocAligner Demo","description":"You can select a few images with documents from your file system to test this feature.","source":"@site/i18n/en/docusaurus-plugin-content-docs-playground/current/docaligner-demo.md","sourceDirName":".","slug":"/docaligner-demo","permalink":"/en/playground/docaligner-demo","draft":false,"unlisted":false,"tags":[],"version":"current","lastUpdatedBy":"zephyr-sh","lastUpdatedAt":1736166876000,"frontMatter":{},"sidebar":"playgroundSidebar","previous":{"title":"Playground","permalink":"/en/playground/intro"},"next":{"title":"StockAnalysis Demo","permalink":"/en/playground/stock-demo"}}'),i=t("85893"),r=t("50065"),l=t("65659");let a={},s="DocAligner Demo",d={},c=[];function h(e){let n={a:"a",admonition:"admonition",code:"code",h1:"h1",header:"header",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,r.a)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.header,{children:(0,i.jsx)(n.h1,{id:"docaligner-demo",children:"DocAligner Demo"})}),"\n",(0,i.jsx)(n.p,{children:"You can select a few images with documents from your file system to test this feature."}),"\n",(0,i.jsx)(n.p,{children:"If you can't find images immediately, we can borrow a few from the MIDV-2020 dataset for now:"}),"\n",(0,i.jsxs)(n.admonition,{type:"info",children:[(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Clicking on the images below will allow you to use them directly in the Demo."})}),(0,i.jsx)(n.p,{children:"These images perform well since they are from the training dataset, which the model has already seen!"}),(0,i.jsx)(n.p,{children:"However, in real-world applications, you might encounter a wider range of scenarios. So we recommend testing with a variety of images to better understand the model's performance."}),(0,i.jsx)(n.p,{children:"When using this webpage's functionality, please note the following:"}),(0,i.jsxs)(n.ol,{children:["\n",(0,i.jsxs)(n.li,{children:["If the document's corners are outside the image, the model will not be able to find all four corners and will return an error message.","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"We have made efforts to allow the model to extrapolate to unknown areas, but it may still fail."}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(n.li,{children:"If multiple documents are present in the image, the model may randomly select four corners from the many available."}),"\n",(0,i.jsxs)(n.li,{children:["Due to the limitations of webpage load capacity, we need to compress images, which may result in a decrease in image quality.","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Without this compression, the browser would crash."}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["We download the OpenCV module asynchronously. If the final cropped image is empty, it is because the download has not completed.","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"OpenCV is large (about 8MB) and takes some time to download."}),"\n",(0,i.jsx)(n.li,{children:"This feature is not essential, and you can ignore this part."}),"\n"]}),"\n"]}),"\n"]}),(0,i.jsx)(n.p,{children:"With these reminders, we wish you a pleasant experience!"})]}),"\n",(0,i.jsx)(n.p,{children:"If you want to use it in your own program, you can refer to the inference program example we used:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-python",metastring:"title='python demo code'",children:"from docaligner import DocAligner\nfrom capybara import pad\n\nmodel = DocAligner(model_cfg='fastvit_sa24')\n\n# padding for find unknown corner points in the image\ninput_img = pad(input_img, 100)\n\npolygon = model(\n   img=input_img,\n   do_center_crop=False\n)\n\n# Remove padding\npolygon -= 100\n\nreturn polygon\n"})}),"\n",(0,i.jsxs)(n.admonition,{type:"tip",children:[(0,i.jsx)(n.p,{children:"MIDV-2020 is an open-source dataset containing many document images, perfect for testing document analysis models."}),(0,i.jsxs)(n.p,{children:["If needed, you can download it here: ",(0,i.jsx)(n.a,{href:"http://l3i-share.univ-lr.fr/MIDV2020/midv2020.html",children:(0,i.jsx)(n.strong,{children:"MIDV-2020 Download"})})]})]}),"\n","\n",(0,i.jsx)(l.Z,{titleStage1:"Test Images",titleStage2:"Demo",chooseFileLabel:"Select File",uploadButtonLabel:"Upload and Predict",downloadButtonLabel:"Download Prediction Results",clearButtonLabel:"Clear Results",processingMessage:"Processing, please wait...",errorMessage:{chooseFile:"Please select a file",invalidFileType:"Only JPG, PNG, Webp images are supported",networkError:"Network error, please try again later.",uploadError:"An error occurred, please try again later."},warningMessage:{noPolygon:"No four corners detected. The model might not recognize this document type.",imageTooLarge:"The image is too large and may cause the browser to crash."},imageInfoTitle:"Image Information",inferenceInfoTitle:"Model Inference Information",polygonInfoTitle:"Detection Results",inferenceTimeLabel:"Inference Time",timestampLabel:"Timestamp",fileNameLabel:"File Name",fileSizeLabel:"File Size",fileTypeLabel:"File Type",imageSizeLabel:"Image Size",TransformedTitle:"Transformed Image",TransformedWidthLabel:"Output Width",TransformedHeightLabel:"Output Height",TransformedButtonLabel:"Download Transformed Image",defaultImages:[{src:"/en/img/docalign-demo/000025.jpg",description:"Text Interference"},{src:"/en/img/docalign-demo/000121.jpg",description:"Partial Occlusion"},{src:"/en/img/docalign-demo/000139.jpg",description:"Strong Reflection"},{src:"/en/img/docalign-demo/000169.jpg",description:"Low Light Scene"},{src:"/en/img/docalign-demo/000175.jpg",description:"Highly Skewed"}]})]})}function u(e={}){let{wrapper:n}={...(0,r.a)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(h,{...e})}):h(e)}},65659:function(e,n,t){t.d(n,{Z:()=>T});var o=t("85893"),i=t("67294"),r=t("2522"),l=t("23252"),a=t("30210"),s=t("91316"),d=t("87584"),c=t("6560"),h=t("26633"),u=t("6672"),m=t("33357"),g=t("80902"),p=t("23420"),f=t("5919"),w=t("91885"),j=t("11843"),x=t("36192");let y={imageGrid:"imageGrid_pLT1",demoWrapper:"demoWrapper_t2vi",demoCard:"demoCard_xgNL",infoList:"infoList_T2oz",demoCanvas:"demoCanvas_Yorz",canvasWrapper:"canvasWrapper_TbEL"},{Title:v,Text:b}=s.Z,C=e=>{let{chooseFileLabel:n,uploadButtonLabel:t,downloadButtonLabel:s,clearButtonLabel:C,processingMessage:T,errorMessage:I,warningMessage:L,imageInfoTitle:S,inferenceInfoTitle:Z,polygonInfoTitle:D,inferenceTimeLabel:M,timestampLabel:P,fileNameLabel:k,fileSizeLabel:F,fileTypeLabel:R,imageSizeLabel:N,TransformedTitle:E,TransformedWidthLabel:O,TransformedHeightLabel:_,TransformedButtonLabel:A,externalImage:V}=e;(0,i.useRef)(null);let B=(0,i.useRef)(null),W=(0,i.useRef)(null),z=(0,i.useRef)(null),[U,G]=(0,i.useState)(null),[H,$]=(0,i.useState)(null),[J,Y]=(0,i.useState)(!1),[q,K]=(0,i.useState)(null),[X,Q]=(0,i.useState)(null),[ee,en]=(0,i.useState)(null),[et,eo]=(0,i.useState)(null),[ei,er]=(0,i.useState)(1),[el,ea]=(0,i.useState)(0),[es,ed]=(0,i.useState)(0),[ec,eh]=(0,i.useState)(null),[eu,em]=(0,i.useState)(768),[eg,ep]=(0,i.useState)(480),[ef,ew]=(0,i.useState)(null),[ej,ex]=(0,i.useState)(!1),[ey,ev]=(0,i.useState)(!1),[eb,eC]=(0,i.useState)(0),[eT,eI]=(0,i.useState)(null);(0,i.useEffect)(()=>{V&&eS(V)},[V]),(0,i.useEffect)(()=>{eL()},[]);let eL=async()=>{try{(await fetch("https://api.docsaid.org/docaligner-predict")).ok?ew("online"):ew("offline")}catch(e){ew("offline"),console.error("Error checking API status:",e)}};(0,i.useEffect)(()=>{ej||eF()},[]),(0,i.useEffect)(()=>{U&&ej&&eR()},[U,ej,eu,eg]);let eS=e=>{eD(),K(null),Q(null),G(null),$(null),en(null);let n=B.current;if(!n)return;let t=new Image;t.crossOrigin="Anonymous",t.onload=function(){let e=t.width,o=t.height,i=1;(t.width>2e3||t.height>2e3)&&(i=2e3/Math.max(t.width,t.height)),er(i);let r=t.width*i,l=t.height*i;n.width=r,n.height=l,(t.width>5e3||t.height>5e3)&&Q(L.imageTooLarge),n.getContext("2d").drawImage(t,0,0,r,l),en({width:r,height:l}),eo({width:e,height:o}),n.toBlob(function(e){eh(new File([e],"example.jpg",{type:"image/jpeg"}))},"image/jpeg")},t.src=e},eZ=e=>["image/jpeg","image/png","image/webp"].includes(e.type),eD=()=>{G(null),$(null),Q(null),en(null),eo(null),eh(null),ea(0),er(1),em(768),ep(480),B.current&&B.current.getContext("2d").clearRect(0,0,B.current.width,B.current.height),W.current&&W.current.getContext("2d").clearRect(0,0,W.current.width,W.current.height),z.current&&z.current.getContext("2d").clearRect(0,0,z.current.width,z.current.height)},eM=(e,n)=>{let t=[[0,255,255],[0,255,0],[255,0,0],[255,255,0]],o=eP(n),i=o.length;o.forEach((n,r)=>{let l=o[(r+1)%i],a=`rgb(${t[r%t.length].join(",")})`,s=Math.max(.005*e.canvas.width,1);e.beginPath(),e.arc(n[0],n[1],2*s,0,2*Math.PI,!1),e.fillStyle=a,e.fill(),ek(e,n[0],n[1],l[0],l[1],s,a)})},eP=e=>{let n=e.slice().sort((e,n)=>e[1]-n[1]),t=n.slice(0,2),o=n.slice(2),[i,r]=t.sort((e,n)=>e[0]-n[0]),[l,a]=o.sort((e,n)=>e[0]-n[0]);return[i,r,a,l]},ek=(e,n,t,o,i,r,l)=>{let a=5*r,s=Math.atan2(i-t,o-n);e.beginPath(),e.moveTo(n,t),e.lineTo(o,i),e.strokeStyle=l,e.lineWidth=r,e.stroke(),e.beginPath(),e.moveTo(o,i),e.lineTo(o-a*Math.cos(s-Math.PI/6),i-a*Math.sin(s-Math.PI/6)),e.lineTo(o-a*Math.cos(s+Math.PI/6),i-a*Math.sin(s+Math.PI/6)),e.lineTo(o,i),e.fillStyle=l,e.fill()},eF=()=>{if(ej||ey)return;ev(!0),eC(0),eI(null);let e=new XMLHttpRequest;e.open("GET","/opencv.js",!0),e.responseType="blob",e.onprogress=e=>{e.lengthComputable?eC(Math.floor(e.loaded/e.total*100)):eC(50)},e.onload=()=>{if(200===e.status){let n=new Blob([e.response],{type:"text/javascript"}),t=URL.createObjectURL(n);window.Module={onRuntimeInitialized(){console.log("OpenCV.js is ready from local /opencv.js"),ex(!0)}};let o=document.createElement("script");o.src=t,o.onload=()=>{console.log("OpenCV.js script loaded (local)."),window.cv&&"function"==typeof window.cv.then?window.cv.then(e=>{console.log("Resolved the Promise-based cv module",e),window.cv=e,ex(!0)}):ex(!0)},o.onerror=e=>{console.error("Failed to load OpenCV.js from object URL",e),eI("Failed to load OpenCV.js after fetching blob.")},document.body.appendChild(o)}else eI(`Failed to download: status = ${e.status}`);ev(!1)},e.onerror=()=>{eI("Network error while downloading /opencv.js"),ev(!1)},e.send()},eR=()=>{if(!U||!ej||!window.cv||!window.cv.imread){console.log("Cannot transform yet: missing data or OpenCV not loaded."),console.log("predictionData:",U),console.log("openCvLoaded:",ej),console.log("window.cv:",window.cv),console.log("window.cv.imread:",window.cv?.imread);return}let e=B.current,n=z.current;if(!e||!n){console.log("Canvas references not ready.");return}try{let t=window.cv.imread(e),o=e.width,i=e.height,r=U.polygon.map(e=>[e[0]*(o/ee.width),e[1]*(i/ee.height)]),l=eP(r);if(4!==l.length){K("Invalid number of points in polygon."),console.log("sortedPolygon is not 4 corners:",l);return}n.width=eu,n.height=eg;let a=window.cv.matFromArray(4,1,window.cv.CV_32FC2,l.flat()),s=window.cv.matFromArray(4,1,window.cv.CV_32FC2,[0,0,eu,0,eu,eg,0,eg]),d=window.cv.getPerspectiveTransform(a,s),c=new window.cv.Mat,h=new window.cv.Size(eu,eg);window.cv.warpPerspective(t,c,d,h,window.cv.INTER_LINEAR,window.cv.BORDER_CONSTANT,new window.cv.Scalar),window.cv.imshow(n,c),t.delete(),c.delete(),a.delete(),s.delete(),d.delete(),console.log("Perspective transform done, canvas updated.")}catch(e){console.error("Error performing perspective transform:",e),K("Error performing perspective transform: "+e.message)}};return(0,o.jsx)("div",{className:y.demoWrapper,children:(0,o.jsxs)(d.Z,{direction:"vertical",style:{width:"100%"},children:[(0,o.jsxs)(c.Z,{title:"OpenCV Download Status",style:{marginBottom:16},children:[!ej&&(0,o.jsxs)(d.Z,{direction:"vertical",children:[(0,o.jsx)(h.ZP,{type:"primary",onClick:eF,loading:ey,children:ey?"Downloading...":"Retry Download OpenCV"}),(ey||eb>0)&&(0,o.jsx)(u.Z,{percent:eb,status:eT?"exception":"active"}),eT&&(0,o.jsx)(m.Z,{message:"OpenCV Download Error",description:eT,type:"error",showIcon:!0})]}),ej&&(0,o.jsx)(m.Z,{message:"OpenCV.js loaded successfully.",type:"success",showIcon:!0})]}),(0,o.jsxs)(g.Z,{justify:"space-between",align:"middle",children:[(0,o.jsx)(p.Z,{children:(0,o.jsx)(f.Z,{beforeUpload:e=>{if(!e)return K(I.chooseFile),eD(),!1;if(!eZ(e))return K(I.invalidFileType),eD(),!1;let n=new FileReader;return n.onload=function(n){let t=new Image;t.onload=function(){let n=B.current;if(!n)return;let o=t.width,i=t.height,r=1;(t.width>2e3||t.height>2e3)&&(r=2e3/Math.max(t.width,t.height)),er(r);let l=t.width*r,a=t.height*r;n.width=l,n.height=a,(t.width>5e3||t.height>5e3)&&Q(L.imageTooLarge),n.getContext("2d").drawImage(t,0,0,l,a),en({width:l,height:a}),eo({width:o,height:i}),n.toBlob(function(n){eh(new File([n],e.name,{type:e.type}))},e.type)},t.src=n.target.result},n.readAsDataURL(e),!1},showUploadList:!1,disabled:"online"!==ef,children:(0,o.jsx)(h.ZP,{icon:(0,o.jsx)(r.Z,{}),disabled:"online"!==ef,children:n})})}),(0,o.jsxs)(p.Z,{children:["online"===ef&&(0,o.jsx)(b,{type:"success",children:"\uD83D\uDFE2"}),"offline"===ef&&(0,o.jsx)(b,{type:"danger",children:"\uD83D\uDD34"}),null===ef&&(0,o.jsx)(b,{type:"secondary",children:"\u26AA"})]})]}),ee&&ec&&et&&(0,o.jsx)(c.Z,{className:y.demoCard,title:S,children:(0,o.jsxs)("ul",{className:y.infoList,children:[(0,o.jsxs)("li",{children:[k,": ",ec.name]}),(0,o.jsxs)("li",{children:[F,": ",Math.round(ec.size/1024)," KB"]}),(0,o.jsxs)("li",{children:[R,": ",ec.type]}),(0,o.jsxs)("li",{children:[N,": ",et.width," x ",et.height," pixel"]})]})}),(0,o.jsxs)(g.Z,{gutter:16,children:[(0,o.jsx)(p.Z,{span:12,children:(0,o.jsx)("canvas",{ref:B,className:y.demoCanvas})}),(0,o.jsx)(p.Z,{span:12,children:(0,o.jsx)("canvas",{ref:W,className:y.demoCanvas})})]}),(0,o.jsxs)(g.Z,{justify:"center",gutter:16,children:[(0,o.jsx)(p.Z,{children:(0,o.jsx)(h.ZP,{type:"primary",onClick:()=>{let e=B.current,n=W.current;if(!e||!n)return;if(!ec){K(I.chooseFile),eD();return}if(!eZ(ec)){K(I.invalidFileType),eD();return}Y(!0),K(null),Q(null),G(null),$(null);let t=new FormData;t.append("file",ec),fetch("https://api.docsaid.org/docaligner-predict",{method:"POST",body:t}).then(e=>{if(!e.ok)throw Error(I.networkError);return e.json()}).then(t=>{if(!t.polygon||0===t.polygon.length){Q(L.noPolygon),Y(!1);return}ea(t.inference_time),ed(t.timestamp),G(t);let o=t.polygon.map(e=>[e[0]/ei,e[1]/ei]);$({...t,polygon:o});let i=n.getContext("2d");i.clearRect(0,0,n.width,n.height),n.width=e.width,n.height=e.height,i.drawImage(e,0,0),eM(i,t.polygon)}).catch(e=>{console.error("Error:",e),K(`${I.uploadError}: ${e.message||e}`)}).finally(()=>{Y(!1)})},disabled:"online"!==ef,children:t})}),(0,o.jsx)(p.Z,{children:U&&!X&&(0,o.jsx)(h.ZP,{icon:(0,o.jsx)(l.Z,{}),onClick:()=>{if(!U)return;let e="data:text/json;charset=utf-8,"+encodeURIComponent(JSON.stringify(U)),n=document.createElement("a");n.setAttribute("href",e),n.setAttribute("download","prediction.json"),document.body.appendChild(n),n.click(),n.remove()},children:s})}),(0,o.jsx)(p.Z,{children:(0,o.jsx)(h.ZP,{icon:(0,o.jsx)(a.Z,{}),onClick:eD,children:C})})]}),J&&(0,o.jsx)(w.Z,{tip:T}),q&&(0,o.jsx)(m.Z,{message:q,type:"error",showIcon:!0}),X&&(0,o.jsx)(m.Z,{message:X,type:"warning",showIcon:!0}),ee&&(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(j.Z,{}),(0,o.jsx)(v,{level:3,children:Z}),(0,o.jsxs)("ul",{className:y.infoList,children:[(0,o.jsxs)("li",{children:[M,": ",el.toFixed(2)," sec"]}),(0,o.jsxs)("li",{children:[P,": ",es]})]})]}),U&&!X&&(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(j.Z,{}),(0,o.jsx)(v,{level:3,children:D}),(0,o.jsx)("ul",{className:y.infoList,children:H?.polygon?.map((e,n)=>o.jsxs("li",{children:["Point ",n+1,": (",Math.round(e[0]),", ",Math.round(e[1]),")"]},n))})]}),U&&!X&&(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(j.Z,{}),(0,o.jsx)(v,{level:3,children:E}),(0,o.jsxs)(d.Z,{children:[(0,o.jsxs)(b,{children:[O,":"]}),(0,o.jsx)(x.Z,{value:eu,onChange:e=>em(e)}),(0,o.jsxs)(b,{children:[_,":"]}),(0,o.jsx)(x.Z,{value:eg,onChange:e=>ep(e)})]}),(0,o.jsx)("div",{className:y.canvasWrapper,children:(0,o.jsx)("canvas",{ref:z,className:y.demoCanvas})}),(0,o.jsx)("div",{style:{textAlign:"center"},children:(0,o.jsx)(h.ZP,{icon:(0,o.jsx)(l.Z,{}),onClick:()=>{let e=z.current;if(!e)return;let n=e.toDataURL("image/jpeg"),t=document.createElement("a");t.href=n,t.download="transformed_image.jpg",document.body.appendChild(t),t.click(),document.body.removeChild(t)},children:A})})]})]})})},T=e=>{let{titleStage1:n,titleStage2:t,chooseFileLabel:r,uploadButtonLabel:l,downloadButtonLabel:a,clearButtonLabel:s,processingMessage:d,errorMessage:c,warningMessage:h,imageInfoTitle:u,inferenceInfoTitle:m,polygonInfoTitle:g,inferenceTimeLabel:p,timestampLabel:f,fileNameLabel:w,fileSizeLabel:j,fileTypeLabel:x,imageSizeLabel:v,TransformedTitle:b,TransformedWidthLabel:T,TransformedHeightLabel:I,TransformedButtonLabel:L,defaultImages:S}=e,[Z,D]=(0,i.useState)(null),M=e=>{D(e)};return(0,o.jsxs)("div",{children:[(0,o.jsx)("h2",{children:n}),(0,o.jsx)("div",{className:y.imageGrid,children:S.map((e,n)=>(0,o.jsxs)("div",{children:[(0,o.jsx)("img",{src:e.src,alt:`example${n+1}`,onClick:()=>M(e.src)}),(0,o.jsx)("p",{children:e.description})]},n))}),(0,o.jsx)("h2",{children:t}),(0,o.jsx)(C,{chooseFileLabel:r,uploadButtonLabel:l,downloadButtonLabel:a,clearButtonLabel:s,processingMessage:d,errorMessage:c,warningMessage:h,imageInfoTitle:u,inferenceInfoTitle:m,polygonInfoTitle:g,inferenceTimeLabel:p,timestampLabel:f,fileNameLabel:w,fileSizeLabel:j,fileTypeLabel:x,imageSizeLabel:v,TransformedTitle:b,TransformedWidthLabel:T,TransformedHeightLabel:I,TransformedButtonLabel:L,externalImage:Z})]})}},50065:function(e,n,t){t.d(n,{Z:function(){return a},a:function(){return l}});var o=t(67294);let i={},r=o.createContext(i);function l(e){let n=o.useContext(r);return o.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:l(e.components),o.createElement(r.Provider,{value:n},e.children)}}}]);