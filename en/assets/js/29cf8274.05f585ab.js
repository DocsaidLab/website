"use strict";(self.webpackChunkdocsaid_website=self.webpackChunkdocsaid_website||[]).push([["95153"],{18146:function(e,n,i){i.r(n),i.d(n,{assets:()=>l,contentTitle:()=>s,default:()=>p,frontMatter:()=>o,metadata:()=>t,toc:()=>c});var t=i(89317),a=i(74848),r=i(84429);let o={slug:"opencv-imread",title:"Reading HEIC Images and Accelerating Loading with Python",authors:"Z. Yuan",tags:["HEIC","TurboJPEG"],image:"/en/img/2024/0213.webp",description:"Let\u2019s optimize OpenCV imread!"},s,l={authorsImageUrls:[void 0]},c=[{value:"Basic Usage",id:"basic-usage",level:2},{value:"Limitation 1: HEIC Format",id:"limitation-1-heic-format",level:2},{value:"Limitation 2: Slow JPG Loading",id:"limitation-2-slow-jpg-loading",level:2},{value:"Conclusion",id:"conclusion",level:2}];function d(e){let n={code:"code",h2:"h2",p:"p",pre:"pre",...(0,r.R)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsxs)(n.p,{children:["When you want to read an image, you may use OpenCV's ",(0,a.jsx)(n.code,{children:"imread"})," function."]}),"\n",(0,a.jsx)(n.p,{children:"Unfortunately, this function is not perfect, and sometimes you may encounter certain issues."}),"\n",(0,a.jsx)(n.h2,{id:"basic-usage",children:"Basic Usage"}),"\n",(0,a.jsxs)(n.p,{children:["The basic usage of the ",(0,a.jsx)(n.code,{children:"imread"})," function is quite simple; just pass in the path of the image:"]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-python",children:"import cv2\n\nimage = cv2.imread('path/to/image.jpg')\n"})}),"\n",(0,a.jsx)(n.p,{children:"Supported image formats include common formats like BMP, JPG, PNG, TIF, etc."}),"\n",(0,a.jsx)(n.h2,{id:"limitation-1-heic-format",children:"Limitation 1: HEIC Format"}),"\n",(0,a.jsxs)(n.p,{children:["Photos taken on iOS devices are usually in HEIC format, which is not supported by OpenCV. If you try to read a HEIC image using the ",(0,a.jsx)(n.code,{children:"imread"})," function, you will get a ",(0,a.jsx)(n.code,{children:"None"})," return value."]}),"\n",(0,a.jsxs)(n.p,{children:["To solve this, we need to use the ",(0,a.jsx)(n.code,{children:"pyheif"})," package to read HEIC images and then convert them to a ",(0,a.jsx)(n.code,{children:"numpy.ndarray"}),"."]}),"\n",(0,a.jsx)(n.p,{children:"First, install the required packages:"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:"sudo apt install libheif-dev\npip install pyheif\n"})}),"\n",(0,a.jsx)(n.p,{children:"Then, write a simple function:"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-python",children:'import cv2\nimport pyheif\nimport numpy as np\n\ndef read_heic_to_numpy(file_path: str):\n    heif_file = pyheif.read(file_path)\n    data = heif_file.data\n    if heif_file.mode == "RGB":\n        numpy_array = np.frombuffer(data, dtype=np.uint8).reshape(\n            heif_file.size[1], heif_file.size[0], 3)\n    elif heif_file.mode == "RGBA":\n        numpy_array = np.frombuffer(data, dtype=np.uint8).reshape(\n            heif_file.size[1], heif_file.size[0], 4)\n    else:\n        raise ValueError("Unsupported HEIC color mode")\n    return numpy_array\n\n\nimg = read_heic_to_numpy(\'path/to/image.heic\')\nimg = cv2.cvtColor(img, cv2.COLOR_RGB2BGR)\n'})}),"\n",(0,a.jsx)(n.h2,{id:"limitation-2-slow-jpg-loading",children:"Limitation 2: Slow JPG Loading"}),"\n",(0,a.jsxs)(n.p,{children:["In some cases, the ",(0,a.jsx)(n.code,{children:"imread"})," function reads JPG images very slowly. This is because OpenCV uses the ",(0,a.jsx)(n.code,{children:"libjpeg"})," library to read JPG images, and ",(0,a.jsx)(n.code,{children:"libjpeg"})," is not particularly efficient."]}),"\n",(0,a.jsxs)(n.p,{children:["To address this, we introduce the ",(0,a.jsx)(n.code,{children:"TurboJPEG"})," package, which is an alternative to ",(0,a.jsx)(n.code,{children:"libjpeg"})," and offers better performance."]}),"\n",(0,a.jsx)(n.p,{children:"As before, first install the required packages:"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:"sudo apt install libturbojpeg exiftool\npip install PyTurboJPEG\n"})}),"\n",(0,a.jsx)(n.p,{children:"Then, write some code to speed it up:"}),"\n",(0,a.jsx)(n.p,{children:"Generally, it speeds up the process by about 2-3 times."}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-python",children:"import cv2\nimport piexif\nfrom enum import IntEnum\nfrom pathlib import Path\nfrom turbojpeg import TurboJPEG\n\n\njpeg = TurboJPEG()\n\n\nclass ROTATE(IntEnum):\n    ROTATE_90 = cv2.ROTATE_90_CLOCKWISE\n    ROTATE_180 = cv2.ROTATE_180\n    ROTATE_270 = cv2.ROTATE_90_COUNTERCLOCKWISE\n\n\ndef imrotate90(img, rotate_code: ROTATE) -> np.ndarray:\n    return cv2.rotate(img.copy(), rotate_code)\n\n\ndef get_orientation_code(stream: Union[str, Path, bytes]):\n    code = None\n    try:\n        exif_dict = piexif.load(stream)\n        if piexif.ImageIFD.Orientation in exif_dict[\"0th\"]:\n            orientation = exif_dict[\"0th\"][piexif.ImageIFD.Orientation]\n            if orientation == 3:\n                code = ROTATE.ROTATE_180\n            elif orientation == 6:\n                code = ROTATE.ROTATE_90\n            elif orientation == 8:\n                code = ROTATE.ROTATE_270\n    finally:\n        return code\n\n\ndef jpgdecode(byte_: bytes) -> Union[np.ndarray, None]:\n    try:\n        bgr_array = jpeg.decode(byte_)\n        code = get_orientation_code(byte_)\n        bgr_array = imrotate90(\n            bgr_array, code) if code is not None else bgr_array\n    except:\n        bgr_array = None\n\n    return bgr_array\n\n\ndef jpgread(img_file: Union[str, Path]) -> Union[np.ndarray, None]:\n    with open(str(img_file), 'rb') as f:\n        binary_img = f.read()\n        bgr_array = jpgdecode(binary_img)\n\n    return bgr_array\n\nimg = jpgread('path/to/image.jpg')\n"})}),"\n",(0,a.jsx)(n.p,{children:"This will speed up the reading of JPG images."}),"\n",(0,a.jsx)(n.h2,{id:"conclusion",children:"Conclusion"}),"\n",(0,a.jsx)(n.p,{children:"What if we want this program to be smarter and choose the best loading method on its own?"}),"\n",(0,a.jsx)(n.p,{children:"Here, we can consolidate the code above to select the appropriate loading method based on the image format:"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-python",metastring:'title="custom_imread.py"',children:"def imread(\n    path: Union[str, Path],\n    color_base: str = 'BGR',\n    verbose: bool = False\n) -> Union[np.ndarray, None]:\n\n    if not Path(path).exists():\n        raise FileExistsError(f'{path} can not found.')\n\n    if Path(path).suffix.lower() == '.heic':\n        img = read_heic_to_numpy(str(path))\n        img = cv2.cvtColor(img, cv2.COLOR_RGB2BGR)\n    else:\n        img = jpgread(path)\n        img = cv2.imread(str(path)) if img is None else img\n\n    if img is None:\n        if verbose:\n            warnings.warn(\"Got a None type image.\")\n        return\n\n    if color_base != 'BGR':\n        img = imcvtcolor(img, cvt_mode=f'BGR2{color_base}')\n\n    return img\n"})})]})}function p(e={}){let{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,a.jsx)(n,{...e,children:(0,a.jsx)(d,{...e})}):d(e)}},84429:function(e,n,i){i.d(n,{R:()=>o,x:()=>s});var t=i(96540);let a={},r=t.createContext(a);function o(e){let n=t.useContext(r);return t.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function s(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:o(e.components),t.createElement(r.Provider,{value:n},e.children)}},89317:function(e){e.exports=JSON.parse('{"permalink":"/en/blog/opencv-imread","source":"@site/i18n/en/docusaurus-plugin-content-blog/2024/02-13-imread/index.md","title":"Reading HEIC Images and Accelerating Loading with Python","description":"Let\u2019s optimize OpenCV imread!","date":"2024-02-13T00:00:00.000Z","tags":[{"inline":true,"label":"HEIC","permalink":"/en/blog/tags/heic"},{"inline":true,"label":"TurboJPEG","permalink":"/en/blog/tags/turbo-jpeg"}],"readingTime":2.85,"hasTruncateMarker":true,"authors":[{"name":"Z. Yuan","title":"Dosaid maintainer, Full-Stack AI Engineer","url":"https://github.com/zephyr-sh","socials":{"github":"https://github.com/zephyr-sh","linkedin":"https://www.linkedin.com/in/ze-yuan-sh7/"},"imageURL":"https://github.com/zephyr-sh.png","key":"Z. Yuan","page":null}],"frontMatter":{"slug":"opencv-imread","title":"Reading HEIC Images and Accelerating Loading with Python","authors":"Z. Yuan","tags":["HEIC","TurboJPEG"],"image":"/en/img/2024/0213.webp","description":"Let\u2019s optimize OpenCV imread!"},"unlisted":false,"prevItem":{"title":"Convert PDF to Images with Python","permalink":"/en/blog/convert-pdf-to-images"},"nextItem":{"title":"Daily Error Troubleshooting Log","permalink":"/en/blog/error-record"}}')}}]);