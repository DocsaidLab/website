"use strict";(self.webpackChunkblog=self.webpackChunkblog||[]).push([[32439],{45086:(n,e,t)=>{t.r(e),t.d(e,{assets:()=>d,contentTitle:()=>o,default:()=>p,frontMatter:()=>c,metadata:()=>i,toc:()=>a});const i=JSON.parse('{"id":"docsaidkit/funcs/structures/jaccard_index","title":"jaccard_index","description":"jaccardindex(predpoly np.ndarray, imagesize: Tuple[int, int]) -> float","source":"@site/i18n/en/docusaurus-plugin-content-docs/current/docsaidkit/funcs/structures/jaccard_index.md","sourceDirName":"docsaidkit/funcs/structures","slug":"/docsaidkit/funcs/structures/jaccard_index","permalink":"/en/docs/docsaidkit/funcs/structures/jaccard_index","draft":false,"unlisted":false,"tags":[],"version":"current","lastUpdatedBy":"zephyr-sh","lastUpdatedAt":1713493370000,"sidebarPosition":10,"frontMatter":{"sidebar_position":10},"sidebar":"tutorialSidebar","previous":{"title":"polygon_iou","permalink":"/en/docs/docsaidkit/funcs/structures/polygon_iou"},"next":{"title":"Mixins","permalink":"/en/docs/category/mixins"}}');var r=t(74848),s=t(28453);const c={sidebar_position:10},o="jaccard_index",d={},a=[];function l(n){const e={a:"a",blockquote:"blockquote",code:"code",h1:"h1",header:"header",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,s.R)(),...n.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(e.header,{children:(0,r.jsx)(e.h1,{id:"jaccard_index",children:"jaccard_index"})}),"\n",(0,r.jsxs)(e.blockquote,{children:["\n",(0,r.jsx)(e.p,{children:(0,r.jsx)(e.a,{href:"https://github.com/DocsaidLab/DocsaidKit/blob/6db820b92e709b61f1848d7583a3fa856b02716f/docsaidkit/structures/functionals.py#L93C5-L93C18",children:"jaccard_index(pred_poly: np.ndarray, gt_poly: np.ndarray, image_size: Tuple[int, int]) -> float"})}),"\n"]}),"\n",(0,r.jsxs)(e.ul,{children:["\n",(0,r.jsxs)(e.li,{children:["\n",(0,r.jsx)(e.p,{children:(0,r.jsx)(e.strong,{children:"Description"})}),"\n",(0,r.jsxs)(e.p,{children:[(0,r.jsx)(e.code,{children:"jaccard_index"})," is a function used to calculate the Jaccard index between two polygons. This function calculates the ratio of the intersection area to the union area between two polygons. The input polygons must be of type ",(0,r.jsx)(e.code,{children:"np.ndarray"}),"."]}),"\n"]}),"\n",(0,r.jsxs)(e.li,{children:["\n",(0,r.jsx)(e.p,{children:(0,r.jsx)(e.strong,{children:"Parameters"})}),"\n",(0,r.jsxs)(e.ul,{children:["\n",(0,r.jsxs)(e.li,{children:[(0,r.jsx)(e.strong,{children:"pred_poly"})," (",(0,r.jsx)(e.code,{children:"np.ndarray"}),"): The predicted polygon, a polygon with 4 points."]}),"\n",(0,r.jsxs)(e.li,{children:[(0,r.jsx)(e.strong,{children:"gt_poly"})," (",(0,r.jsx)(e.code,{children:"np.ndarray"}),"): The ground truth polygon, a polygon with 4 points."]}),"\n",(0,r.jsxs)(e.li,{children:[(0,r.jsx)(e.strong,{children:"image_size"})," (",(0,r.jsx)(e.code,{children:"Tuple[int, int]"}),"): The size of the image, (height, width)."]}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(e.li,{children:["\n",(0,r.jsx)(e.p,{children:(0,r.jsx)(e.strong,{children:"Example"})}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:"language-python",children:"import docsaidkit as D\n\npred_poly = np.array([[0, 0], [0, 1], [1, 1], [1, 0]])\ngt_poly = np.array([[0.5, 0.5], [0.5, 1.5], [1.5, 1.5], [1.5, 0.5]])\nimage_size = (2, 2)\njaccard_index = D.jaccard_index(pred_poly, gt_poly, image_size)\nprint(jaccard_index)\n# >>> 0.14285714285714285\n"})}),"\n"]}),"\n"]})]})}function p(n={}){const{wrapper:e}={...(0,s.R)(),...n.components};return e?(0,r.jsx)(e,{...n,children:(0,r.jsx)(l,{...n})}):l(n)}},28453:(n,e,t)=>{t.d(e,{R:()=>c,x:()=>o});var i=t(96540);const r={},s=i.createContext(r);function c(n){const e=i.useContext(s);return i.useMemo((function(){return"function"==typeof n?n(e):{...e,...n}}),[e,n])}function o(n){let e;return e=n.disableParentContext?"function"==typeof n.components?n.components(r):n.components||r:c(n.components),i.createElement(s.Provider,{value:e},n.children)}}}]);