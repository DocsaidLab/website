"use strict";(self.webpackChunkblog=self.webpackChunkblog||[]).push([[4237],{98660:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>l,contentTitle:()=>o,default:()=>m,frontMatter:()=>a,metadata:()=>s,toc:()=>c});var i=t(74848),r=t(28453);const a={slug:"opencv-imread",title:"Reading HEIC Images in Python",authors:"Zephyr",tags:["Python","imread","HEIC","TurboJPEG"],image:"/en/img/2024/0213.webp",description:"Optimizing imread for reading HEIC images!"},o=void 0,s={permalink:"/en/blog/opencv-imread",source:"@site/i18n/en/docusaurus-plugin-content-blog/2024/02-13-imread/index.md",title:"Reading HEIC Images in Python",description:"Optimizing imread for reading HEIC images!",date:"2024-02-13T00:00:00.000Z",tags:[{inline:!0,label:"Python",permalink:"/en/blog/tags/python"},{inline:!0,label:"imread",permalink:"/en/blog/tags/imread"},{inline:!0,label:"HEIC",permalink:"/en/blog/tags/heic"},{inline:!0,label:"TurboJPEG",permalink:"/en/blog/tags/turbo-jpeg"}],readingTime:3.115,hasTruncateMarker:!0,authors:[{name:"Zephyr",title:"Engineer",url:"https://github.com/zephyr-sh",imageURL:"https://github.com/zephyr-sh.png",key:"Zephyr",page:null}],frontMatter:{slug:"opencv-imread",title:"Reading HEIC Images in Python",authors:"Zephyr",tags:["Python","imread","HEIC","TurboJPEG"],image:"/en/img/2024/0213.webp",description:"Optimizing imread for reading HEIC images!"},unlisted:!1,prevItem:{title:"Convert PDF to Images using Python",permalink:"/en/blog/convert-pdf-to-images"},nextItem:{title:"Daily Error Troubleshooting Log",permalink:"/en/blog/error-record"}},l={authorsImageUrls:[void 0]},c=[];function g(e){const n={code:"code",hr:"hr",img:"img",p:"p",...(0,r.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)("figure",{children:(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.img,{alt:"title",src:t(90789).A+"",width:"1024",height:"1024"}),"\n",(0,i.jsx)("figcaption",{children:"Cover Image: Automatically generated by GPT-4 after reading this article"})]})}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsxs)(n.p,{children:["When you want to read an image, you might use the ",(0,i.jsx)(n.code,{children:"imread"})," function from OpenCV. This function is very convenient as it can read various image formats and directly load the image into a ",(0,i.jsx)(n.code,{children:"numpy.ndarray"})," variable. However, this function is not always universal, and you may encounter some issues."]})]})}function m(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(g,{...e})}):g(e)}},90789:(e,n,t)=>{t.d(n,{A:()=>i});const i=t.p+"assets/images/0213-ccba02633c06b5ebe379db358fc45ace.webp"},28453:(e,n,t)=>{t.d(n,{R:()=>o,x:()=>s});var i=t(96540);const r={},a=i.createContext(r);function o(e){const n=i.useContext(a);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function s(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:o(e.components),i.createElement(a.Provider,{value:n},e.children)}}}]);