"use strict";(self.webpackChunkblog=self.webpackChunkblog||[]).push([[5418],{10930:e=>{e.exports=JSON.parse('{"archive":{"blogPosts":[{"id":"nist-and-frvt","metadata":{"permalink":"/en/blog/nist-and-frvt","source":"@site/i18n/en/docusaurus-plugin-content-blog/2024/06-23-nist-and-frvt/index.md","title":"NIST & FRVT","description":"A brief introduction to NIST and FRVT.","date":"2024-06-23T00:00:00.000Z","tags":[{"inline":true,"label":"NIST","permalink":"/en/blog/tags/nist"},{"inline":true,"label":"FRVT","permalink":"/en/blog/tags/frvt"}],"readingTime":2.64,"hasTruncateMarker":false,"authors":[{"name":"Zephyr","title":"Engineer","url":"https://github.com/zephyr-sh","imageURL":"https://github.com/zephyr-sh.png","key":"Zephyr"}],"frontMatter":{"slug":"nist-and-frvt","title":"NIST & FRVT","authors":"Zephyr","image":"/en/img/2024/0623.webp","tags":["NIST","FRVT"],"description":"A brief introduction to NIST and FRVT."},"unlisted":false,"nextItem":{"title":"Get All Stock Code Information from TWSE","permalink":"/en/blog/get-taiwan-all-stocks-info"}},"content":"<figure>\\n![title](/img/2024/0623.webp)\\n<figcaption>Cover Image: Automatically generated by GPT-4 after reading this article.</figcaption>\\n</figure>\\n\\n---\\n\\n## Introduction\\n\\n- [**FRVT Official**](https://www.nist.gov/)\\n\\nThe National Institute of Standards and Technology (NIST) was founded in 1901 and is part of the United States Department of Commerce.\\n\\nAs a non-profit organization, NIST\'s mission is to advance U.S. innovation and competitiveness in science and technology through the development of standards, scientific research, and technology development, thereby promoting economic security and enhancing the quality of life.\\n\\n## Core Missions and Values of NIST\\n\\nNIST\'s core missions include:\\n\\n- **Measurement Science**: Providing world-class measurement standards that support scientific research, business activities, and public safety.\\n- **Rigorous Traceability**: Establishing and maintaining a comprehensive system of measurement standards to ensure international traceability and accuracy of measurement results.\\n- **Standardization and Application**: Promoting the development and implementation of technical standards, particularly in information technology, environmental science, and manufacturing.\\n\\nNIST\'s core values emphasize perseverance, integrity, inclusivity, and excellence, which are foundational to its current and future work.\\n\\n## FRVT Program\\n\\nThe Face Recognition Vendor Test (FRVT) program is a key initiative by NIST.\\n\\nIts primary goal is to evaluate the performance of facial recognition technologies globally, providing an objective and impartial testing platform.\\n\\nFRVT encompasses various testing scenarios, including static image recognition and real-time recognition in dynamic environments, thereby helping users and developers comprehensively understand the performance of these technologies in practical applications.\\n\\n## Importance and Impact of the FRVT Program\\n\\nThe FRVT program significantly influences government agencies, businesses, and other organizations in selecting and deploying facial recognition systems by providing scientifically rigorous testing methods and objective performance assessment data.\\n\\nThese test results not only help determine which technologies best suit specific security needs and operational environments but also foster innovation and advancement in the field of facial recognition technology.\\n\\n## Participation in the FRVT Program\\n\\nParticipation in the FRVT program involves several steps:\\n\\n1. **Submission of Participation Agreement**: Developers need to submit a detailed participation agreement to NIST, indicating compliance with all FRVT regulations and standards.\\n2. **Software Packaging and API Integration**: Participants must encapsulate their algorithms behind the C++ API provided by NIST to ensure compatibility and functionality of the algorithms.\\n3. **Execution of Verification Suites**: Developers need to run their software through verification suites provided by NIST to ensure that the algorithm outputs submitted can be accurately reproduced by NIST.\\n4. **Encryption and Data Submission**: All algorithm submissions must be encrypted, correctly signed, and transmitted securely to NIST to ensure data security and integrity.\\n\\n## FRTE Program and Its Projects\\n\\nThe FRVT program has been split and renamed into Face Recognition Technology Evaluation (FRTE) and Face Analysis Technology Evaluation (FATE).\\n\\nThe FRTE includes several subprojects:\\n\\n- 1:1 Verification\\n- 1:N Identification\\n- Demographic Effects\\n- Face Mask Effects\\n- Paperless Travel\\n- Twins Demonstration\\n\\n## Conclusion\\n\\nAs a key driver of global standardization and innovation in facial recognition technology, NIST continues to support technological advancements through its FRVT and FRTE programs, ensuring that these advancements not only serve public interests but also meet the needs of business and security.\\n\\nThese initiatives not only enhance the accuracy and reliability of technologies but also promote sustained development across related industries."},{"id":"get-taiwan-all-stocks-info","metadata":{"permalink":"/en/blog/get-taiwan-all-stocks-info","source":"@site/i18n/en/docusaurus-plugin-content-blog/2024/06-10-get-taiwan-all-stocks-info/index.md","title":"Get All Stock Code Information from TWSE","description":"Get information on all stocks listed on TWSE using Python.","date":"2024-06-10T00:00:00.000Z","tags":[{"inline":true,"label":"requests","permalink":"/en/blog/tags/requests"},{"inline":true,"label":"beautifulsoup4","permalink":"/en/blog/tags/beautifulsoup-4"},{"inline":true,"label":"python","permalink":"/en/blog/tags/python"},{"inline":true,"label":"TWSE","permalink":"/en/blog/tags/twse"}],"readingTime":2.59,"hasTruncateMarker":false,"authors":[{"name":"Zephyr","title":"Engineer","url":"https://github.com/zephyr-sh","imageURL":"https://github.com/zephyr-sh.png","key":"Zephyr"}],"frontMatter":{"slug":"get-taiwan-all-stocks-info","title":"Get All Stock Code Information from TWSE","authors":"Zephyr","image":"/en/img/2024/0610.webp","tags":["requests","beautifulsoup4","python","TWSE"],"description":"Get information on all stocks listed on TWSE using Python."},"unlisted":false,"prevItem":{"title":"NIST & FRVT","permalink":"/en/blog/nist-and-frvt"},"nextItem":{"title":"Simple Configuration of Python Environment on Win11","permalink":"/en/blog/windows-python-settings"}},"content":"<figure>\\n![title](/img/2024/0610.webp)\\n<figcaption>Cover Image: Automatically generated by GPT-4 after reading this article.</figcaption>\\n</figure>\\n\\n---\\n\\nThe stock codes in the Taiwanese market change periodically, making manual tracking impractical.\\n\\nIt\'s time to automate!\\n\\n## Setup Environment\\n\\nLet\'s tackle the challenge by writing a program. First, install the necessary packages:\\n\\n```bash\\npip install requests beautifulsoup4 json\\n```\\n\\n:::tip\\nAssuming you have a functional Python environment.\\n:::\\n\\n## Target Webpages\\n\\nStock-related data resides on the website of the Taiwan Stock Exchange (TWSE). Let\'s identify the target pages:\\n\\n![TWSE](./img/img1.jpg)\\n\\nNote down these three URLs:\\n\\n```python\\nurls = [\\n    \\"https://isin.twse.com.tw/isin/C_public.jsp?strMode=2\\", # Listed securities\\n    \\"https://isin.twse.com.tw/isin/C_public.jsp?strMode=4\\", # OTC securities\\n    \\"https://isin.twse.com.tw/isin/C_public.jsp?strMode=5\\"  # Emerging stocks\\n]\\n```\\n\\n## Parsing the Webpage\\n\\n![stock_table](./img/img2.jpg)\\n\\nUpon inspecting the webpage, we identify that the main table corresponds to the HTML tag `class=h4`.\\n\\nNow that we\'ve located our target, let\'s start coding:\\n\\n```python title=\\"update_stocks_code.py\\"\\nimport json\\nimport requests\\nfrom bs4 import BeautifulSoup\\n\\n# Retrieve content from Taiwan Stock Exchange announcements\\nurls = [\\n    \\"https://isin.twse.com.tw/isin/C_public.jsp?strMode=2\\", # Listed securities\\n    \\"https://isin.twse.com.tw/isin/C_public.jsp?strMode=4\\", # OTC securities\\n    \\"https://isin.twse.com.tw/isin/C_public.jsp?strMode=5\\"  # Emerging stocks\\n]\\n\\n# All data infos\\ndata = {}\\n\\ntotal_urls = len(urls)\\nfor index, url in enumerate(urls, start=1):\\n    print(f\\"Processing URL {index}/{total_urls}: {url}\\")\\n\\n    response = requests.get(url)\\n    response.encoding = \'big5\'  # Set the correct encoding\\n\\n    # Parse HTML using BeautifulSoup\\n    soup = BeautifulSoup(response.text, \'html.parser\')\\n    table = soup.find(\'table\', {\'class\': \'h4\'})\\n\\n    if not table:\\n        print(f\\"Table not found for URL: {url}\\")\\n        continue\\n\\n    for row in table.find_all(\'tr\')[1:]:  # Skip header row\\n        cells = row.find_all(\'td\')\\n        if len(cells) != 7:\\n            continue\\n\\n        code, name = cells[0].text.split(\\"\\\\u3000\\")\\n        internationality = cells[1].text\\n        list_date = cells[2].text\\n        market_type = cells[3].text\\n        industry_type = cells[4].text\\n\\n        data[code] = {\\n            \\"Name\\": name,\\n            \\"Code\\": code,\\n            \\"Market Type\\": market_type,\\n            \\"Industry Type\\": industry_type,\\n            \\"Listing Date\\": list_date,\\n            \\"International Code\\": internationality\\n        }\\n\\nwith open(\\"stock_infos.json\\", \\"w\\", encoding=\\"utf-8\\") as f:\\n    json.dump(data, f, ensure_ascii=False, indent=2)\\n\\nprint(\\"All data has been processed and saved to stock_infos.json\\")\\n```\\n\\n## Output Results\\n\\n```json title=\\"stock_infos.json\\"\\n{\\n  \\"1101\\": {\\n    \\"Name\\": \\"Taiwan Cement\\",\\n    \\"Code\\": \\"1101\\",\\n    \\"Market Type\\": \\"Listed\\",\\n    \\"Industry Type\\": \\"Cement Industry\\",\\n    \\"Listing Date\\": \\"1962/02/09\\",\\n    \\"International Code\\": \\"TW0001101004\\"\\n  },\\n  \\"1102\\": {\\n    \\"Name\\": \\"Asia Cement\\",\\n    \\"Code\\": \\"1102\\",\\n    \\"Market Type\\": \\"Listed\\",\\n    \\"Industry Type\\": \\"Cement Industry\\",\\n    \\"Listing Date\\": \\"1962/06/08\\",\\n    \\"International Code\\": \\"TW0001102002\\"\\n  },\\n  ...omitting the rest...\\n}\\n```\\n\\nWe output the result as a JSON file for convenient integration with other programs.\\n\\n## FAQs\\n\\n### I only want ordinary stocks.\\n\\nI assume you mean stocks with \\"four-digit\\" codes, excluding ETFs, warrants, etc. To achieve this, simply add a filtering condition in the program:\\n\\n```python\\nif len(code) != 4:\\n    continue\\n```\\n\\n### I only want specific industries.\\n\\nThis requirement can be extended to specific market types, industry types, listing dates, or even the previous \\"ordinary stocks\\" question. We just need to load the output JSON file into Pandas and filter with conditions:\\n\\n```python\\nimport pandas as pd\\n\\ndf = pd.read_json(\\"stock_infos.json\\", orient=\\"index\\")\\ntarget = df[df[\\"Industry Type\\"] == \\"Cement Industry\\"]\\n```\\n\\n### The program is broken.\\n\\nThat could be due to changes in the TWSE website\'s layout, causing the HTML structure to alter. We\'ll need to adjust the code accordingly.\\n\\n## Conclusion\\n\\nBy periodically running this program, we can obtain the latest stock information.\\n\\nIf you have any questions or suggestions, feel free to leave a comment below!"},{"id":"windows-python-settings","metadata":{"permalink":"/en/blog/windows-python-settings","source":"@site/i18n/en/docusaurus-plugin-content-blog/2024/06-05-windows-python-settings/index.md","title":"Simple Configuration of Python Environment on Win11","description":"Setting up Python on Windows.","date":"2024-06-05T00:00:00.000Z","tags":[{"inline":true,"label":"win11","permalink":"/en/blog/tags/win-11"},{"inline":true,"label":"python","permalink":"/en/blog/tags/python"},{"inline":true,"label":"powershell","permalink":"/en/blog/tags/powershell"}],"readingTime":5.315,"hasTruncateMarker":false,"authors":[{"name":"Zephyr","title":"Engineer","url":"https://github.com/zephyr-sh","imageURL":"https://github.com/zephyr-sh.png","key":"Zephyr"}],"frontMatter":{"slug":"windows-python-settings","title":"Simple Configuration of Python Environment on Win11","authors":"Zephyr","image":"/en/img/2024/0605.webp","tags":["win11","python","powershell"],"description":"Setting up Python on Windows."},"unlisted":false,"prevItem":{"title":"Get All Stock Code Information from TWSE","permalink":"/en/blog/get-taiwan-all-stocks-info"},"nextItem":{"title":"LaTeX Syntax Quick Reference","permalink":"/en/blog/latex-usage"}},"content":"<figure>\\n![title](/img/2024/0605.webp)\\n<figcaption>Cover Image: Automatically generated by GPT-4 after reading this article</figcaption>\\n</figure>\\n\\n---\\n\\nIt\'s been a while since I worked on a project that required development on a Windows system.\\n\\nIt feels like ages! It\'s been several years since I last used Windows.\\n\\n\uff0a\\n\\nWe tried a few methods and finally settled on using PowerShell to set up the Python environment.\\n\\nWe initially thought about using WSL for configuration, but that would turn the environment into a Linux environment... (?)\\n\\nIf we already have a Linux environment at hand, why bother configuring one on Windows?\\n\\n## Operating Environment\\n\\nWe\'re using the virtual environment tool provided by Mac: [**Parallels Desktop**](https://www.parallels.com/products/desktop/).\\n\\nWith Parallels Desktop, we can smoothly run a Windows system on Mac, and the currently installed one is Windows 11.\\n\\n:::tip\\nThe Apple M1 chip is ARM-based, and it faced many compatibility issues when it was first launched, but it has improved a lot over the years.\\n:::\\n\\n## Installing Chocolatey\\n\\nFirst, we need to launch PowerShell.\\n\\n![PowerShell](./img/img1.jpg)\\n\\nChocolatey is a package manager for Windows. It automates the process of installing, upgrading, and managing software using NuGet and PowerShell technologies. It\'s similar to `apt-get` or `yum` on Linux, allowing Windows users to manage software in a simple and consistent way.\\n\\nInstalling Chocolatey is relatively simple. Just run the following command in PowerShell with administrative privileges:\\n\\n```powershell\\nSet-ExecutionPolicy Bypass -Scope Process -Force; [System.Net.ServicePointManager]::SecurityProtocol = [System.Net.ServicePointManager]::SecurityProtocol -bor 3072; iex ((New-Object System.Net.WebClient).DownloadString(\'https://community.chocolatey.org/install.ps1\'))\\n```\\n\\nAfter installation, enter the following command to verify if Chocolatey was installed successfully:\\n\\n```powershell\\nchoco -v\\n```\\n\\nIf you see the version number of Chocolatey, it means the installation was successful.\\n\\n:::tip\\nHere\'s what the above command does:\\n\\n1. **Set-ExecutionPolicy Bypass -Scope Process -Force**:\\n\\n   - This command sets the PowerShell execution policy.\\n   - `Set-ExecutionPolicy` is used to change the execution policy to allow or disallow the execution of PowerShell scripts.\\n   - `Bypass` means bypassing all execution policies without any restrictions.\\n   - `-Scope Process` means applying this change only to the current PowerShell session, not affecting the entire system.\\n   - `-Force` is used to forcefully execute this operation without prompting for confirmation.\\n\\n2. **[System.Net.ServicePointManager]::SecurityProtocol = [System.Net.ServicePointManager]::SecurityProtocol -bor 3072**:\\n\\n   - This command sets the network security protocol.\\n   - `[System.Net.ServicePointManager]::SecurityProtocol` is used to get or set the protocol type.\\n   - `-bor 3072` adds the TLS 1.2 (3072) protocol to the existing protocols. `-bor` is a bitwise operator, indicating a bitwise OR operation, allowing multiple protocols to be enabled simultaneously.\\n\\n3. **iex ((New-Object System.Net.WebClient).DownloadString(\'https://community.chocolatey.org/install.ps1\'))**:\\n   - This command downloads and executes the Chocolatey installation script.\\n   - `iex` is shorthand for `Invoke-Expression`, used to execute the content passed to it as a string.\\n   - `New-Object System.Net.WebClient` is used to create a new WebClient object, which is used for downloading data.\\n   - `.DownloadString(\'https://community.chocolatey.org/install.ps1\')` is used to download the script content from the specified URL.\\n   - Overall, the command `iex ((New-Object System.Net.WebClient).DownloadString(\'https://community.chocolatey.org/install.ps1\'))` downloads and immediately executes the PowerShell script located at \'https://community.chocolatey.org/install.ps1\', which is responsible for installing Chocolatey.\\n\\nIn simple terms, the purpose of this command is: temporarily set the PowerShell execution policy to allow script execution, configure the network security protocol to support TLS 1.2, and then download and execute the Chocolatey installation script.\\n:::\\n\\n:::info\\n**Common Chocolatey Commands:**\\n\\n- **Install**\\n  ```powershell\\n  choco install <packageName>\\n  ```\\n- **Upgrade**\\n  ```powershell\\n  choco upgrade <packageName>\\n  ```\\n- **List installed packages**\\n  ```powershell\\n  choco list --localonly\\n  ```\\n- **Uninstall**\\n  ```powershell\\n  choco uninstall <packageName>\\n  ```\\n  :::\\n\\n## Installing git\\n\\nAfter installation, continue running PowerShell as an administrator, and execute the following command to install Git:\\n\\n```powershell\\nchoco install git -y\\n```\\n\\nAfter installation, enter the following command to verify if Git was installed successfully:\\n\\n```powershell\\ngit --version\\n# >>> git version 2.45.2.windows.1\\n```\\n\\n## Installing Python\\n\\nWe use pyenv to manage Python versions.\\n\\n:::tip\\nAlthough there are many choices on the market, such as Anaconda, Miniconda, WinPython, etc., we still chose pyenv.\\n\\nBecause we often develop on Linux, seeing pyenv feels familiar.\\n:::\\n\\nInstalling and using `pyenv` on Windows is not usually straightforward because `pyenv` is designed for Unix-like environments. However, you can use the `pyenv-win` project, which is a Windows port of `pyenv`.\\n\\nFollow these steps:\\n\\n### Step 1: Installing `pyenv-win`\\n\\n- [**Reference: pyenv-win/docs/installation.md**](https://github.com/pyenv-win/pyenv-win/blob/master/docs/installation.md)\\n\\nDownload the `pyenv-win` project:\\n\\n```powershell\\nInvoke-WebRequest -UseBasicParsing -Uri \\"https://raw.githubusercontent.com/pyenv-win/pyenv-win/master/pyenv-win/install-pyenv-win.ps1\\" -OutFile \\"./install-pyenv-win.ps1\\"; &\\"./install-pyenv-win.ps1\\"\\n```\\n\\nIf you encounter any `UnauthorizedAccess` errors as shown below, please launch Windows PowerShell with the \\"Run as Administrator\\" option and execute:\\n\\n```powershell\\nSet-ExecutionPolicy -ExecutionPolicy RemoteSigned -Scope LocalMachine\\n```\\n\\nAfter completion, rerun the installation command above.\\n\\n### Step 2: Verify Installation\\n\\n1. **Restart PowerShell**:\\n\\n   - Close and reopen the PowerShell window to apply the environment variable changes.\\n\\n2. **Check `pyenv` installation**:\\n\\n   - Enter the following command to check the `pyenv` version:\\n\\n     ```powershell\\n     pyenv --version\\n     ```\\n\\n### Step 3: Use `pyenv` to install Python versions\\n\\n1. **View available Python versions**:\\n\\n   - List all available Python versions with the following command:\\n\\n     ```powershell\\n     pyenv install --list\\n     ```\\n\\n2. **Install a specific Python version**:\\n\\n- For example, to install Python 3.10.11:\\n\\n  ```powershell\\n  pyenv install 3.10.11\\n  ```\\n\\n3. **Set a global Python version**:\\n\\n   - This step is not necessary, but if you want to use the same Python version across all shells, you can set the installed Python version as the global default:\\n\\n     ```powershell\\n     pyenv global 3.10.11\\n     ```\\n\\n4. **Verify Python installation**:\\n\\n   - Enter the following command to verify if Python was installed successfully:\\n\\n     ```powershell\\n     python --version\\n     ```\\n\\n## Installing VS Code\\n\\nFinally, we install Visual Studio Code as our development tool.\\n\\nHere, we\'ll go to the [**VS Code official website**](https://code.visualstudio.com/Download) to download the installer and then proceed with the installation.\\n\\n![VS Code](./img/img2.jpg)\\n\\nAfter installation, we want to be able to use the `code` command directly in PowerShell to open VS Code.\\n\\nSo, we need to add the installation path of VS Code to the environment variables. Copy the following path:\\n\\n```powershell\\nC:\\\\Users\\\\your_user_name\\\\AppData\\\\Local\\\\Programs\\\\Microsoft VS Code\\\\bin\\n```\\n\\n:::tip\\nRemember to replace `your_user_name` with your username.\\n:::\\n\\n## Side Note\\n\\nActually, we find the PowerShell display screen really hard to look at.\\n\\nFor this part, we suggest using [**oh-my-posh**](https://ohmyposh.dev/) to beautify the appearance of PowerShell.\\n\\nBut this part is not the focus of this article. Interested readers can check out:\\n\\n- [**Tutorial - Customize Your Prompt with Oh My Posh for PowerShell or WSL**](https://learn.microsoft.com/en-us/windows/terminal/tutorials/custom-prompt-setup)\\n\\n## Conclusion\\n\\nThrough PowerShell, we can quickly set up the Python environment and install development tools.\\n\\nOf course, the above only covers the most basic configurations, leaving this article as a reference."},{"id":"latex-usage","metadata":{"permalink":"/en/blog/latex-usage","source":"@site/i18n/en/docusaurus-plugin-content-blog/2024/06-04-latex-usage/index.md","title":"LaTeX Syntax Quick Reference","description":"Quick reference guide for LaTeX syntax","date":"2024-06-04T00:00:00.000Z","tags":[{"inline":true,"label":"LaTeX","permalink":"/en/blog/tags/la-te-x"},{"inline":true,"label":"Math","permalink":"/en/blog/tags/math"}],"readingTime":4.74,"hasTruncateMarker":false,"authors":[{"name":"Zephyr","title":"Engineer","url":"https://github.com/zephyr-sh","imageURL":"https://github.com/zephyr-sh.png","key":"Zephyr"}],"frontMatter":{"slug":"latex-usage","title":"LaTeX Syntax Quick Reference","authors":"Zephyr","image":"/en/img/2024/0604.webp","tags":["LaTeX","Math"],"description":"Quick reference guide for LaTeX syntax"},"unlisted":false,"prevItem":{"title":"Simple Configuration of Python Environment on Win11","permalink":"/en/blog/windows-python-settings"},"nextItem":{"title":"Implementing ANLS","permalink":"/en/blog/impl-normalized-levenshtein-similarity"}},"content":"<figure>\\n![title](/img/2024/0604.webp)\\n<figcaption>Cover Image: Automatically generated by GPT-4 after reading the text</figcaption>\\n</figure>\\n\\n---\\n\\nEvery time you need it, it\'s always a hassle to find, so we decided to write a LaTeX syntax quick reference table.\\n\\n| **Category**             | **Description**                  |                   **Syntax**                   |                  **Output**                   |\\n| ------------------------ | -------------------------------- | :--------------------------------------------: | :-------------------------------------------: |\\n| **Text Styles**          | Bold                             |                 `\\\\textbf{AB}`                  |                 $\\\\textbf{AB}$                 |\\n|                          | Italic                           |                 `\\\\textit{AB}`                  |                 $\\\\textit{AB}$                 |\\n|                          | Underline                        |                `\\\\underline{AB}`                |               $\\\\underline{AB}$                |\\n|                          | Overline                         |                `\\\\overline{AB}`                 |                $\\\\overline{AB}$                |\\n|                          | Typewriter Font                  |                 `\\\\texttt{AB}`                  |                 $\\\\texttt{AB}$                 |\\n| **Math Structures**      | Fraction                         |                 `\\\\frac{A}{B}`                  |                 $\\\\frac{A}{B}$                 |\\n|                          | Fraction (displayed)             |                 `\\\\dfrac{a}{b}`                 |                $\\\\dfrac{a}{b}$                 |\\n|                          | Fraction (inline)                |                 `\\\\tfrac{a}{b}`                 |                $\\\\tfrac{a}{b}$                 |\\n|                          | Fraction (old style)             |                 `{A \\\\over B}`                  |                 $\\\\frac{A}{B}$                 |\\n|                          | Binomial Coefficient             |                 `\\\\binom{n}{k}`                 |                $\\\\binom{n}{k}$                 |\\n|                          | Binomial Coefficient (old style) |                `{n \\\\choose k}`                 |                $\\\\binom{n}{k}$                 |\\n|                          | Square Root                      |                   `\\\\sqrt{x}`                   |                  $\\\\sqrt{x}$                   |\\n|                          | n-th Root                        |                 `\\\\sqrt[n]{x}`                  |                 $\\\\sqrt[n]{x}$                 |\\n|                          | Exponentiation                   |                     `a^b`                      |                     $a^b$                     |\\n|                          | Subscript                        |                     `a_b`                      |                     $a_b$                     |\\n|                          | Integral                         |          `\\\\int_a^b x^2 \\\\mathrm{d} x`           |          $\\\\int_a^b x^2 \\\\mathrm{d} x$          |\\n|                          | Summation                        |        `\\\\sum_{n=1}^\\\\infty \\\\frac{1}{n}`         |        $\\\\sum_{n=1}^\\\\infty \\\\frac{1}{n}$        |\\n|                          | Limit                            |       `\\\\lim_{x \\\\to \\\\infty} \\\\frac{1}{x}`        |       $\\\\lim_{x \\\\to \\\\infty} \\\\frac{1}{x}$       |\\n|                          | Product                          |               `\\\\prod_{i=1}^n i`                |               $\\\\prod_{i=1}^n i$               |\\n| **Math Symbols**         | Sine                             |                 `\\\\sin{\\\\theta}`                 |                $\\\\sin{\\\\theta}$                 |\\n|                          | Cosine                           |                 `\\\\cos{\\\\theta}`                 |                $\\\\cos{\\\\theta}$                 |\\n|                          | Plus-Minus                       |                     `\\\\pm`                      |                     $\\\\pm$                     |\\n|                          | Multiplication                   |                    `\\\\times`                    |                   $\\\\times$                    |\\n|                          | Division                         |                     `\\\\div`                     |                    $\\\\div$                     |\\n|                          | Subset                           |                  `\\\\subseteq`                   |                  $\\\\subseteq$                  |\\n|                          | Superset                         |                  `\\\\supseteq`                   |                  $\\\\supseteq$                  |\\n|                          | Implies                          |                   `\\\\implies`                   |                  $\\\\implies$                   |\\n|                          | Implied By                       |                  `\\\\impliedby`                  |                 $\\\\impliedby$                  |\\n|                          | If and Only If                   |                     `\\\\iff`                     |                    $\\\\iff$                     |\\n|                          | Intersection                     |                     `\\\\cap`                     |                    $\\\\cap$                     |\\n|                          | Union                            |                     `\\\\cup`                     |                    $\\\\cup$                     |\\n|                          | Logical AND                      |                    `\\\\land`                     |                    $\\\\land$                    |\\n|                          | Logical OR                       |                     `\\\\lor`                     |                    $\\\\lor$                     |\\n|                          | Logical NOT                      |                     `\\\\neg`                     |                    $\\\\neg$                     |\\n|                          | Not Equal To                     |                     `\\\\neq`                     |                    $\\\\neq$                     |\\n|                          | Approximately Equal To           |                   `\\\\approx`                    |                   $\\\\approx$                   |\\n| **Special Symbols**      | Greek Letter \u03b1                   |                    `\\\\alpha`                    |                   $\\\\alpha$                    |\\n|                          | Greek Letter \u03b2                   |                    `\\\\beta`                     |                    $\\\\beta$                    |\\n|                          | Greek Letter \u03b3                   |                    `\\\\gamma`                    |                   $\\\\gamma$                    |\\n|                          | Angle                            |                    `\\\\angle`                    |                   $\\\\angle$                    |\\n|                          | Triangle                         |                  `\\\\triangle`                   |                  $\\\\triangle$                  |\\n|                          | Square                           |                   `\\\\square`                    |                   $\\\\square$                   |\\n|                          | Real Part                        |                     `\\\\Re`                      |                     $\\\\Re$                     |\\n|                          | Imaginary Part                   |                     `\\\\Im`                      |                     $\\\\Im$                     |\\n|                          | Imaginary Unit i                 |                    `\\\\imath`                    |                   $\\\\imath$                    |\\n|                          | Imaginary Unit j                 |                    `\\\\jmath`                    |                   $\\\\jmath$                    |\\n|                          | Greek Letter \u03b5                   |                   `\\\\epsilon`                   |                  $\\\\epsilon$                   |\\n|                          | Greek Letter \u03c6                   |                     `\\\\phi`                     |                    $\\\\phi$                     |\\n|                          | Variant Greek Letter \u03c6           |                   `\\\\varphi`                    |                   $\\\\varphi$                   |\\n| **Matrices and Vectors** | Matrix (parentheses)             | `\\\\begin{pmatrix} a & b \\\\\\\\ c & d \\\\end{pmatrix}` | $\\\\begin{pmatrix} a & b\\\\\\\\ c & d \\\\end{pmatrix}$ |\\n|                          | Matrix (no parentheses)          |  `\\\\begin{matrix} x & y \\\\\\\\ z & w \\\\end{matrix}`  | $\\\\begin{matrix} x & y \\\\\\\\ z & w \\\\end{matrix}$  |\\n|                          | Vector                           |                   `\\\\vec{v}`                    |                   $\\\\vec{v}$                   |\\n|                          | Identity Matrix                  |                  `\\\\mathbf{I}`                  |                 $\\\\mathbf{I}$                  |\\n|                          | Zero Matrix                      |                  `\\\\mathbf{0}`                  |                 $\\\\mathbf{0}$                  |\\n| **Miscellaneous**        | Angle                            |                    `\\\\angle`                    |                   $\\\\angle$                    |\\n|                          | Triangle                         |                  `\\\\triangle`                   |                  $\\\\triangle$                  |\\n|                          | Square                           |                   `\\\\square`                    |                   $\\\\square$                   |\\n|                          | Space                            |                    `\\\\quad`                     |                    $\\\\quad$                    |\\n|                          | Proportional To                  |                   `\\\\propto`                    |                   $\\\\propto$                   |\\n|                          | Because                          |                   `\\\\because`                   |                  $\\\\because$                   |\\n|                          | Therefore                        |                  `\\\\therefore`                  |                 $\\\\therefore$                  |\\n|                          | Integer Set                      |                  `\\\\mathbb{Z}`                  |                 $\\\\mathbb{Z}$                  |\\n|                          | Probability Set                  |                  `\\\\mathbb{P}`                  |                 $\\\\mathbb{P}$                  |\\n|                          | Real Number Set                  |                  `\\\\mathbb{R}`                  |                 $\\\\mathbb{R}$                  |\\n|                          | Complex Number Set               |                  `\\\\mathbb{C}`                  |                 $\\\\mathbb{C}$                  |\\n|                          | Imaginary Space                  |                     `\\\\Im`                      |                     $\\\\Im$                     |\\n|                          | Real Space                       |                     `\\\\Re`                      |                     $\\\\Re$                     |\\n|                          | Empty Set                        |                  `\\\\emptyset`                   |                  $\\\\emptyset$                  |\\n|                          | Empty Set (nicer)                |                 `\\\\varnothing`                  |                 $\\\\varnothing$                 |\\n|                          | Belongs To                       |                     `\\\\in`                      |                     $\\\\in$                     |\\n|                          | Not Belongs To                   |                   `\\\\not\\\\in`                    |                   $\\\\not\\\\in$                   |\\n|                          | Greek Letter \u03c7                   |                     `\\\\chi`                     |                    $\\\\chi$                     |\\n|                          | Counterclockwise Circle Arrow    |               `\\\\circlearrowleft`               |              $\\\\circlearrowleft$               |\\n|                          | Clockwise Circle Arrow           |              `\\\\circlearrowright`               |              $\\\\circlearrowright$              |\\n|                          | Counterclockwise Curved Arrow    |               `\\\\curvearrowleft`                |               $\\\\curvearrowleft$               |\\n|                          | Clockwise Curved Arrow           |               `\\\\curvearrowright`               |              $\\\\curvearrowright$               |\\n|                          | Planck Constant                  |                    `\\\\hbar`                     |                    $\\\\hbar$                    |\\n|                          | Natural Logarithm                |                     `\\\\ln`                      |                     $\\\\ln$                     |\\n|                          | Constant \u03c0                       |                     `\\\\pi`                      |                     $\\\\pi$                     |\\n|                          | Set Symbol $\\\\cup$                |                     `\\\\cup`                     |                    $\\\\cup$                     |\\n|                          | Set Symbol $\\\\cap$                |                     `\\\\cap`                     |                    $\\\\cap$                     |\\n| **Formatting**           | Function Color                   |         `f(x) = a{\\\\color{red}{x}} + b`         |        $f(x) = a{\\\\color{red}{x}} + b$         |\\n|                          | Colored Box                      |        `\\\\colorbox{#eeeeee}{Color Box}`         |        $\\\\colorbox{#eeeeee}{Color Box}$        |\\n|                          | Calligraphic Font                |            `{\\\\cal ABCDE12345abced}`            |           ${\\\\cal ABCDE12345abced}$            |\\n|                          | Boxed Text                       |              `\\\\fbox{boxed text}`               |              $\\\\fbox{boxed text}$              |\\n|                          | Display Style Boxed Text         |             `\\\\boxed{boxed\\\\ text}`              |             $\\\\boxed{boxed\\\\ text}$             |\\n|                          | Fraktur Font                     |           `{\\\\frak ABCDE12345abcde}`            |           ${\\\\frak ABCDE12345abcde}$           |\\n|                          | Italic                           |        `{\\\\it abefg12345}\\\\ abcdefg12345`        |       ${\\\\it abefg12345}\\\\ abcdefg12345$        |\\n|                          | Minimize                         |               `\\\\min\\\\limits_{n}`                |               $\\\\min\\\\limits_{n}$               |\\n|                          | Bold Greek Letter                |             `\\\\boldsymbol{\\\\alpha}`              |             $\\\\boldsymbol{\\\\alpha}$             |"},{"id":"impl-normalized-levenshtein-similarity","metadata":{"permalink":"/en/blog/impl-normalized-levenshtein-similarity","source":"@site/i18n/en/docusaurus-plugin-content-blog/2024/05-16-impl-normalized-levenshtein-similarity/index.md","title":"Implementing ANLS","description":"Average Normalized Levenshtein Similarity","date":"2024-05-16T00:00:00.000Z","tags":[{"inline":true,"label":"python","permalink":"/en/blog/tags/python"},{"inline":true,"label":"pytorch","permalink":"/en/blog/tags/pytorch"},{"inline":true,"label":"metric","permalink":"/en/blog/tags/metric"},{"inline":true,"label":"anls","permalink":"/en/blog/tags/anls"}],"readingTime":5.7,"hasTruncateMarker":false,"authors":[{"name":"Zephyr","title":"Engineer","url":"https://github.com/zephyr-sh","imageURL":"https://github.com/zephyr-sh.png","key":"Zephyr"}],"frontMatter":{"slug":"impl-normalized-levenshtein-similarity","title":"Implementing ANLS","authors":"Zephyr","image":"/en/img/2024/0516.webp","tags":["python","pytorch","metric","anls"],"description":"Average Normalized Levenshtein Similarity"},"unlisted":false,"prevItem":{"title":"LaTeX Syntax Quick Reference","permalink":"/en/blog/latex-usage"},"nextItem":{"title":"Equivalent Basic Commands between Python and JS","permalink":"/en/blog/python-js-basic-command-equivalents-en"}},"content":"<figure>\\n![title](/img/2024/0516.webp)\\n<figcaption>Cover Image: Automatically generated by GPT-4 after reading this article</figcaption>\\n</figure>\\n\\n---\\n\\nAverage Normalized Levenshtein Similarity, abbreviated as ANLS, is a metric used to compute the similarity between two strings.\\n\\nIn natural language processing (NLP), it\'s often necessary to compare the similarity of two strings.\\n\\nLevenshtein Similarity is a common measure that assesses the \\"edit distance\\" between two strings, which is the minimum number of single-character edits (insertions, deletions, or substitutions) required to change one string into the other. However, Levenshtein Similarity itself isn\'t intuitive as it depends on the lengths of the strings.\\n\\nTo address this issue, we can normalize Levenshtein Similarity to the [0, 1] range, making it easier to understand and compare the similarity between different strings, known as Normalized Levenshtein Similarity (NLS).\\n\\nAs NLS refers to the similarity between sets of strings, we can further extend it to ANLS, which computes the average similarity among multiple sets of strings, thereby quantifying the performance of a model.\\n\\nAnd then...\\n\\nI always struggle to find implementations that I like, so I decided to write one myself.\\n\\n## Import Necessary Libraries\\n\\nFirst, we need to import some necessary libraries, especially the `EditDistance` implemented by `torchmetrics`:\\n\\n```python\\nfrom typing import Any, Literal, Optional, Sequence, Union\\n\\nimport torch\\nfrom torch import Tensor\\nfrom torchmetrics.metric import Metric\\nfrom torchmetrics.text import EditDistance\\nfrom torchmetrics.utilities.data import dim_zero_cat\\n```\\n\\nSince `EditDistance` can already compute the Levenshtein distance, we can directly use it to calculate the edit distance between two strings. However, `EditDistance` doesn\'t provide normalization functionality, so we need to implement this part ourselves.\\n\\n## Implement Normalization Functionality\\n\\nHere, we inherit the interface of `torchmetrics.metric.Metric`, so we need to implement the `update` and `compute` methods:\\n\\n```python\\nclass NormalizedLevenshteinSimilarity(Metric):\\n\\n    def __init__(\\n        self,\\n        substitution_cost: int = 1,\\n        reduction: Optional[Literal[\\"mean\\", \\"sum\\", \\"none\\"]] = \\"mean\\",\\n        **kwargs: Any\\n    ) -> None:\\n        super().__init__(**kwargs)\\n        self.edit_distance = EditDistance(\\n            substitution_cost=substitution_cost,\\n            reduction=None  # Set to None to get distances for all string pairs\\n        )\\n\\n        # ...\\n```\\n\\nHere are a few key points:\\n\\n1. Ensure that the input `preds` and `target` are lists of strings, otherwise the function will calculate on a character level.\\n2. Calculate the maximum length of each string, so that we can perform normalization.\\n\\n```python\\ndef update(self, preds: Union[str, Sequence[str]], target: Union[str, Sequence[str]]) -> None:\\n    \\"\\"\\"Update state with predictions and targets.\\"\\"\\"\\n\\n    if isinstance(preds, str):\\n        preds = [preds]\\n    if isinstance(target, str):\\n        target = [target]\\n\\n    distances = self.edit_distance(preds, target)\\n    max_lengths = torch.tensor([\\n        max(len(p), len(t))\\n        for p, t in zip(preds, target)\\n    ], dtype=torch.float)\\n\\n    ratio = torch.where(\\n        max_lengths == 0,\\n        torch.zeros_like(distances).float(),\\n        distances.float() / max_lengths\\n    )\\n\\n    nls_values = 1 - ratio\\n\\n    # ...\\n```\\n\\n## Implement the `reduction` Parameter\\n\\nWe also need to accommodate the `reduction` parameter, where if we specify `mean`, it will be the common ANLS score.\\n\\nIn addition to the usual `mean`, we can also use `sum` or `none` to fulfill different needs.\\n\\n```python\\ndef _compute(\\n    self,\\n    nls_score: Tensor,\\n    num_elements: Union[Tensor, int],\\n) -> Tensor:\\n    \\"\\"\\"Compute the ANLS over state.\\"\\"\\"\\n    if nls_score.numel() == 0:\\n        return torch.tensor(0, dtype=torch.int32)\\n    if self.reduction == \\"mean\\":\\n        return nls_score.sum() / num_elements\\n    if self.reduction == \\"sum\\":\\n        return nls_score.sum()\\n    if self.reduction is None or self.reduction == \\"none\\":\\n        return nls_score\\n\\ndef compute(self) -> torch.Tensor:\\n    \\"\\"\\"Compute the NLS over state.\\"\\"\\"\\n    if self.reduction == \\"none\\" or self.reduction is None:\\n        return self._compute(dim_zero_cat(self.nls_values_list), 1)\\n    return self._compute(self.nls_score, self.num_elements)\\n```\\n\\nHere, it\'s noteworthy that when we specify `reduction` as `none`, we need to return all NLS values instead of computing the average. In this case, I referenced the implementation of `torchmetrics.text.EditDistance`, using `dim_zero_cat` to concatenate values in the list together, ensuring that the return value is a `Tensor`.\\n\\n## Complete Implementation\\n\\n:::info\\nWe have synchronized the code to [**DocsaidKit/.../normalized_levenshtein_similarity.py**](https://github.com/DocsaidLab/DocsaidKit/blob/main/docsaidkit/torch/metrics/normalized_levenshtein_similarity.py)\\n:::\\n\\nThe complete implementation is as follows:\\n\\n```python\\nfrom typing import Any, Literal, Optional, Sequence, Union\\n\\nimport torch\\nfrom torch import Tensor\\nfrom torchmetrics.metric import Metric\\nfrom torchmetrics.text import EditDistance\\nfrom torchmetrics.utilities.data import dim_zero_cat\\n\\n\\nclass NormalizedLevenshteinSimilarity(Metric):\\n    \\"\\"\\"\\n    Normalized Levenshtein Similarity (NLS) is a metric that computes the\\n    normalized Levenshtein similarity between two sequences.\\n    This metric is calculated as 1 - (levenshtein_distance / max_length),\\n    where `levenshtein_distance` is the Levenshtein distance between the two\\n    sequences and `max_length` is the maximum length of the two sequences.\\n\\n    NLS aims to provide a similarity measure for character sequences\\n    (such as text), making it useful in areas like text similarity analysis,\\n    Optical Character Recognition (OCR), and Natural Language Processing (NLP).\\n\\n    This class inherits from `Metric` and uses the `EditDistance` class to\\n    compute the Levenshtein distance.\\n\\n    Inputs to the ``update`` and ``compute`` methods are as follows:\\n\\n    - ``preds`` (:class:`~Union[str, Sequence[str]]`):\\n        Predicted text sequences or a collection of sequences.\\n    - ``target`` (:class:`~Union[str, Sequence[str]]`):\\n        Target text sequences or a collection of sequences.\\n\\n    Output from the ``compute`` method is as follows:\\n\\n    - ``nls`` (:class:`~torch.Tensor`): A tensor containing the NLS value.\\n        Returns 0.0 when there are no samples; otherwise, it returns the NLS.\\n\\n    Args:\\n        substitution_cost:\\n            The cost of substituting one character for another. Default is 1.\\n        reduction:\\n            Method to aggregate metric scores.\\n            Default is \'mean\', options are \'sum\' or None.\\n\\n            - ``\'mean\'``: takes the mean over samples, which is ANLS.\\n            - ``\'sum\'``: takes the sum over samples\\n            - ``None`` or ``\'none\'``: returns the score per sample\\n\\n        kwargs: Additional keyword arguments.\\n\\n    Example::\\n        Multiple strings example:\\n\\n        >>> metric = NormalizedLevenshteinSimilarity(reduction=None)\\n        >>> preds = [\\"rain\\", \\"lnaguaeg\\"]\\n        >>> target = [\\"shine\\", \\"language\\"]\\n        >>> metric(preds, target)\\n        tensor([0.4000, 0.5000])\\n        >>> metric = NormalizedLevenshteinSimilarity(reduction=\\"mean\\")\\n        >>> metric(preds, target)\\n        tensor(0.4500)\\n    \\"\\"\\"\\n\\n    def __init__(\\n        self,\\n        substitution_cost: int = 1,\\n        reduction: Optional[Literal[\\"mean\\", \\"sum\\", \\"none\\"]] = \\"mean\\",\\n        **kwargs: Any\\n    ) -> None:\\n        super().__init__(**kwargs)\\n        self.edit_distance = EditDistance(\\n            substitution_cost=substitution_cost,\\n            reduction=None  # Set to None to get distances for all string pairs\\n        )\\n\\n        allowed_reduction = (None, \\"mean\\", \\"sum\\", \\"none\\")\\n        if reduction not in allowed_reduction:\\n            raise ValueError(\\n                f\\"Expected argument `reduction` to be one of {allowed_reduction}, but got {reduction}\\")\\n        self.reduction = reduction\\n\\n        if self.reduction == \\"none\\" or self.reduction is None:\\n            self.add_state(\\n                \\"nls_values_list\\",\\n                default=[],\\n                dist_reduce_fx=\\"cat\\"\\n            )\\n        else:\\n            self.add_state(\\n                \\"nls_score\\",\\n                default=torch.tensor(0.0),\\n                dist_reduce_fx=\\"sum\\"\\n            )\\n            self.add_state(\\n                \\"num_elements\\",\\n                default=torch.tensor(0),\\n                dist_reduce_fx=\\"sum\\"\\n            )\\n\\n    def update(self, preds: Union[str, Sequence[str]], target: Union[str, Sequence[str]]) -> None:\\n        \\"\\"\\"Update state with predictions and targets.\\"\\"\\"\\n        if isinstance(preds, str):\\n            preds = [preds]\\n        if isinstance(target, str):\\n            target = [target]\\n\\n        distances = self.edit_distance(preds, target)\\n        max_lengths = torch.tensor([\\n            max(len(p), len(t))\\n            for p, t in zip(preds, target)\\n        ], dtype=torch.float)\\n\\n        ratio = torch.where(\\n            max_lengths == 0,\\n            torch.zeros_like(distances).float(),\\n            distances.float() / max_lengths\\n        )\\n\\n        nls_values = 1 - ratio\\n\\n        if self.reduction == \\"none\\" or self.reduction is None:\\n            self.nls_values_list.append(nls_values)\\n        else:\\n            self.nls_score += nls_values.sum()\\n            self.num_elements += nls_values.shape[0]\\n\\n    def _compute(\\n        self,\\n        nls_score: Tensor,\\n        num_elements: Union[Tensor, int],\\n    ) -> Tensor:\\n        \\"\\"\\"Compute the ANLS over state.\\"\\"\\"\\n        if nls_score.numel() == 0:\\n            return torch.tensor(0, dtype=torch.int32)\\n        if self.reduction == \\"mean\\":\\n            return nls_score.sum() / num_elements\\n        if self.reduction == \\"sum\\":\\n            return nls_score.sum()\\n        if self.reduction is None or self.reduction == \\"none\\":\\n            return nls_score\\n\\n    def compute(self) -> torch.Tensor:\\n        \\"\\"\\"Compute the NLS over state.\\"\\"\\"\\n        if self.reduction == \\"none\\" or self.reduction is None:\\n            return self._compute(dim_zero_cat(self.nls_values_list), 1)\\n        return self._compute(self.nls_score, self.num_elements)\\n\\n\\nif __name__ == \\"__main__\\":\\n    anls = NormalizedLevenshteinSimilarity(reduction=\'mean\')\\n    preds = [\\"rain\\", \\"lnaguaeg\\"]\\n    target = [\\"shine\\", \\"language\\"]\\n    print(anls(preds, target))\\n```\\n\\n## References\\n\\n- [**torchmetrics.text.EditDistance**](https://lightning.ai/docs/torchmetrics/stable/text/edit.html)"},{"id":"python-js-basic-command-equivalents-en","metadata":{"permalink":"/en/blog/python-js-basic-command-equivalents-en","source":"@site/i18n/en/docusaurus-plugin-content-blog/2024/04-07-cmd-js-vs-python/index.md","title":"Equivalent Basic Commands between Python and JS","description":"Mapping basic cmds between Py and JS.","date":"2024-04-07T00:00:00.000Z","tags":[{"inline":true,"label":"npm","permalink":"/en/blog/tags/npm"},{"inline":true,"label":"npx","permalink":"/en/blog/tags/npx"},{"inline":true,"label":"nvm","permalink":"/en/blog/tags/nvm"},{"inline":true,"label":"pip","permalink":"/en/blog/tags/pip"},{"inline":true,"label":"pyenv","permalink":"/en/blog/tags/pyenv"}],"readingTime":2.87,"hasTruncateMarker":false,"authors":[{"name":"Zephyr","title":"Engineer","url":"https://github.com/zephyr-sh","imageURL":"https://github.com/zephyr-sh.png","key":"Zephyr"}],"frontMatter":{"slug":"python-js-basic-command-equivalents-en","title":"Equivalent Basic Commands between Python and JS","authors":"Zephyr","image":"/en/img/2024/0407.webp","tags":["npm","npx","nvm","pip","pyenv"],"description":"Mapping basic cmds between Py and JS."},"unlisted":false,"prevItem":{"title":"Implementing ANLS","permalink":"/en/blog/impl-normalized-levenshtein-similarity"},"nextItem":{"title":"Common VSCode Configuration Settings","permalink":"/en/blog/vscode-settings"}},"content":"<figure>\\n![title](/img/2024/0407.webp)\\n<figcaption>Cover Image: Automatically generated by GPT-4 after reading the article</figcaption>\\n</figure>\\n\\n---\\n\\nPython has been my go-to language, with commonly used commands like `pip` and `python -m`. However, delving into JavaScript recently, I\'ve encountered analogous functionalities through commands like `npm`, `npx`, and `nvm`.\\n\\nI\'m interested in aligning these commands, hoping it might ease the transition into new skills.\\n\\n## npm vs. pip\\n\\n:::tip\\n**They are both: Package Managers**\\n:::\\n\\nnpm (Node Package Manager) and pip essentially serve the same purpose: they are package managers for Node.js and Python respectively. Package managers are crucial for sharing, reusing, and managing repositories or modules.\\n\\n- **Installing Packages**: In npm, we use the `npm install <package-name>` command to add a library to our project. Similarly, pip achieves the same goal through `pip install <package-name>`.\\n- **Version Control**: npm tracks package versions through the `package.json` file, ensuring that every member of a development team uses the same version of a library. Pip relies on `requirements.txt` or newer tools like pipenv and poetry to achieve similar functionality.\\n- **Package Publishing**: npm enables developers to publish their packages to the npm registry for use by the global Node.js community. Pip provides this capability through PyPI (Python Package Index), allowing the sharing of Python packages.\\n\\n## npx vs. -m Flag\\n\\n:::tip\\n**They are both: Tools for Direct Command Execution**\\n:::\\n\\nnpx (npm package runner) and Python\'s `-m` flag address the need to execute package commands directly in the terminal without global installation.\\n\\n- **Direct Execution**: npx allows you to directly execute any package installed in the project\'s local `node_modules` folder (or fetch it from the npm registry if not installed), while Python achieves similar results through the `-m` flag, allowing direct execution of modules, such as starting a simple HTTP server with `python -m http.server`.\\n\\n:::note\\n**npm run vs. npx run**\\n\\n- npm run: In JavaScript projects, npm run is used to execute scripts defined in the package.json file. This is a common approach to perform project-specific tasks like testing, building, or deploying.\\n- npx run: While npx is typically used to execute single commands or packages, it primarily serves to execute packages not globally installed. npx run is not a standard command; common usage of npx doesn\'t include the keyword \\"run\\" but directly follows with the package name or command.\\n  :::\\n\\n## nvm, pyenv, and conda\\n\\n:::tip\\n**They are all: Version Management Tools**\\n:::\\n\\nSwitching between different versions of Node.js or Python can be cumbersome without proper tools. nvm (Node Version Manager), pyenv, and conda provide solutions to this problem, allowing developers to install and switch between multiple versions of Node.js or Python on the same machine.\\n\\n- **Version Switching**: nvm uses commands like `nvm use <version>` to switch Node.js versions. Pyenv and conda offer similar functionalities for Python; pyenv switches versions through `pyenv global <version>` or `pyenv local <version>`, while conda uses `conda activate <environment-name>` to switch to different environments, each capable of having different Python versions and packages.\\n- **Multi-Version Management**: These tools facilitate managing multiple versions on the same machine, addressing potential conflicts due to version discrepancies.\\n\\n## Conclusion\\n\\nWhen learning a new language or framework, I always find it helpful to map it to tools I\'m already familiar with. This practice accelerates my understanding of the new tool\'s functionalities and usage, aiding in a quicker grasp.\\n\\nWhile these commands may not align perfectly, they do share some similarities, hopefully making the transition a bit smoother."},{"id":"vscode-settings","metadata":{"permalink":"/en/blog/vscode-settings","source":"@site/i18n/en/docusaurus-plugin-content-blog/2024/03-31-vscode-settings/index.md","title":"Common VSCode Configuration Settings","description":"VSCode settings for future reference.","date":"2024-03-31T00:00:00.000Z","tags":[{"inline":true,"label":"vscode","permalink":"/en/blog/tags/vscode"},{"inline":true,"label":"settings","permalink":"/en/blog/tags/settings"}],"readingTime":2.765,"hasTruncateMarker":false,"authors":[{"name":"Zephyr","title":"Engineer","url":"https://github.com/zephyr-sh","imageURL":"https://github.com/zephyr-sh.png","key":"Zephyr"}],"frontMatter":{"slug":"vscode-settings","title":"Common VSCode Configuration Settings","authors":"Zephyr","tags":["vscode","settings"],"image":"/en/img/2024/0331.webp","description":"VSCode settings for future reference."},"unlisted":false,"prevItem":{"title":"Equivalent Basic Commands between Python and JS","permalink":"/en/blog/python-js-basic-command-equivalents-en"},"nextItem":{"title":"Setting Up Nextcloud Guide","permalink":"/en/blog/setting-up-nextcloud"}},"content":"<figure>\\n![title](/img/2024/0331.webp)\\n<figcaption>Cover Image: Automatically generated by GPT-4 after reading this article.</figcaption>\\n</figure>\\n\\n---\\n\\nNot long ago, my VSCode settings disappeared for some unknown reason. It took me another hour to set them up again.\\n\\nHowever, it gave me the opportunity to review my settings and document some commonly used configurations.\\n\\n## Configuration Settings\\n\\n```json\\n{\\n  \\"editor.fontFamily\\": \\"Fira Code, MesloLGS NF\\",\\n  \\"editor.fontLigatures\\": true,\\n  \\"files.associations\\": {\\n    \\"Dockerfile_base\\": \\"dockerfile\\"\\n  },\\n  \\"markdown.preview.fontSize\\": 15,\\n  \\"debug.console.fontSize\\": 14,\\n  \\"explorer.confirmDragAndDrop\\": true,\\n  \\"editor.minimap.enabled\\": true,\\n  \\"editor.minimap.maxColumn\\": 80,\\n  \\"editor.smoothScrolling\\": true,\\n  \\"editor.rulers\\": [80, 120],\\n  \\"workbench.colorCustomizations\\": {\\n    \\"editorRuler.foreground\\": \\"#ff4081\\",\\n    \\"minimap.background\\": \\"#00000050\\",\\n    \\"editor.background\\": \\"#1e1e1e\\",\\n    \\"editor.foreground\\": \\"#d4d4d4\\"\\n  },\\n  \\"terminal.integrated.fontFamily\\": \\"Fira Code, MesloLGS NF\\",\\n  \\"files.trimTrailingWhitespace\\": true,\\n  \\"files.trimFinalNewlines\\": true,\\n  \\"diffEditor.ignoreTrimWhitespace\\": true,\\n  \\"python.terminal.activateEnvironment\\": true,\\n  \\"git.ignoreLegacyWarning\\": true,\\n  \\"git.autofetch\\": true,\\n  \\"editor.largeFileOptimizations\\": false,\\n  \\"editor.mouseWheelZoom\\": true,\\n  \\"editor.codeActionsOnSave\\": {\\n    \\"source.organizeImports\\": true,\\n    \\"source.fixAll\\": true\\n  },\\n  \\"editor.formatOnSave\\": true,\\n  \\"workbench.editorAssociations\\": {\\n    \\"*.ipynb\\": \\"jupyter-notebook\\"\\n  },\\n  \\"debug.onTaskErrors\\": \\"abort\\",\\n  \\"explorer.confirmDelete\\": true,\\n  \\"terminal.integrated.copyOnSelection\\": true,\\n  \\"terminal.integrated.cursorBlinking\\": true,\\n  \\"terminal.integrated.cursorStyle\\": \\"line\\",\\n  \\"remote.downloadExtensionsLocally\\": true,\\n  \\"terminal.integrated.scrollback\\": 10000,\\n  \\"editor.cursorStyle\\": \\"line\\",\\n  \\"editor.insertSpaces\\": true,\\n  \\"editor.lineNumbers\\": \\"on\\",\\n  \\"editor.wordWrap\\": \\"on\\",\\n  \\"workbench.editor.wrapTabs\\": false,\\n  \\"files.watcherExclude\\": {\\n    \\"**/.git/objects/**\\": true,\\n    \\"**/.git/subtree-cache/**\\": true,\\n    \\"**/node_modules/*/**\\": true\\n  },\\n  \\"notebook.cellToolbarLocation\\": {\\n    \\"default\\": \\"right\\",\\n    \\"jupyter-notebook\\": \\"left\\"\\n  },\\n  \\"github.copilot.editor.enableAutoCompletions\\": true,\\n  \\"github.copilot.enable\\": {\\n    \\"*\\": true,\\n    \\"plaintext\\": false,\\n    \\"markdown\\": true,\\n    \\"scminput\\": false\\n  },\\n  \\"workbench.colorTheme\\": \\"Monokai Pro\\",\\n  \\"editor.multiCursorModifier\\": \\"ctrlCmd\\",\\n  \\"editor.wordWrapColumn\\": 120,\\n  \\"files.autoSave\\": \\"onFocusChange\\"\\n}\\n```\\n\\n## Parameter Descriptions\\n\\n- `editor.fontFamily`: Sets the font family; here, Fira Code and MesloLGS NF fonts are used.\\n- `editor.fontLigatures`: Sets whether ligatures in the font are enabled.\\n- `files.associations`: Sets file associations; here, Dockerfile_base is associated with dockerfile.\\n- `markdown.preview.fontSize`: Sets the font size for markdown preview.\\n- `debug.console.fontSize`: Sets the font size for the debug console.\\n- `explorer.confirmDragAndDrop`: Sets whether drag and drop confirmation is enabled.\\n- `editor.minimap.enabled`: Sets whether the minimap is enabled.\\n- `editor.minimap.maxColumn`: Sets the maximum number of columns in the minimap.\\n- `editor.smoothScrolling`: Sets whether smooth scrolling is enabled.\\n- `editor.rulers`: Sets the column numbers for indentation guides.\\n- `workbench.colorCustomizations`: Sets color customizations.\\n- `terminal.integrated.fontFamily`: Sets the terminal font family.\\n- `files.trimTrailingWhitespace`: Sets whether trailing whitespace is trimmed.\\n- `files.trimFinalNewlines`: Sets whether final newlines are trimmed.\\n- `diffEditor.ignoreTrimWhitespace`: Sets whether whitespace in diffs is ignored.\\n- `python.terminal.activateEnvironment`: Sets whether the Python environment is activated.\\n- `git.ignoreLegacyWarning`: Sets whether Git warnings are ignored.\\n- `git.autofetch`: Sets whether autofetch is enabled.\\n- `editor.largeFileOptimizations`: Sets whether optimizations for large files are enabled.\\n- `editor.mouseWheelZoom`: Sets whether mouse wheel zoom is enabled.\\n- `editor.codeActionsOnSave`: Sets code actions on save.\\n- `editor.formatOnSave`: Sets whether formatting is applied on save.\\n- `workbench.editorAssociations`: Sets editor associations.\\n- `debug.onTaskErrors`: Sets action on task errors.\\n- `explorer.confirmDelete`: Sets whether delete confirmation is enabled.\\n- `terminal.integrated.copyOnSelection`: Sets whether copying is done on selection.\\n- `terminal.integrated.cursorBlinking`: Sets terminal cursor blinking.\\n- `terminal.integrated.cursorStyle`: Sets terminal cursor style.\\n- `remote.downloadExtensionsLocally`: Sets whether extensions are downloaded locally.\\n- `terminal.integrated.scrollback`: Sets terminal scrollback buffer size.\\n- `editor.cursorStyle`: Sets cursor style.\\n- `editor.insertSpaces`: Sets whether spaces are inserted.\\n- `editor.lineNumbers`: Sets whether line numbers are displayed.\\n- `editor.wordWrap`: Sets whether word wrap is enabled.\\n- `workbench.editor.wrapTabs`: Sets whether tab wrapping is enabled.\\n- `files.watcherExclude`: Sets file watcher exclusion patterns.\\n- `notebook.cellToolbarLocation`: Sets notebook cell toolbar location.\\n- `github.copilot.editor.enableAutoCompletions`: Sets whether auto completions are enabled in GitHub Copilot.\\n- `github.copilot.enable`: Sets whether GitHub Copilot is enabled.\\n- `workbench.colorTheme`: Sets the color theme.\\n- `editor.multiCursorModifier`: Sets the multi-cursor modifier.\\n- `editor.wordWrapColumn`: Sets the column for word wrapping.\\n- `files.autoSave`: Sets auto-save behavior.\\n\\n## Conclusion\\n\\nAbove are my commonly used VSCode parameter settings."},{"id":"setting-up-nextcloud","metadata":{"permalink":"/en/blog/setting-up-nextcloud","source":"@site/i18n/en/docusaurus-plugin-content-blog/2024/03-04-setup-nextcloud/index.md","title":"Setting Up Nextcloud Guide","description":"Setting up Nextcloud on Ubuntu 22.04.","date":"2024-03-04T00:00:00.000Z","tags":[{"inline":true,"label":"Nextcloud","permalink":"/en/blog/tags/nextcloud"},{"inline":true,"label":"Docker","permalink":"/en/blog/tags/docker"},{"inline":true,"label":"Ubuntu","permalink":"/en/blog/tags/ubuntu"}],"readingTime":3.955,"hasTruncateMarker":false,"authors":[{"name":"Zephyr","title":"Engineer","url":"https://github.com/zephyr-sh","imageURL":"https://github.com/zephyr-sh.png","key":"Zephyr"}],"frontMatter":{"slug":"setting-up-nextcloud","title":"Setting Up Nextcloud Guide","authors":"Zephyr","tags":["Nextcloud","Docker","Ubuntu"],"image":"/en/img/2024/0304.webp","description":"Setting up Nextcloud on Ubuntu 22.04."},"unlisted":false,"prevItem":{"title":"Common VSCode Configuration Settings","permalink":"/en/blog/vscode-settings"},"nextItem":{"title":"The Pitfall of Lists in PyTorch","permalink":"/en/blog/pytorch-training-out-of-memory"}},"content":"<figure>\\n![title](/img/2024/0304.webp)\\n<figcaption>Cover Image: Automatically generated by GPT-4 after reading this article</figcaption>\\n</figure>\\n\\n---\\n\\nPreviously, I used to store files on Google Drive and would download them using the wget command.\\n\\nHowever, one day, the download command suddenly stopped working.\\n\\nSo, I decided to give Nextcloud a try.\\n\\nBelow, we\'ll go through the setup process based on Ubuntu 22.04.\\n\\n:::tip\\nBefore we begin, make sure you have a domain name ready and pointed to your server.\\n\\nIf you\'re unsure how to do this, simply Google search \\"how to use namecheap\\".\\n:::\\n\\n## Installing Nextcloud\\n\\n**First Question: Why use Nextcloud?**\\n\\n- I wanted a private cloud where I could store files without relying on someone else\'s servers.\\n\\n**Second Question: What\'s the difference between Nextcloud and Owncloud?**\\n\\n- Nextcloud forked from Owncloud, offering similar functionalities, but Nextcloud\'s development pace is faster.\\n\\n**Third Question: How do you install Nextcloud?**\\n\\n- This is a bit complex because Nextcloud offers various installation methods, each with its pros and cons.\\n- In this article, I only recommend using Docker for installation.\\n\\n## Configuring Nextcloud All-in-One\\n\\n- Reference the official documentation: [**Nextcloud All-in-One**](https://github.com/nextcloud/all-in-one)\\n\\nFirst, ensure you\'ve installed Docker and Docker Compose.\\n\\n:::tip\\nIf not, Google search \\"Docker & Docker Compose installation\\".\\n:::\\n\\nNext, create a NextCloud folder and write a Docker Compose configuration file `docker-compose.yml`:\\n\\n```bash\\nmkdir nextcloud\\nvim nextcloud/docker-compose.yml\\n```\\n\\nPaste the following content into `docker-compose.yml`:\\n\\n```yaml\\nservices:\\n  nextcloud-aio-mastercontainer:\\n    image: nextcloud/all-in-one:latest\\n    init: true\\n    restart: always\\n    container_name: nextcloud-aio-mastercontainer\\n    volumes:\\n      - nextcloud_aio_mastercontainer:/mnt/docker-aio-config\\n      - /var/run/docker.sock:/var/run/docker.sock:ro\\n    ports:\\n      - 80:80\\n      - 8080:8080\\n      - 8443:8443\\nvolumes:\\n  nextcloud_aio_mastercontainer:\\n    name: nextcloud_aio_mastercontainer\\n```\\n\\nHere\'s a brief explanation of the commands:\\n\\n- `--init`: Ensures no zombie processes are created.\\n- `--name nextcloud-aio-mastercontainer`: Sets the container name, which shouldn\'t be changed to avoid update failures.\\n- `--restart always`: Sets the container\'s restart policy to always accompany the Docker daemon.\\n- `--publish 80:80`, `--publish 8080:8080`, `--publish 8443:8443`: Publishes container ports to host ports.\\n- `--volume nextcloud_aio_mastercontainer:/mnt/docker-aio-config`: Sets where the mastercontainer files are stored.\\n- `--volume /var/run/docker.sock:/var/run/docker.sock:ro`: Mounts Docker socket into the container.\\n\\nFor more detailed configurations, refer to the official documentation: [compose.yaml](https://github.com/nextcloud/all-in-one/blob/main/compose.yaml)\\n\\n## Configuring System Services\\n\\n```bash\\nsudo vim /etc/systemd/system/nexcloud.service\\n```\\n\\nPaste the following content:\\n\\n```bash\\n[Unit]\\nDescription=NextCloud Docker Compose\\nRequires=docker.service\\nAfter=docker.service\\n\\n[Service]\\nWorkingDirectory=/home/[YourName]/nextcloud\\nExecStart=/usr/bin/docker compose up --remove-orphans\\nExecStop=/usr/bin/docker compose down\\nRestart=always\\n\\n[Install]\\nWantedBy=multi-user.target\\n```\\n\\n## Starting Nextcloud\\n\\n```bash\\nsudo systemctl enable nextcloud\\nsudo systemctl start nextcloud\\n```\\n\\n## Setting Up Nextcloud\\n\\n1. **Accessing Nextcloud AIO Interface**:\\n\\n   - After initial setup, access Nextcloud AIO interface via `https://ip.address.of.this.server:8080`, replacing `ip.address.of.this.server` with your server\'s IP address.\\n   - It\'s important to use the IP address instead of the domain name to avoid HTTP Strict Transport Security (HSTS) issues.\\n\\n2. **Using Self-Signed Certificates**:\\n\\n   - Accessing port 8080 might use a self-signed certificate, which browsers might flag as untrusted. You\'ll need to manually accept this certificate in your browser to proceed.\\n\\n3. **Automating Certificate Acquisition**:\\n\\n   - If your firewall or router has ports 80 and 8443 open or forwarded and you\'ve pointed a domain to your server, accessing `https://your-domain-that-points-to-this-server.tld:8443` will automatically fetch a trusted certificate from a CA, enhancing security and convenience.\\n\\n4. **Opening Ports for Nextcloud Talk**:\\n\\n   - To ensure Nextcloud Talk features like video calls and messages work, it\'s crucial to open ports 3478/TCP and 3478/UDP for the Talk container in your firewall or router. These ports are essential for handling NAT traversal, a technique allowing devices inside and outside a network to connect directly, crucial for real-time communication applications.\\n\\n- **Common Issues**:\\n\\n  - **Dynamic IP for Home Network**: If you have a dynamic IP, services like No-IP or obtaining a static IP from your ISP might be solutions.\\n  - **Alternative Installation Methods**: You can install Nextcloud directly, but be prepared to handle dependencies on your own.\\n  - **Can\'t Connect After Setup**: If your firewall isn\'t the issue, it might be your router blocking connections.\\n\\n---\\n\\nUpon entering the setup URL, you\'ll find yourself in what can be called an admin panel\'s admin panel.\\n\\n![login_1](./img/login_1.jpg)\\n\\nAt this point, you might panic, realizing you don\'t have a password!\\n\\nTo retrieve the password, use the following command:\\n\\n```bash\\nsudo grep password /var/lib/docker/volumes/nextcloud_aio_mastercontainer/_data/data/configuration.json\\n```\\n\\nAfter logging in, you\'ll encounter a setup screen:\\n\\n![login_2](./img/login_2.jpg)\\n\\nThis setup screen reflects my completed configuration. For your first login, enter your prepared domain. The system will prompt you to download additional docker images, which it will then automatically launch.\\n\\nOnce launched, you can start using Nextcloud.\\n\\n## Conclusion\\n\\nAfter completing the above steps, entering your domain in the address bar will lead you to a beautifully designed interface, your private cloud.\\n\\n![login_3](./img/login_3.jpg)\\n\\nThis interface offers numerous functionalities for file management and sharing. Additionally, you can download the Nextcloud app on your mobile device for file management on-the-go.\\n\\nWith Nextcloud, you no longer need to worry about Google Drive\'s storage limitations."},{"id":"pytorch-training-out-of-memory","metadata":{"permalink":"/en/blog/pytorch-training-out-of-memory","source":"@site/i18n/en/docusaurus-plugin-content-blog/2024/02-20-pytorch-training-oom/index.md","title":"The Pitfall of Lists in PyTorch","description":"Resolving PyTorch OOM Issues.","date":"2024-02-20T00:00:00.000Z","tags":[{"inline":true,"label":"PyTorch","permalink":"/en/blog/tags/py-torch"},{"inline":true,"label":"OOM","permalink":"/en/blog/tags/oom"}],"readingTime":1.725,"hasTruncateMarker":false,"authors":[{"name":"Zephyr","title":"Engineer","url":"https://github.com/zephyr-sh","imageURL":"https://github.com/zephyr-sh.png","key":"Zephyr"}],"frontMatter":{"slug":"pytorch-training-out-of-memory","title":"The Pitfall of Lists in PyTorch","authors":"Zephyr","tags":["PyTorch","OOM"],"image":"/en/img/2024/0220.webp","description":"Resolving PyTorch OOM Issues."},"unlisted":false,"prevItem":{"title":"Setting Up Nextcloud Guide","permalink":"/en/blog/setting-up-nextcloud"},"nextItem":{"title":"Convert PDF to Images using Python","permalink":"/en/blog/convert-pdf-to-images"}},"content":"<figure>\\n![title](/img/2024/0220.webp)\\n<figcaption>Cover Image: Automatically generated by GPT-4 after reading this article</figcaption>\\n</figure>\\n\\n---\\n\\nAs a seasoned PyTorch user, you should be well-versed in techniques for model training, parameter tuning, and optimization. How could you possibly still end up with an OOM (Out of Memory) error?\\n\\n---\\n\\n- Please note, we\'re talking about system memory here, not GPU memory.\\n- Of course, GPU memory is also a common concern, but we\'re not discussing that here.\\n\\n---\\n\\nWith OOM issues stemming from various causes, this time we\'ll focus on one commonly encountered by professionals:\\n\\n- You might be using a List structure!\\n\\nAfter investigation, we\'ve pinpointed the exact scenario where leaks occur.\\n\\nConsider the following code snippet:\\n\\n```python\\nfrom torch.utils.data import Dataset, DataLoader\\nimport numpy as np\\nimport torch\\n\\n\\nclass DataIter(Dataset):\\n\\n    def __init__(self):\\n        self.data_np = np.array([x for x in range(10000000)])\\n        self.data = [x for x in range(10000000)]\\n\\n    def __len__(self):\\n        return len(self.data)\\n\\n    def __getitem__(self, idx):\\n        data = self.data[idx]\\n        data = np.array([data], dtype=np.int64)\\n        return torch.tensor(data)\\n\\n\\ntrain_data = DataIter()\\ntrain_loader = DataLoader(train_data, batch_size=300, num_workers=18)\\n\\nfor i, item in enumerate(train_loader):\\n    if i % 1000 == 0:\\n        print(i)\\n```\\n\\n---\\n\\nCutting to the chase after examining this example:\\n\\nSee the `self.data` List? That\'s what leads to the OOM problem.\\n\\nWe attempted to find related information and it seems this isn\'t a PyTorch issue but rather a Python one.\\n\\nIn essence, refrain from using Lists; use NumPy or Tensors to store data, and you won\'t encounter OOM problems.\\n\\nAt least, that\'s effective in this example.\\n\\n---\\n\\n## I\'ve written code like this, why haven\'t I experienced any issues?\\n\\nThe world is a beautiful place until you encounter a large dataset.\\n\\nBased on my own testing, when the dataset is small, using Lists doesn\'t trigger memory leaks.\\n\\nMore specifically, with just over ten thousand data points, there\'s no issue; but with over a million, it blows up.\\n\\nSo, if your dataset isn\'t large, you might never encounter this problem.\\n\\nAs for the threshold of data size, I\'m unsure. I speculate it\'s a moment of interaction between Python or PyTorch that triggers the anomaly."},{"id":"convert-pdf-to-images","metadata":{"permalink":"/en/blog/convert-pdf-to-images","source":"@site/i18n/en/docusaurus-plugin-content-blog/2024/02-14-pdf2imgs/index.md","title":"Convert PDF to Images using Python","description":"Using open-source library pdf2image.","date":"2024-02-14T00:00:00.000Z","tags":[{"inline":true,"label":"Python","permalink":"/en/blog/tags/python"},{"inline":true,"label":"PDF","permalink":"/en/blog/tags/pdf"},{"inline":true,"label":"pdf2image","permalink":"/en/blog/tags/pdf-2-image"},{"inline":true,"label":"PIL","permalink":"/en/blog/tags/pil"}],"readingTime":1.64,"hasTruncateMarker":false,"authors":[{"name":"Zephyr","title":"Engineer","url":"https://github.com/zephyr-sh","imageURL":"https://github.com/zephyr-sh.png","key":"Zephyr"}],"frontMatter":{"slug":"convert-pdf-to-images","title":"Convert PDF to Images using Python","authors":"Zephyr","tags":["Python","PDF","pdf2image","PIL"],"image":"/en/img/2024/0214.webp","description":"Using open-source library pdf2image."},"unlisted":false,"prevItem":{"title":"The Pitfall of Lists in PyTorch","permalink":"/en/blog/pytorch-training-out-of-memory"},"nextItem":{"title":"Reading HEIC Images in Python","permalink":"/en/blog/opencv-imread"}},"content":"<figure>\\n![title](/img/2024/0214.webp)\\n<figcaption>Cover Image: Automatically generated by GPT-4 after reading this article.</figcaption>\\n</figure>\\n\\n---\\n\\nIn daily office tasks or academic endeavors, whether it\'s for conveniently sharing information or integrating document content into presentations, there\'s often a need to convert PDF files into image formats.\\n\\nHere, we recommend a handy Python module: [pdf2image](https://github.com/Belval/pdf2image/tree/master), which can convert PDF files into PIL images.\\n\\nThis tutorial will guide you on how to install and use this package.\\n\\n## Install Dependencies\\n\\n`pdf2image` relies on `pdftoppm` and `pdftocairo`, and installation varies slightly across different operating systems:\\n\\n- **Mac**: Install Poppler via Homebrew: `brew install poppler`.\\n- **Linux**: Most Linux distributions come pre-installed with `pdftoppm` and `pdftocairo`. If not, install `poppler-utils` via your package manager.\\n- **Using `conda`**: Poppler can be installed via `conda` on any platform: `conda install -c conda-forge poppler`, then proceed to install `pdf2image`.\\n\\n## Install `pdf2image`\\n\\nFirst, you need to install `pdf2image`. Enter the following command in your terminal to install:\\n\\n```shell\\npip install pdf2image\\n```\\n\\n## Convert PDF using `pdf2image`\\n\\nConverting PDF to images is straightforward:\\n\\n```python\\nfrom pdf2image import convert_from_path\\n\\nimages = convert_from_path(\'/path/to/your/pdf/file.pdf\')\\n```\\n\\nThis will convert each page of the PDF into a PIL image object and store them in the `images` list.\\n\\nYou can also convert PDF from binary data:\\n\\n```python\\nimages = convert_from_bytes(open(\'/path/to/your/pdf/file.pdf\', \'rb\').read())\\n```\\n\\n## Optional Parameters\\n\\n`pdf2image` provides extensive optional parameters, allowing you to customize DPI, output format, page ranges, etc. For example: use `dpi=300` to enhance the clarity of the output images, or use `first_page` and `last_page` to specify the conversion range.\\n\\nYou can refer to the [official documentation](https://github.com/Belval/pdf2image/tree/master) of `pdf2image`; or check our own modified [pdf2imgs](https://github.com/DocsaidLab/DocsaidKit/blob/eb8ac0a56779a75dcc951c683001e6129052cc5a/docsaidkit/vision/improc.py#L275) function for more usage examples.\\n\\n## Conclusion\\n\\n`pdf2image` is a powerful and easy-to-use tool that meets your needs for converting PDF to images. Whether it\'s for document processing, data organization, or content presentation, it provides an efficient solution.\\n\\nWe hope this tutorial helps you grasp the usage of `pdf2image` effortlessly, enhancing your work and study efficiency."},{"id":"opencv-imread","metadata":{"permalink":"/en/blog/opencv-imread","source":"@site/i18n/en/docusaurus-plugin-content-blog/2024/02-13-imread/index.md","title":"Reading HEIC Images in Python","description":"Optimizing imread for reading HEIC images!","date":"2024-02-13T00:00:00.000Z","tags":[{"inline":true,"label":"Python","permalink":"/en/blog/tags/python"},{"inline":true,"label":"imread","permalink":"/en/blog/tags/imread"},{"inline":true,"label":"HEIC","permalink":"/en/blog/tags/heic"},{"inline":true,"label":"TurboJPEG","permalink":"/en/blog/tags/turbo-jpeg"}],"readingTime":3.1,"hasTruncateMarker":false,"authors":[{"name":"Zephyr","title":"Engineer","url":"https://github.com/zephyr-sh","imageURL":"https://github.com/zephyr-sh.png","key":"Zephyr"}],"frontMatter":{"slug":"opencv-imread","title":"Reading HEIC Images in Python","authors":"Zephyr","tags":["Python","imread","HEIC","TurboJPEG"],"image":"/en/img/2024/0213.webp","description":"Optimizing imread for reading HEIC images!"},"unlisted":false,"prevItem":{"title":"Convert PDF to Images using Python","permalink":"/en/blog/convert-pdf-to-images"},"nextItem":{"title":"Troubleshooting Log","permalink":"/en/blog/error-record"}},"content":"<figure>\\n![title](/img/2024/0213.webp)\\n<figcaption>Cover Image: Automatically generated by GPT-4 after reading this article</figcaption>\\n</figure>\\n\\n---\\n\\nWhen you want to read an image, you might use the `imread` function from OpenCV. This function is very convenient as it can read various image formats and directly load the image into a `numpy.ndarray` variable. However, this function is not always universal, and you may encounter some issues.\\n\\n## Basic Usage\\n\\nThe basic usage of the `imread` function is straightforward; you just need to pass the path to the image:\\n\\n```python\\nimport cv2\\n\\nimage = cv2.imread(\'path/to/image.jpg\')\\n```\\n\\nYou can use common image formats such as BMP, JPG, PNG, TIF, and others.\\n\\n## Limitation 1: HEIC Format\\n\\nImages captured on iOS devices are typically in HEIC format, which is not supported in OpenCV. If you try to use the `imread` function to read HEIC format images, you will get a `None` return value.\\n\\nTo address this issue, we need to use the `pyheif` package to read HEIC format images and then convert them into `numpy.ndarray` variables.\\n\\nFirst, install the necessary packages:\\n\\n```bash\\nsudo apt install libheif-dev\\npip install pyheif\\n```\\n\\nThen, write a simple function:\\n\\n```python\\nimport cv2\\nimport pyheif\\nimport numpy as np\\n\\ndef read_heic_to_numpy(file_path: str):\\n    heif_file = pyheif.read(file_path)\\n    data = heif_file.data\\n    if heif_file.mode == \\"RGB\\":\\n        numpy_array = np.frombuffer(data, dtype=np.uint8).reshape(\\n            heif_file.size[1], heif_file.size[0], 3)\\n    elif heif_file.mode == \\"RGBA\\":\\n        numpy_array = np.frombuffer(data, dtype=np.uint8).reshape(\\n            heif_file.size[1], heif_file.size[0], 4)\\n    else:\\n        raise ValueError(\\"Unsupported HEIC color mode\\")\\n    return numpy_array\\n\\n\\nimg = read_heic_to_numpy(\'path/to/image.heic\')\\nimg = cv2.cvtColor(img, cv2.COLOR_RGB2BGR)\\n```\\n\\n## Limitation 2: Slow JPG Reading\\n\\nIn some cases, the `imread` function\'s performance in reading JPG format images can be slow. This is because OpenCV uses the `libjpeg` library to read JPG format images, and `libjpeg` itself is not very efficient.\\n\\nHere, we introduce the `TurboJPEG` package, an alternative to `libjpeg` with better performance. We can use `TurboJPEG` to accelerate the reading of JPG format images.\\n\\nSimilarly, install the necessary packages:\\n\\n```bash\\nsudo apt install libturbojpeg exiftool\\npip install PyTurboJPEG\\n```\\n\\nThen, let\'s optimize it a bit:\\n\\nGenerally, this can speed up the process by about 2-3 times.\\n\\n```python\\nimport cv2\\nimport piexif\\nfrom enum import IntEnum\\nfrom pathlib import Path\\nfrom turbojpeg import TurboJPEG\\n\\n\\njpeg = TurboJPEG()\\n\\n\\nclass ROTATE(IntEnum):\\n    ROTATE_90 = cv2.ROTATE_90_CLOCKWISE\\n    ROTATE_180 = cv2.ROTATE_180\\n    ROTATE_270 = cv2.ROTATE_90_COUNTERCLOCKWISE\\n\\n\\ndef imrotate90(img, rotate_code: ROTATE) -> np.ndarray:\\n    return cv2.rotate(img.copy(), rotate_code)\\n\\n\\ndef get_orientation_code(stream: Union[str, Path, bytes]):\\n    code = None\\n    try:\\n        exif_dict = piexif.load(stream)\\n        if piexif.ImageIFD.Orientation in exif_dict[\\"0th\\"]:\\n            orientation = exif_dict[\\"0th\\"][piexif.ImageIFD.Orientation]\\n            if orientation == 3:\\n                code = ROTATE.ROTATE_180\\n            elif orientation == 6:\\n                code = ROTATE.ROTATE_90\\n            elif orientation == 8:\\n                code = ROTATE.ROTATE_270\\n    finally:\\n        return code\\n\\n\\ndef jpgdecode(byte_: bytes) -> Union[np.ndarray, None]:\\n    try:\\n        bgr_array = jpeg.decode(byte_)\\n        code = get_orientation_code(byte_)\\n        bgr_array = imrotate90(\\n            bgr_array, code) if code is not None else bgr_array\\n    except:\\n        bgr_array = None\\n\\n    return bgr_array\\n\\n\\ndef jpgread(img_file: Union[str, Path]) -> Union[np.ndarray, None]:\\n    with open(str(img_file), \'rb\') as f:\\n        binary_img = f.read()\\n        bgr_array = jpgdecode(binary_img)\\n\\n    return bgr_array\\n\\nimg = jpgread(\'path/to/image.jpg\')\\n```\\n\\nThis way, reading JPG format images can be accelerated.\\n\\n## Conclusion\\n\\nWhat if we want this program to be more intelligent, choosing a suitable way to load images on its own?\\n\\nWe can write a function to select the appropriate loading method based on the image\'s format:\\n\\n```python\\ndef imread(\\n    path: Union[str, Path],\\n    color_base: str = \'BGR\',\\n    verbose: bool = False\\n) -> Union[np.ndarray, None]:\\n\\n    if not Path(path).exists():\\n        raise FileExistsError(f\'{path} can not be found.\')\\n\\n    if Path(path).suffix.lower() == \'.heic\':\\n        img = read_heic_to_numpy(str(path))\\n        img = cv2.cvtColor(img, cv2.COLOR_RGB2BGR)\\n    else:\\n        img = jpgread(path)\\n        img = cv2.imread(str(path)) if img is None else img\\n\\n    if img is None:\\n        if verbose:\\n            warnings.warn(\\"Got a None type image.\\")\\n        return\\n\\n    if color_base != \'BGR\':\\n        img = imcvtcolor(img, cvt_mode=f\'BGR2{color_base}\')\\n\\n    return img\\n```\\n\\nFor detailed code, you can refer to: [imread.py](https://github.com/DocsaidLab/DocsaidKit/blob/eb8ac0a56779a75dcc951c683001e6129052cc5a/docsaidkit/vision/improc.py#L197)\\n\\nAbove are some limitations and solutions regarding OpenCV\'s `imread` function."},{"id":"error-record","metadata":{"permalink":"/en/blog/error-record","source":"@site/i18n/en/docusaurus-plugin-content-blog/2024/02-04-error-record/index.md","title":"Troubleshooting Log","description":"Some common issues and solutions.","date":"2024-02-04T00:00:00.000Z","tags":[{"inline":true,"label":"error","permalink":"/en/blog/tags/error"},{"inline":true,"label":"record","permalink":"/en/blog/tags/record"}],"readingTime":0.485,"hasTruncateMarker":false,"authors":[{"name":"Zephyr","title":"Engineer","url":"https://github.com/zephyr-sh","imageURL":"https://github.com/zephyr-sh.png","key":"Zephyr"}],"frontMatter":{"slug":"error-record","title":"Troubleshooting Log","authors":"Zephyr","tags":["error","record"],"image":"/en/img/2024/0204.webp","description":"Some common issues and solutions."},"unlisted":false,"prevItem":{"title":"Reading HEIC Images in Python","permalink":"/en/blog/opencv-imread"},"nextItem":{"title":"User Switching Tool in Containers: gosu","permalink":"/en/blog/gosu-usage"}},"content":"<figure>\\n![title](/img/2024/0204.webp)\\n<figcaption>Cover Image: Automatically generated by GPT-4 after reading this document</figcaption>\\n</figure>\\n\\n---\\n\\nWe always encounter a bunch of problems. Some problems are caused by ourselves, some by others, and some are beyond our control. Here, we document some common issues and solutions.\\n\\n:::tip\\nThis document will be continuously updated.\\n:::\\n\\n## 1. Error Encountered when Running `npx docusaurus start`\\n\\n- **Error Message:**\\n\\n  ```bash\\n  file:///home/user/workspace/blog/node_modules/@docusaurus/core/bin/docusaurus.mjs:30\\n  process.env.BABEL_ENV ??= \'development\';\\n                      ^^^\\n\\n  SyntaxError: Unexpected token \'??=\'\\n  ```\\n\\n- **Solution:**\\n\\n  The `??=` operator requires Node.js version 15.0.0 or higher to be supported.\\n\\n  ```bash\\n  nvm install node\\n  nvm use node\\n  ```"},{"id":"gosu-usage","metadata":{"permalink":"/en/blog/gosu-usage","source":"@site/i18n/en/docusaurus-plugin-content-blog/2024/02-03-usage-gosu/index.md","title":"User Switching Tool in Containers: gosu","description":"A tool worth learning how to use.","date":"2024-02-03T00:00:00.000Z","tags":[{"inline":true,"label":"docker","permalink":"/en/blog/tags/docker"},{"inline":true,"label":"gosu","permalink":"/en/blog/tags/gosu"},{"inline":true,"label":"sudo","permalink":"/en/blog/tags/sudo"},{"inline":true,"label":"container","permalink":"/en/blog/tags/container"}],"readingTime":4.04,"hasTruncateMarker":false,"authors":[{"name":"Zephyr","title":"Engineer","url":"https://github.com/zephyr-sh","imageURL":"https://github.com/zephyr-sh.png","key":"Zephyr"}],"frontMatter":{"slug":"gosu-usage","title":"User Switching Tool in Containers: gosu","authors":"Zephyr","tags":["docker","gosu","sudo","container"],"image":"/en/img/2024/0203.webp","description":"A tool worth learning how to use."},"unlisted":false,"prevItem":{"title":"Troubleshooting Log","permalink":"/en/blog/error-record"},"nextItem":{"title":"Managing Python Versions with pyenv","permalink":"/en/blog/pyenv-installation"}},"content":"<figure>\\n![title](/img/2024/0203.webp)\\n<figcaption>Cover Image: Automatically generated by GPT-4 after reading this article</figcaption>\\n</figure>\\n\\n---\\n\\nDocker technology has been extensively employed in deployment and management, allowing developers to package applications and their dependencies together to ensure consistent operation across different environments.\\n\\n## Common Issues\\n\\nHowever, with frequent use, you can\'t escape encountering a few common problems.\\n\\n### TTY Conversion\\n\\nA common scenario is when you output a file within a container, exit the container, and then realize that the file permissions are all set to root. You then have to use `chown` to change the file permissions repeatedly, which can be quite cumbersome.\\n\\n---\\n\\nOr, when running an application within a Docker container using sudo that requires interaction with the terminal (TTY), these applications might fail to properly detect the terminal because sudo might not handle terminal ownership and control properly when creating a new session. As a result, these applications requiring terminal interaction may not run correctly or encounter input/output errors when attempting to use them.\\n\\n### Signal Forwarding\\n\\nSuppose you have a container running a web server like Apache or Nginx. Typically, you might use command-line tools to manage this container, including starting and stopping it. Inside the container, if you use sudo to start the web server, sudo will create a new process to run the web server.\\n\\nThe problem arises when you want to stop or restart the container. The container management system sends signals (like SIGTERM) to the container to notify processes inside it to prepare for shutdown. However, if the web server was started via sudo, this signal might only be sent to the sudo process, not the actual web server process. This means the web server might not receive the stop signal, preventing proper cleanup and safe shutdown.\\n\\n:::tip\\nThe design intention of sudo is to enhance security by allowing regular users to execute commands as other users (usually the root user). In this process, sudo starts a new session to execute the command. While this behavior typically poses no issues in traditional operating system environments, it can lead to signal delivery problems in lightweight virtualized environments like containers, as the new session created by sudo might be incompatible with how the container management system sends signals.\\n:::\\n\\n## What is gosu?\\n\\n- [**gosu GitHub repository**](https://github.com/tianon/gosu)\\n\\ngosu is a tool specifically designed for containers, aiming to simplify and secure command execution within containers. When you need to run a command as a different user (e.g., switching from an administrator to a regular user) within a container, gosu comes in handy. Its core mechanism directly borrows from how `Docker/libcontainer` starts applications within containers (in fact, it directly uses code from the `libcontainer` library for handling `/etc/passwd`).\\n\\nIf you\'re not interested in its inner workings, think of gosu as a helper. When you tell it to \\"run this command as this user,\\" it does just that, then exits, leaving no trace behind.\\n\\n### Practical Use Cases\\n\\nUsing gosu in the ENTRYPOINT script of a Docker container is a typical use case, especially when we need to downgrade from the root user to a non-privileged user to perform certain operations. This practice is crucial for safeguarding the security of the container runtime environment, as it effectively reduces potential security risks.\\n\\nInstalling gosu is straightforward, usually requiring just a few lines in the Dockerfile for installation and configuration. The following example demonstrates how to install gosu in a Dockerfile and dynamically create users and groups using an entrypoint script, then use gosu to execute commands with the specified user identity.\\n\\n```Dockerfile title=\\"Dockerfile\\"\\n# Based on an existing base image\\nFROM some_base_image:latest\\n\\nWORKDIR /app\\n\\n# Install gosu\\nRUN apt-get update && apt-get install -y gosu && rm -rf /var/lib/apt/lists/*\\n\\n# Prepare entrypoint script\\nCOPY entrypoint.sh /entrypoint.sh\\nRUN chmod +x /entrypoint.sh\\n\\nENTRYPOINT [\\"/entrypoint.sh\\"]\\nCMD [\\"default_command\\"]\\n```\\n\\nThe example content of the `entrypoint.sh` script is as follows. It dynamically creates a user and group based on the environment variables USER_ID and GROUP_ID, then executes a command using gosu:\\n\\n```bash title=\\"entrypoint.sh\\"\\n#!/bin/bash\\n# Check if USER_ID and GROUP_ID environment variables are set\\nif [ ! -z \\"$USER_ID\\" ] && [ ! -z \\"$GROUP_ID\\" ]; then\\n    # Create group and user\\n    groupadd -g \\"$GROUP_ID\\" usergroup\\n    useradd -u \\"$USER_ID\\" -g usergroup -m user\\n    # Execute command using gosu\\n    exec gosu user \\"$@\\"\\nelse\\n    exec \\"$@\\"\\nfi\\n```\\n\\nFor a real-world example, refer to: [**DocClassifier training docker**](https://github.com/DocsaidLab/DocClassifier/blob/main/docker/Dockerfile)\\n\\n### Security Considerations\\n\\nWhile gosu\'s primary purpose is to switch from the `root` user to a non-privileged user during container startup, its developers also emphasize potential security risks associated with using gosu in certain contexts.\\n\\nThis is because any tool that allows user switching, if misused, could open doors to security vulnerabilities. Therefore, development and operations teams need to have a thorough understanding of gosu\'s usage scenarios and ensure it is only used in secure environments."},{"id":"pyenv-installation","metadata":{"permalink":"/en/blog/pyenv-installation","source":"@site/i18n/en/docusaurus-plugin-content-blog/2023/10-10-pyenv-installation/index.md","title":"Managing Python Versions with pyenv","description":"Documenting the installation and usage of pyenv.","date":"2023-10-10T00:00:00.000Z","tags":[{"inline":true,"label":"python","permalink":"/en/blog/tags/python"},{"inline":true,"label":"pyenv","permalink":"/en/blog/tags/pyenv"},{"inline":true,"label":"virtualenv","permalink":"/en/blog/tags/virtualenv"},{"inline":true,"label":"usage","permalink":"/en/blog/tags/usage"}],"readingTime":2.35,"hasTruncateMarker":false,"authors":[{"name":"Zephyr","title":"Engineer","url":"https://github.com/zephyr-sh","imageURL":"https://github.com/zephyr-sh.png","key":"Zephyr"}],"frontMatter":{"slug":"pyenv-installation","title":"Managing Python Versions with pyenv","authors":"Zephyr","tags":["python","pyenv","virtualenv","usage"],"image":"/en/img/2023/1010.webp","description":"Documenting the installation and usage of pyenv."},"unlisted":false,"prevItem":{"title":"User Switching Tool in Containers: gosu","permalink":"/en/blog/gosu-usage"},"nextItem":{"title":"Recording Model Training Environment Issues","permalink":"/en/blog/python-env-info-collector"}},"content":"<figure>\\n![title](/img/2023/1010.webp)\\n<figcaption>Cover Image: Automatically generated by GPT-4 after reading this article.</figcaption>\\n</figure>\\n\\n---\\n\\nIn earlier years, Conda was predominantly used for managing Python environments. Nowadays, pyenv is commonly employed.\\n\\nThis article aims to document the installation and usage of pyenv.\\n\\n## Prerequisites\\n\\nBefore installing `pyenv`, ensure that `Git` is installed on your system.\\n\\n:::info\\nThe pyenv package provides a [**Common build problems guide**](https://github.com/pyenv/pyenv/wiki/Common-build-problems) to address installation issues.\\n\\nIf you encounter any problems during installation, refer to this page.\\n:::\\n\\n## Installing `pyenv`\\n\\n1. **Execute Installation Command**:\\n\\n   You can quickly install `pyenv` by running the following command:\\n\\n   ```bash\\n   curl https://pyenv.run | bash\\n   ```\\n\\n   This command fetches and executes the installation script from the `pyenv-installer` repository on GitHub.\\n\\n2. **Configure Your Shell Environment**:\\n\\n   After installation, follow the [**setup guide**](https://github.com/pyenv/pyenv#set-up-your-shell-environment-for-pyenv) to configure your shell environment to ensure that `pyenv` works correctly.\\n\\n   If you are using `bash`, add the following code to your `.bashrc` file:\\n\\n   ```bash\\n   export PATH=\\"$HOME/.pyenv/bin:$PATH\\"\\n   eval \\"$(pyenv init --path)\\"\\n   eval \\"$(pyenv virtualenv-init -)\\"\\n   ```\\n\\n   For `zsh` users, add the above code to your `.zshrc` file.\\n\\n3. **Restart Your Shell**:\\n\\n   After completing the above steps, reload the new configuration.\\n\\n   ```bash\\n   exec $SHELL\\n   ```\\n\\n## Using `pyenv`\\n\\nOnce installed and configured, you can start using `pyenv` to manage multiple Python versions:\\n\\n- **Install a New Python Version**:\\n\\n  ```bash\\n  pyenv install 3.10.14\\n  ```\\n\\n- **Switch the Global Python Version**:\\n\\n  ```bash\\n  pyenv global 3.10.14\\n  ```\\n\\n- **Use a Specific Version in a Directory**:\\n  ```bash\\n  pyenv local 3.8.5\\n  ```\\n\\n## Virtual Environments\\n\\nVirtual environments are crucial in Python development.\\n\\nThey allow us to use different Python versions and dependencies in different projects.\\n\\nAt the very least, when you accidentally mess up your Python environment, you can simply delete the virtual environment and start over.\\n\\n:::tip\\nIt\'s highly recommended to use virtual environments when developing Python projects.\\n:::\\n\\n### Installation\\n\\n`pyenv` also provides a `pyenv-virtualenv` plugin, making it easier to manage Python virtual environments.\\n\\nPreviously, this feature required separate installation, but it\'s now integrated into `pyenv`, and we can directly use:\\n\\n```bash\\npyenv virtualenv 3.10.14 your-env-name\\n```\\n\\nHere, `3.10.14` is the Python version you want to use, which you\'ve already installed in the previous step, and `your-env-name` is the name of the virtual environment.\\n\\n### Usage\\n\\nTo activate the virtual environment, run:\\n\\n```bash\\npyenv activate your-env-name\\n```\\n\\n### Removal\\n\\nFinally, when you no longer need the virtual environment, you can run the following command to delete it:\\n\\n```bash\\npyenv virtualenv-delete your-env-name\\n```\\n\\n## Updating `pyenv`\\n\\nTo update `pyenv` to the latest version, simply run:\\n\\n```bash\\npyenv update\\n```\\n\\n## Uninstalling `pyenv`\\n\\nIf you decide to no longer use `pyenv`, follow these steps to uninstall:\\n\\n1. **Remove the `pyenv` Installation Directory**:\\n\\n   ```bash\\n   rm -fr ~/.pyenv\\n   ```\\n\\n2. **Clean Your `.bashrc`**:\\n   Remove or comment out the relevant `pyenv` configuration lines, then restart your shell:\\n   ```bash\\n   exec $SHELL\\n   ```"},{"id":"python-env-info-collector","metadata":{"permalink":"/en/blog/python-env-info-collector","source":"@site/i18n/en/docusaurus-plugin-content-blog/2023/09-22-python-env-info-collector/index.md","title":"Recording Model Training Environment Issues","description":"A custom logging tool.","date":"2023-09-22T00:00:00.000Z","tags":[{"inline":true,"label":"python","permalink":"/en/blog/tags/python"},{"inline":true,"label":"training","permalink":"/en/blog/tags/training"},{"inline":true,"label":"environment","permalink":"/en/blog/tags/environment"},{"inline":true,"label":"info","permalink":"/en/blog/tags/info"},{"inline":true,"label":"log","permalink":"/en/blog/tags/log"}],"readingTime":6.13,"hasTruncateMarker":false,"authors":[{"name":"Zephyr","title":"Engineer","url":"https://github.com/zephyr-sh","imageURL":"https://github.com/zephyr-sh.png","key":"Zephyr"}],"frontMatter":{"slug":"python-env-info-collector","title":"Recording Model Training Environment Issues","authors":"Zephyr","tags":["python","training","environment","info","log"],"image":"/en/img/2023/0922.webp","description":"A custom logging tool."},"unlisted":false,"prevItem":{"title":"Managing Python Versions with pyenv","permalink":"/en/blog/pyenv-installation"},"nextItem":{"title":"Setting Up PyPiServer on Ubuntu","permalink":"/en/blog/setting-up-pypiserver-on-ubuntu-with-docker"}},"content":"<figure>\\n![title](/img/2023/0922.webp)\\n<figcaption>Cover Image: Generated automatically by GPT-4 after reading this article.</figcaption>\\n</figure>\\n\\n---\\n\\nWhen a model\'s training goes awry, we always want to know the reasons behind it. At such times, it\'s essential to inspect the environment information of the training host, such as Python version, PyTorch version, CUDA version, GPU information, CPU information, RAM information, disk information, IP address, and more.\\n\\nIn this article, we share a custom Python tool we\'ve crafted to swiftly review this information. While it\'s not exhaustive, it should suffice for basic troubleshooting needs.\\n\\nTypically, we record environment information in the training host\'s logs at the start of training.\\n\\n## Installation\\n\\nLet\'s start by installing the necessary packages:\\n\\n```bash\\npip install psutil requests\\n```\\n\\nNext, you can retrieve the complete code at the end of this article and integrate it into your project.\\n\\n## `get_package_versions`\\n\\nAssuming you have installed `docsaidkit` and it\'s already in your project, you can test it with the following command:\\n\\n```python\\nfrom docsaidkit import get_package_versions\\n\\nget_package_versions()\\n```\\n\\nUpon execution, you\'ll receive the following result:\\n\\n```json\\n{\\n  \\"PyTorch Version\\": \\"2.1.1+cu121\\",\\n  \\"PyTorch Lightning Version\\": \\"2.1.2\\",\\n  \\"TensorFlow Error\\": \\"No module named \'tensorflow\'\\",\\n  \\"Keras Error\\": \\"No module named \'keras\'\\",\\n  \\"NumPy Version\\": \\"1.24.4\\",\\n  \\"Pandas Version\\": \\"2.0.3\\",\\n  \\"Scikit-learn Version\\": \\"1.3.2\\",\\n  \\"OpenCV Version\\": \\"4.8.1\\"\\n}\\n```\\n\\n- PyTorch Version: PyTorch version\\n- PyTorch Lightning Version: PyTorch Lightning version\\n- TensorFlow Error: TensorFlow version\\n- Keras Error: Keras version\\n- NumPy Version: NumPy version\\n- Pandas Version: Pandas version\\n- Scikit-learn Version: Scikit-learn version\\n- OpenCV Version: OpenCV version\\n\\n## `get_gpu_cuda_versions`\\n\\nTest program:\\n\\n```python\\nfrom docsaidkit import get_gpu_cuda_versions\\n\\nget_gpu_cuda_versions()\\n```\\n\\nUpon execution, you\'ll receive the following result:\\n\\n```json\\n{\\n  \\"CUDA Version\\": \\"12.1\\",\\n  \\"NVIDIA Driver Version\\": \\"535.129.03\\"\\n}\\n```\\n\\n- CUDA Version: CUDA version\\n- NVIDIA Driver Version: NVIDIA driver version\\n\\n## `get_system_info`\\n\\nTest program:\\n\\n```python\\nfrom docsaidkit import get_system_info\\n\\nget_system_info()\\n```\\n\\nUpon execution, you\'ll receive the following result:\\n\\n```json\\n{\\n  \\"OS Version\\": \\"Linux-6.2.0-37-generic-x86_64-with-glibc2.34\\",\\n  \\"CPU Model\\": \\"13th Gen Intel(R) Core(TM) i9-13900K\\",\\n  \\"Physical CPU Cores\\": 24,\\n  \\"Logical CPU Cores (incl. hyper-threading)\\": 32,\\n  \\"Total RAM (GB)\\": 125.56,\\n  \\"Available RAM (GB)\\": 110.9,\\n  \\"Disk Total (GB)\\": 1832.21,\\n  \\"Disk Used (GB)\\": 188.94,\\n  \\"Disk Free (GB)\\": 1550.12,\\n  \\"GPU Info\\": \\"NVIDIA GeForce RTX 4090\\",\\n  \\"IPV4 Address\\": [\\"192.168.---.---\\"],\\n  \\"IPV4 Address (External)\\": \\"---.---.---.---\\",\\n  \\"MAC Address\\": [\\"--.--.--.--.--.--\\"]\\n}\\n```\\n\\n- OS Version: Operating system version\\n- CPU Model: CPU model\\n- Physical CPU Cores: Number of physical CPU cores\\n- Logical CPU Cores (incl. hyper-threading): Number of logical CPU cores (including hyper-threading)\\n- Total RAM (GB): Total RAM capacity (GB)\\n- Available RAM (GB): Available RAM capacity (GB)\\n- Disk Total (GB): Total disk capacity (GB)\\n- Disk Used (GB): Used disk capacity (GB)\\n- Disk Free (GB): Free disk capacity (GB)\\n- GPU Info: GPU information\\n- IPV4 Address: Internal IPV4 address\\n- IPV4 Address (External): External IPV4 address\\n- MAC Address: MAC address\\n\\n## Considerations and Alternatives\\n\\nSince we\'re writing this function on Ubuntu, there might be unexpected developments on other operating systems.\\n\\nHere are a few points to note:\\n\\n- Due to OS limitations, some functions may not run on all platforms. For example, `get_cpu_info` won\'t display the complete CPU model on Windows. In such cases, consider using other tools or manually obtaining this information.\\n- If you\'re on Windows, you can\'t directly use `nvidia-smi` to get GPU information. Make sure you have NVIDIA drivers and related tools installed and execute it in a command prompt window.\\n- External IP address is fetched from `https://httpbin.org/ip`, so ensure an active internet connection.\\n\\n## Code\\n\\nWe hope this code helps you quickly inspect your training environment. You can output this information and save it along with your model\'s training logs to ensure traceability and reproducibility.\\n\\n- [system_info.py](https://github.com/DocsaidLab/DocsaidKit/blob/main/docsaidkit/utils/system_info.py)\\n\\n```python showLineNumbers\\nimport platform\\nimport socket\\nimport subprocess\\n\\nimport psutil\\nimport requests\\n\\n\\ndef get_package_versions():\\n    \\"\\"\\"\\n    Get versions of commonly used packages in deep learning and data science.\\n\\n    Returns:\\n        dict: Dictionary containing versions of installed packages.\\n    \\"\\"\\"\\n    versions_info = {}\\n\\n    # PyTorch\\n    try:\\n        import torch\\n        versions_info[\\"PyTorch Version\\"] = torch.__version__\\n    except Exception as e:\\n        versions_info[\\"PyTorch Error\\"] = str(e)\\n\\n    # PyTorch Lightning\\n    try:\\n        import pytorch_lightning as pl\\n        versions_info[\\"PyTorch Lightning Version\\"] = pl.__version__\\n    except Exception as e:\\n        versions_info[\\"PyTorch Lightning Error\\"] = str(e)\\n\\n    # TensorFlow\\n    try:\\n        import tensorflow as tf\\n        versions_info[\\"TensorFlow Version\\"] = tf.__version__\\n    except Exception as e:\\n        versions_info[\\"TensorFlow Error\\"] = str(e)\\n\\n    # Keras\\n    try:\\n        import keras\\n        versions_info[\\"Keras Version\\"] = keras.__version__\\n    except Exception as e:\\n        versions_info[\\"Keras Error\\"] = str(e)\\n\\n    # NumPy\\n    try:\\n        import numpy as np\\n        versions_info[\\"NumPy Version\\"] = np.__version__\\n    except Exception as e:\\n        versions_info[\\"NumPy Error\\"] = str(e)\\n\\n    # Pandas\\n    try:\\n        import pandas as pd\\n        versions_info[\\"Pandas Version\\"] = pd.__version__\\n    except Exception as e:\\n        versions_info[\\"Pandas Error\\"] = str(e)\\n\\n    # Scikit-learn\\n    try:\\n        import sklearn\\n        versions_info[\\"Scikit-learn Version\\"] = sklearn.__version__\\n    except Exception as e:\\n        versions_info[\\"Scikit-learn Error\\"] = str(e)\\n\\n    # OpenCV\\n    try:\\n        import cv2\\n        versions_info[\\"OpenCV Version\\"] = cv2.__version__\\n    except Exception as e:\\n        versions_info[\\"OpenCV Error\\"] = str(e)\\n\\n    # ... and so on for any other packages you\\"re interested in\\n\\n    return versions_info\\n\\n\\ndef get_gpu_cuda_versions():\\n    \\"\\"\\"\\n    Get GPU and CUDA versions using popular Python libraries.\\n\\n    Returns:\\n        dict: Dictionary containing CUDA and GPU driver versions.\\n    \\"\\"\\"\\n\\n    cuda_version = None\\n\\n    # Attempt to retrieve CUDA version using PyTorch\\n    try:\\n        import torch\\n        cuda_version = torch.version.cuda\\n    except ImportError:\\n        pass\\n\\n    # If not retrieved via PyTorch, try using TensorFlow\\n    if not cuda_version:\\n        try:\\n            import tensorflow as tf\\n            cuda_version = tf.version.COMPILER_VERSION\\n        except ImportError:\\n            pass\\n\\n    # If still not retrieved, try using CuPy\\n    if not cuda_version:\\n        try:\\n            import cupy\\n            cuda_version = cupy.cuda.runtime.runtimeGetVersion()\\n        except ImportError:\\n            cuda_version = \\"Error: None of PyTorch, TensorFlow, or CuPy are installed.\\"\\n\\n    # Try to get Nvidia driver version using nvidia-smi command\\n    try:\\n        smi_output = subprocess.check_output([\\n            \\"nvidia-smi\\",\\n            \\"--query-gpu=driver_version\\",\\n            \\"--format=csv,noheader,nounits\\"\\n        ]).decode(\\"utf-8\\").strip()\\n        nvidia_driver_version = smi_output.split(\\"\\\\n\\")[0]\\n    except Exception as e:\\n        nvidia_driver_version = f\\"Error getting NVIDIA driver version: {e}\\"\\n\\n    return {\\n        \\"CUDA Version\\": cuda_version,\\n        \\"NVIDIA Driver Version\\": nvidia_driver_version\\n    }\\n\\n\\ndef get_cpu_info():\\n    \\"\\"\\"\\n    Retrieve the CPU model name based on the platform.\\n\\n    Returns:\\n        str: CPU model name or \\"N/A\\" if not found.\\n    \\"\\"\\"\\n    if platform.system() == \\"Windows\\":\\n        return platform.processor()\\n    elif platform.system() == \\"Darwin\\":\\n        # For macOS\\n        command = \\"sysctl -n machdep.cpu.brand_string\\"\\n        return subprocess.check_output(command, shell=True).strip().decode()\\n    elif platform.system() == \\"Linux\\":\\n        # For Linux\\n        command = \\"cat /proc/cpuinfo | grep \\"model name\\" | uniq\\"\\n        return subprocess.check_output(command, shell=True).strip().decode().split(\\":\\")[1].strip()\\n    else:\\n        return \\"N/A\\"\\n\\n\\ndef get_external_ip():\\n    try:\\n        response = requests.get(\\"https://httpbin.org/ip\\")\\n        return response.json()[\\"origin\\"]\\n    except Exception as e:\\n        return f\\"Error obtaining IP: {e}\\"\\n\\n\\ndef get_system_info():\\n    \\"\\"\\"\\n    Fetch system information like OS version, CPU info, RAM, Disk usage, etc.\\n\\n    Returns:\\n        dict: Dictionary containing system information.\\n    \\"\\"\\"\\n    info = {\\n        \\"OS Version\\": platform.platform(),\\n        \\"CPU Model\\": get_cpu_info(),\\n        \\"Physical CPU Cores\\": psutil.cpu_count(logical=False),\\n        \\"Logical CPU Cores (incl. hyper-threading)\\": psutil.cpu_count(logical=True),\\n        \\"Total RAM (GB)\\": round(psutil.virtual_memory().total / (1024 ** 3), 2),\\n        \\"Available RAM (GB)\\": round(psutil.virtual_memory().available / (1024 ** 3), 2),\\n        \\"Disk Total (GB)\\": round(psutil.disk_usage(\\"/\\").total / (1024 ** 3), 2),\\n        \\"Disk Used (GB)\\": round(psutil.disk_usage(\\"/\\").used / (1024 ** 3), 2),\\n        \\"Disk Free (GB)\\": round(psutil.disk_usage(\\"/\\").free / (1024 ** 3), 2)\\n    }\\n\\n    # Try to fetch GPU information using nvidia-smi command\\n    try:\\n        gpu_info = subprocess.check_output(\\n            [\\"nvidia-smi\\", \\"--query-gpu=name\\", \\"--format=csv,noheader,nounits\\"]\\n        ).decode(\\"utf-8\\").strip()\\n        info[\\"GPU Info\\"] = gpu_info\\n    except Exception:\\n        info[\\"GPU Info\\"] = \\"N/A or Error\\"\\n\\n    # Get network information\\n    addrs = psutil.net_if_addrs()\\n    info[\\"IPV4 Address\\"] = [\\n        addr.address for addr in addrs.get(\\"enp5s0\\", []) if addr.family == socket.AF_INET\\n    ]\\n\\n    info[\\"IPV4 Address (External)\\"] = get_external_ip()\\n\\n    # Determine platform and choose correct address family for MAC\\n    if hasattr(socket, \\"AF_LINK\\"):\\n        AF_LINK = socket.AF_LINK\\n    elif hasattr(psutil, \\"AF_LINK\\"):\\n        AF_LINK = psutil.AF_LINK\\n    else:\\n        raise Exception(\\n            \\"Cannot determine the correct AF_LINK value for this platform.\\")\\n\\n    info[\\"MAC Address\\"] = [\\n        addr.address for addr in addrs.get(\\"enp5s0\\", []) if addr.family == AF_LINK\\n    ]\\n\\n    return info\\n```"},{"id":"setting-up-pypiserver-on-ubuntu-with-docker","metadata":{"permalink":"/en/blog/setting-up-pypiserver-on-ubuntu-with-docker","source":"@site/i18n/en/docusaurus-plugin-content-blog/2023/09-13-ubuntu-docker-pypiserver/index.md","title":"Setting Up PyPiServer on Ubuntu","description":"Setting up PyPiServer on Ubuntu using Docker.","date":"2023-09-13T00:00:00.000Z","tags":[{"inline":true,"label":"docker","permalink":"/en/blog/tags/docker"},{"inline":true,"label":"pypiserver","permalink":"/en/blog/tags/pypiserver"}],"readingTime":4.935,"hasTruncateMarker":false,"authors":[{"name":"Zephyr","title":"Engineer","url":"https://github.com/zephyr-sh","imageURL":"https://github.com/zephyr-sh.png","key":"Zephyr"}],"frontMatter":{"slug":"setting-up-pypiserver-on-ubuntu-with-docker","title":"Setting Up PyPiServer on Ubuntu","authors":"Zephyr","tags":["docker","pypiserver"],"image":"/en/img/2023/0913.webp","description":"Setting up PyPiServer on Ubuntu using Docker."},"unlisted":false,"prevItem":{"title":"Recording Model Training Environment Issues","permalink":"/en/blog/python-env-info-collector"},"nextItem":{"title":"Setting Up SSH Server on Ubuntu","permalink":"/en/blog/ubuntu-install-ssh"}},"content":"<figure>\\n![title](/img/2023/0913.webp)\\n<figcaption>Cover Image: Automatically generated by GPT-4 after reading the article</figcaption>\\n</figure>\\n\\n---\\n\\nAs the Python community continues to evolve, many developers and teams opt to establish their own private Python package index servers to store and manage their Python packages. This not only provides better version control but also ensures the security of software packages.\\n\\nIn this article, we\'ll use Docker to set up a PyPi Server and run it on Ubuntu.\\n\\nWe assume you\'ve already installed Docker on Ubuntu and are familiar with basic Docker operations.\\n\\n## 1. Pull the pypiserver Docker Image\\n\\n```bash\\ndocker pull pypiserver/pypiserver:latest\\n```\\n\\n## 2. Create a Directory to Store Python Packages\\n\\nWithout further ado, let\'s create a directory to store Python packages in the home directory.\\n\\n```bash\\nmkdir ~/packages\\n```\\n\\n## 3. Set Up htpasswd\\n\\nhtpasswd is a file format used to store usernames and passwords (often used for basic HTTP authentication).\\n\\npypiserver uses this file to authenticate users attempting to upload or download packages. It\'s a simple yet effective way to enhance the security of pypiserver.\\n\\nTo create a `.htpasswd` file, you need the `apache2-utils` package:\\n\\n```bash\\nsudo apt install apache2-utils\\n```\\n\\nThen, use the following command to create a new `.htpasswd` file:\\n\\n```bash\\nhtpasswd -c ~/.htpasswd [username]\\n```\\n\\nIt will prompt you to enter a password for `username`. After entering the password, the `.htpasswd` file will be created in your home directory.\\n\\nNow, you can use the `docker run` command mentioned above to run `pypiserver` and authenticate using the `.htpasswd` file you just created.\\n\\n## 4. Mount pypiserver as a Background Service\\n\\nTo run the Docker container as a background service, we can use Docker Compose and Systemd.\\n\\n### 4.1 Install Docker Compose\\n\\nIf you haven\'t installed Docker Compose yet, install it first by referring to the [official Docker Compose installation documentation](https://docs.docker.com/compose/install/).\\n\\nIt\'s worth noting that Docker Compose has undergone significant updates recently, with many changes in usage compared to before. The most obvious change is the shift from using `docker-compose` commands to `docker compose` commands.\\n\\nFollowing the official documentation, here\'s how you can install the latest version of Docker Compose:\\n\\n```bash\\nsudo apt update\\nsudo apt install docker-compose-plugin\\n```\\n\\nCheck if Docker Compose is installed correctly:\\n\\n```bash\\ndocker compose version\\n```\\n\\n### 4.2 Create Files\\n\\nCreate a `docker-compose.yml` file somewhere and fill it with the following content:\\n\\nYou can also refer to the template provided by `pypiserver`: [**docker-compose.yml**](https://github.com/pypiserver/pypiserver/blob/master/docker-compose.yml)\\n\\n```yaml\\nversion: \\"3.3\\"\\nservices:\\n  pypiserver:\\n    image: pypiserver/pypiserver:latest\\n    volumes:\\n      - /home/[your_username]/auth:/data/auth\\n      - /home/[your_username]/packages:/data/packages\\n    command: run -P /data/auth/.htpasswd -a update,download,list /data/packages\\n    ports:\\n      - \\"8080:8080\\"\\n```\\n\\n- Replace `[your_username]` with your actual username in the above configuration.\\n- You can modify the external port mapping here, for example, change it to: `\\"18080:8080\\"`.\\n\\n### 4.3 Create Systemd Service\\n\\nCreate a configuration file:\\n\\n```bash\\nsudo vim /etc/systemd/system/pypiserver.service\\n```\\n\\nAdd the following content:\\n\\n```bash\\n[Unit]\\nDescription=PypiServer Docker Compose\\nRequires=docker.service\\nAfter=docker.service\\n\\n[Service]\\nWorkingDirectory=/path/to/your/docker-compose/directory\\nExecStart=/usr/bin/docker compose up --remove-orphans\\nExecStop=/usr/bin/docker compose down\\nRestart=always\\n\\n[Install]\\nWantedBy=multi-user.target\\n```\\n\\n- Make sure to replace `/path/to/your/docker-compose/directory` with the actual path to the `docker-compose.yml` file, specifying only the directory, not the filename.\\n- Make sure your Docker path is correct, you can use `which docker` to confirm.\\n- We\'re using the new `docker compose` commands instead of `docker-compose`.\\n\\n### 4.4 Start the pypiserver Service\\n\\nTell systemd to reload the new service configuration:\\n\\n```bash\\nsudo systemctl daemon-reload\\n```\\n\\nStart the service:\\n\\n```bash\\nsudo systemctl start pypiserver.service\\nsudo systemctl enable pypiserver.service\\n```\\n\\nNow, `pypiserver` will run as a `systemd` service and automatically start each time the host boots up.\\n\\n## 5. Check Status\\n\\nIf you want to check the current status of the service, you can use:\\n\\n```bash\\nsudo systemctl status pypiserver.service\\n```\\n\\nThis will display the current status of the `pypiserver` service, including whether it\'s running and recent log outputs.\\n\\n![pypiserver status](./img/pypiserver.jpg)\\n\\n## 6. Using pypiserver\\n\\nNow, you can use `pip` to install and upload packages.\\n\\n### 6.1 Upload Packages\\n\\nFirst, you need a packaged Python software package (usually in .whl or .tar.gz format). Suppose you already have a package named `example_package-0.1-py3-none-any.whl`.\\n\\nTo upload the software package to your `pypiserver`, use `twine`:\\n\\n```bash\\npip install twine\\ntwine upload --repository-url http://localhost:8080/ example_package-0.1-py3-none-any.whl\\n```\\n\\n- Ensure that `localhost:8080` is the address and port of your pypiserver service.\\n\\n### 6.2 Install Packages\\n\\nTo install packages, use `pip` and specify the address and port of your `pypiserver` service:\\n\\n```bash\\npip install --index-url http://localhost:8080/ example_package\\n```\\n\\n### 6.3 Use Basic Authentication\\n\\nIf your pypiserver is configured with basic authentication (which may be done for security reasons), you need to provide authentication information when uploading or downloading:\\n\\n- Uploading packages:\\n\\n  ```bash\\n  twine upload --repository-url http://localhost:8080/ --username [username] --password [password] example_package-0.1-py3-none-any.whl\\n  ```\\n\\n- Installing packages:\\n\\n  ```bash\\n  pip install --index-url http://[username]:[password]@localhost:8080/ example_package\\n  ```\\n\\n### 6.4 Configure pip.conf for Long-Term Use\\n\\nIf you frequently install packages from this server, you may not want to specify `--index-url` every time you use `pip install`. In this case, you can set default package index sources in `pip.conf`.\\n\\nFirst, find or create a `pip.conf` file. Here are the files that might exist on your machine in order of precedence:\\n\\n- Priority 1: Site-level configuration file:\\n\\n  - `/home/[your_username]/.pyenv/versions/3.8.18/envs/main/pip.conf`\\n\\n- Priority 2: User-level configuration files:\\n\\n  - `/home/[your_username]/.pip/pip.conf`\\n  - `/home/[your_username]/.config/pip/pip.conf`\\n\\n- Priority 3: Global-level configuration files:\\n\\n  - `/etc/pip.conf`\\n  - `/etc/xdg/pip/pip.conf`\\n\\nSo make sure to clarify which Python environment is using which file, and once you\'ve found or created the file, add the following content:\\n\\n```bash\\n[global]\\nindex-url = http://[your_server_IP]:8080/\\ntrusted-host = [your_server_IP]\\n```\\n\\nAgain, ensure to replace `[your_server_IP]:8080` with the correct address and port of your `pypiserver`.\\n\\nFrom now on, when you use `pip install [package_name]`, `pip` will automatically use the server address configured in `pip.conf` as the package source.\\n\\n## 7. Conclusion\\n\\nCongratulations! You\'ve successfully set up your own private PyPI server and learned how to upload and download packages.\\n\\nWith `pypiserver`, you can efficiently manage your Python packages and ensure they\'re in a secure environment. I hope this article proves to be practically helpful for you."},{"id":"ubuntu-install-ssh","metadata":{"permalink":"/en/blog/ubuntu-install-ssh","source":"@site/i18n/en/docusaurus-plugin-content-blog/2023/09-12-ubuntu-install-ssh/index.md","title":"Setting Up SSH Server on Ubuntu","description":"Tutorial on configuring ssh server.","date":"2023-09-12T00:00:00.000Z","tags":[{"inline":true,"label":"ubuntu","permalink":"/en/blog/tags/ubuntu"},{"inline":true,"label":"ssh","permalink":"/en/blog/tags/ssh"}],"readingTime":1.76,"hasTruncateMarker":false,"authors":[{"name":"Zephyr","title":"Engineer","url":"https://github.com/zephyr-sh","imageURL":"https://github.com/zephyr-sh.png","key":"Zephyr"}],"frontMatter":{"slug":"ubuntu-install-ssh","title":"Setting Up SSH Server on Ubuntu","authors":"Zephyr","tags":["ubuntu","ssh"],"image":"/en/img/2023/0912.webp","description":"Tutorial on configuring ssh server."},"unlisted":false,"prevItem":{"title":"Setting Up PyPiServer on Ubuntu","permalink":"/en/blog/setting-up-pypiserver-on-ubuntu-with-docker"},"nextItem":{"title":"Automating GitHub Runner with Systemd","permalink":"/en/blog/ubuntu-github-runner-systemd"}},"content":"<figure>\\n![title](/img/2023/0912.webp)\\n<figcaption>Cover image: Automatically generated by GPT-4 after reading this article.</figcaption>\\n</figure>\\n\\n---\\n\\nSSH (Secure Shell) is a network protocol that allows users to securely access and manage remote servers.\\n\\nThis guide will walk you through setting up passwordless login.\\n\\n## 1. Install OpenSSH Server\\n\\nOpen a terminal.\\n\\nEnter the following commands to install the OpenSSH server:\\n\\n```bash\\nsudo apt update\\nsudo apt install openssh-server\\n```\\n\\n## 2. Check SSH Server Status\\n\\nUse the following command to check the status of the SSH server:\\n\\n```bash\\nsudo systemctl status ssh\\n```\\n\\nIf you see \\"Active: active (running)\\", then the SSH server has been successfully started.\\n\\n## 3. Configure SSH Passwordless Login:\\n\\n### 3.1 Generate SSH Key Pair on the Client\\n\\nOpen a terminal.\\n\\nEnter the following command to generate a key pair:\\n\\n```bash\\nssh-keygen\\n```\\n\\nFollow the prompts. The default settings are usually sufficient. You can press Enter when prompted for a passphrase to create a passphrase-less key pair.\\n\\n### 3.2 Copy the Public Key to the Server\\n\\nUse the `ssh-copy-id` command to copy the public key to the server. Replace `[username]` and `[server-ip]` with your server details.\\n\\n```bash\\nssh-copy-id [username]@[server-ip]\\n```\\n\\nFor example:\\n\\n```bash\\nssh-copy-id john@192.168.0.100\\n```\\n\\nIf the server is using a non-default SSH port (e.g., 2222), use the `-p` parameter:\\n\\n```bash\\nssh-copy-id -p 2222 john@192.168.0.100\\n```\\n\\nThis command will prompt you for the server\'s password.\\n\\nOnce the authentication is successful, your public key will be added to the `~/.ssh/authorized_keys` file on the server.\\n\\n### 3.3 Test Passwordless Login\\n\\nTry SSHing into the server:\\n\\n```bash\\nssh [username]@[server-ip]\\n```\\n\\nIf everything is configured correctly, you should be able to log in to the server without a password.\\n\\n## Notes\\n\\nUsing SSH key authentication indeed enhances security and convenience, but make sure not to lose your private key.\\n\\nIt\'s recommended to regularly rotate or update your SSH keys. For added security, consider disabling password authentication.\\n\\nThis can be configured in `/etc/ssh/sshd_config` on the server:\\n\\n- `PasswordAuthentication no`.\\n\\nOnce you\'ve completed the above steps, you\'ll be able to log in to the server from the client without a password using SSH key authentication."},{"id":"ubuntu-github-runner-systemd","metadata":{"permalink":"/en/blog/ubuntu-github-runner-systemd","source":"@site/i18n/en/docusaurus-plugin-content-blog/2023/09-10-ubuntu-github-action-runner-systemd/index.md","title":"Automating GitHub Runner with Systemd","description":"Running automatically with Ubuntu Systemd.","date":"2023-09-10T00:00:00.000Z","tags":[{"inline":true,"label":"ubuntu","permalink":"/en/blog/tags/ubuntu"},{"inline":true,"label":"github-action","permalink":"/en/blog/tags/github-action"},{"inline":true,"label":"runner","permalink":"/en/blog/tags/runner"},{"inline":true,"label":"systemd","permalink":"/en/blog/tags/systemd"}],"readingTime":2.22,"hasTruncateMarker":false,"authors":[{"name":"Zephyr","title":"Engineer","url":"https://github.com/zephyr-sh","imageURL":"https://github.com/zephyr-sh.png","key":"Zephyr"}],"frontMatter":{"slug":"ubuntu-github-runner-systemd","title":"Automating GitHub Runner with Systemd","authors":"Zephyr","tags":["ubuntu","github-action","runner","systemd"],"image":"/en/img/2023/0910.webp","description":"Running automatically with Ubuntu Systemd."},"unlisted":false,"prevItem":{"title":"Setting Up SSH Server on Ubuntu","permalink":"/en/blog/ubuntu-install-ssh"},"nextItem":{"title":"Logging into RTF8207W Router","permalink":"/en/blog/login-rtf8207w"}},"content":"<figure>\\n![title](/img/2023/0910.webp)\\n<figcaption>Cover Image: Automatically generated by GPT-4 after reading this article</figcaption>\\n</figure>\\n\\n---\\n\\nIn our collaborative work using GitHub, we often utilize private hosts for CI/CD tasks. While GitHub provides documentation on how to install runners, following those steps might lead to instances where the host is rebooted, but the runner fails to start again.\\n\\nThis issue often slips through the cracks until someone notices the CI/CD isn\'t responding, prompting the reminder to manually start the service.\\n\\n**This cycle of forgetfulness is disruptive!**\\n\\nHence, automation is needed!\\n\\n- Documentation Illustration\\n\\n  ![github_set_runner](./img/github_set_runner.jpg)\\n\\n## Configuration Process\\n\\nTo automatically execute a task after the host boots up, systemd service can be employed.\\n\\n1. **Create a new systemd service file:**\\n\\n   ```bash\\n   sudo vim /etc/systemd/system/actions-runner.service\\n   ```\\n\\n2. **Paste the following content into the file:**\\n\\n   ```bash\\n   [Unit]\\n   Description=GitHub Action Runner\\n   After=network.target\\n\\n   [Service]\\n   Type=simple\\n   User=your_username\\n   WorkingDirectory=/home/your_username/actions-runner\\n   ExecStart=/home/your_username/actions-runner/run.sh\\n   Restart=always\\n   RestartSec=5\\n\\n   [Install]\\n   WantedBy=multi-user.target\\n   ```\\n\\n   _Note: Replace `User` and `WorkingDirectory` with your own username._\\n\\n3. **Inform systemd to reload the service configurations:**\\n\\n   ```bash\\n   sudo systemctl daemon-reload\\n   ```\\n\\n4. **Enable this service to start automatically during boot-up:**\\n\\n   ```bash\\n   sudo systemctl enable actions-runner.service\\n   ```\\n\\n5. **Now you can manually start this service or test it by rebooting:**\\n\\n   ```bash\\n   sudo systemctl start actions-runner.service\\n   ```\\n\\n   Using this method, the `actions-runner` will execute in the background upon booting up your host.\\n\\n   If you wish to stop the service, you can use the following command:\\n\\n   ```bash\\n   sudo systemctl stop actions-runner.service\\n   ```\\n\\n   _Note: Ensure `run.sh` has executable permissions._\\n\\n## Checking Status\\n\\nWhen managing services with systemd, you can\'t directly \\"attach\\" to a service to view its output. However, you can check the service\'s logs to understand its operational status. To view the logs of the `actions-runner` service, you can use the following command:\\n\\n```bash\\nsudo journalctl -u actions-runner.service -f\\n```\\n\\nExplanation:\\n\\n- `-u actions-runner.service`: Only view logs for the service named `actions-runner`.\\n- `-f`: This parameter allows `journalctl` to continuously track the latest logs, enabling you to see real-time output.\\n\\nFurthermore, if you want to check the current status of the service, you can use:\\n\\n```bash\\nsudo systemctl status actions-runner.service\\n```\\n\\nThis will display the current status of the `actions-runner` service, including whether it\'s running and recent log outputs:\\n\\n![action-service](./img/action-service.jpg)\\n\\n## Reconfiguration\\n\\nIf the original runner is lost, it\'s typically due to switching between public and private repositories, or if the runner hasn\'t been invoked for a long time. In any case, the original runner is lost, necessitating reconfiguration.\\n\\nIn such cases, navigate to the `actions-runner` directory, delete the `.runner` file, and then rerun:\\n\\n```bash\\n./config.sh --url ... (replace with new token configuration)\\n```\\n\\nThe remaining process remains the same. After configuration, restart the service, and you\'re good to go."},{"id":"login-rtf8207w","metadata":{"permalink":"/en/blog/login-rtf8207w","source":"@site/i18n/en/docusaurus-plugin-content-blog/2023/09-04-login-rtf8207w/index.md","title":"Logging into RTF8207W Router","description":"RTF8207W account and password.","date":"2023-09-04T00:00:00.000Z","tags":[{"inline":true,"label":"rtf8207w","permalink":"/en/blog/tags/rtf-8207-w"}],"readingTime":0.81,"hasTruncateMarker":false,"authors":[{"name":"Zephyr","title":"Engineer","url":"https://github.com/zephyr-sh","imageURL":"https://github.com/zephyr-sh.png","key":"Zephyr"}],"frontMatter":{"slug":"login-rtf8207w","title":"Logging into RTF8207W Router","authors":"Zephyr","tags":["rtf8207w"],"image":"/en/img/2023/0904.webp","description":"RTF8207W account and password."},"unlisted":false,"prevItem":{"title":"Automating GitHub Runner with Systemd","permalink":"/en/blog/ubuntu-github-runner-systemd"},"nextItem":{"title":"Fail2ban: Protecting SSH Service","permalink":"/en/blog/fail2ban-settings"}},"content":"<figure>\\n![title](/img/2023/0904.webp)\\n<figcaption>Cover Image: Automatically generated by GPT-4 after reading the article.</figcaption>\\n</figure>\\n\\n---\\n\\nToday, we\'re going to talk about logging into Chunghwa Telecom\'s little turtle, the RTF8207W modem.\\n\\nFirst off, the actual device doesn\'t look anything like the cover image; that\'s just a figment of GPT\'s imagination.\\n\\nBut I digress, let\'s get back to it:\\n\\n### 1. Accessing the Management Interface\\n\\nTypically, you can access it through a web browser by entering `192.168.1.1` or another IP address. The specific address might vary depending on your router model.\\n\\n![login-rtf8207w](./img/RTF8207W-login.jpg)\\n\\n### 2. Default Credentials\\n\\nUsually, the username is: `cht`, and the password is `last four digits of the model + last four digits of the MAC address`.\\n\\n![password](./img/RTF8207W.jpg)\\n\\n### 3. Logging In\\n\\nAnd then, you\'re free to do as you please.\\n\\n:::danger\\nIf you accidentally mess up the settings, causing a network collapse and loss of connection, please contact **Chunghwa Telecom technicians**.\\n\\nThis article is for reference only and assumes no responsibility.\\n:::"},{"id":"fail2ban-settings","metadata":{"permalink":"/en/blog/fail2ban-settings","source":"@site/i18n/en/docusaurus-plugin-content-blog/2023/09-03-fail2ban-settings/index.md","title":"Fail2ban: Protecting SSH Service","description":"Keeping the malicious out.","date":"2023-09-03T00:00:00.000Z","tags":[{"inline":true,"label":"ubuntu","permalink":"/en/blog/tags/ubuntu"},{"inline":true,"label":"fail2ban","permalink":"/en/blog/tags/fail-2-ban"}],"readingTime":1.79,"hasTruncateMarker":false,"authors":[{"name":"Zephyr","title":"Engineer","url":"https://github.com/zephyr-sh","imageURL":"https://github.com/zephyr-sh.png","key":"Zephyr"}],"frontMatter":{"slug":"fail2ban-settings","title":"Fail2ban: Protecting SSH Service","authors":"Zephyr","tags":["ubuntu","fail2ban"],"image":"/en/img/2023/0903.webp","description":"Keeping the malicious out."},"unlisted":false,"prevItem":{"title":"Logging into RTF8207W Router","permalink":"/en/blog/login-rtf8207w"},"nextItem":{"title":"Unicode Table","permalink":"/en/blog/unicode-table"}},"content":"<figure>\\n![title](/img/2023/0903.webp)\\n<figcaption>Cover Image: Automatically generated after reading this article by GPT-4</figcaption>\\n</figure>\\n\\n---\\n\\nAs soon as you successfully open an external SSH channel, you\'ll notice a barrage of malicious connections attempting to log into your host.\\n\\nA fundamental approach is to activate firewall blocking. Let\'s set it up quickly:\\n\\n- Malicious Attack Illustration\\n\\n  ![attack from ssh](./img/ban_1.jpg)\\n\\n## 1. Installation of Fail2ban\\n\\n**Fail2ban** is software designed to protect servers from brute force attacks. It automatically adjusts firewall rules to block attackers\' IP addresses when suspicious behavior, such as repeated login failures, occurs.\\n\\nOn most Linux distributions, you can install Fail2ban using package management tools.\\n\\nOn Ubuntu, you can use apt to install:\\n\\n```bash\\nsudo apt install fail2ban\\n```\\n\\n## 2. Configuration\\n\\nThe configuration file is located at `/etc/fail2ban/jail.conf`.\\n\\nIt\'s recommended not to modify this file directly but to make a copy named `jail.local` and edit it:\\n\\n```bash\\nsudo cp /etc/fail2ban/jail.conf /etc/fail2ban/jail.local\\n```\\n\\nEdit `jail.local`:\\n\\n```bash\\nsudo nano /etc/fail2ban/jail.local\\n```\\n\\n**Important configuration parameters:**\\n\\n- **ignoreip:** Ignored IP addresses or networks, e.g., 127.0.0.1/8\\n- **bantime:** Duration of the ban in seconds (default is 600 seconds)\\n- **findtime:** How many failures within this time frame (default is 600 seconds)\\n- **maxretry:** Maximum number of failed attempts allowed within findtime.\\n\\n## 3. Start and Monitor\\n\\nStart Fail2ban:\\n\\n```bash\\nsudo service fail2ban start\\n```\\n\\nCheck Fail2ban\'s status:\\n\\n```bash\\nsudo fail2ban-client status\\n```\\n\\n## 4. Adding Custom Rules\\n\\nIf you want to set specific rules for particular services (e.g., SSH or Apache), you can add or modify corresponding sections in `jail.local`, for example, SSH settings:\\n\\n```bash\\n[sshd]\\nenabled = true\\nport = ssh\\nfilter = sshd\\nlogpath = /var/log/auth.log\\nmaxretry = 3\\n```\\n\\n## 5. Testing\\n\\nAfter making configuration changes, restart Fail2ban to apply the changes:\\n\\n```bash\\nsudo service fail2ban restart\\n```\\n\\nThen, from another machine or using a different IP, attempt multiple failed logins to see if it gets blocked.\\n\\n## 6. Review\\n\\nEnsure to periodically check log files and update rules for the best protection.\\n\\n```bash\\nsudo fail2ban-client status sshd\\n```\\n\\n## Conclusion\\n\\nThe entire process is somewhat meticulous but not overly complex.\\n\\nHopefully, this guide helps you smoothly complete the setup."},{"id":"unicode-table","metadata":{"permalink":"/en/blog/unicode-table","source":"@site/i18n/en/docusaurus-plugin-content-blog/2023/09-02-unicode-table/index.md","title":"Unicode Table","description":"Unicode Table for easy reference.","date":"2023-09-02T00:00:00.000Z","tags":[{"inline":true,"label":"unicode","permalink":"/en/blog/tags/unicode"}],"readingTime":27.355,"hasTruncateMarker":false,"authors":[{"name":"Zephyr","title":"Engineer","url":"https://github.com/zephyr-sh","imageURL":"https://github.com/zephyr-sh.png","key":"Zephyr"}],"frontMatter":{"slug":"unicode-table","title":"Unicode Table","authors":"Zephyr","tags":["unicode"],"image":"/en/img/2023/0902.webp","description":"Unicode Table for easy reference."},"unlisted":false,"prevItem":{"title":"Fail2ban: Protecting SSH Service","permalink":"/en/blog/fail2ban-settings"},"nextItem":{"title":"Setting Up Selective Traffic Routing for VPN on Mac","permalink":"/en/blog/mac-selective-vpn-routing"}},"content":"<figure>\\n![title](/img/2023/0902.webp)\\n<figcaption>Cover Image: Automatically generated by GPT-4 after reading the article.</figcaption>\\n</figure>\\n\\n---\\n\\nUnicode is an international character encoding standard maintained by the non-profit organization Unicode Consortium. The standard aims to unify most of the world\'s writing systems to facilitate information exchange across platforms and languages. Unicode is an implementation of the ISO/IEC 10646 standard and has become a global universal character set.\\n\\nIn the Unicode standard, each character corresponds to a unique numerical code called a \\"code point.\\" Code points are a crucial concept in Unicode, used to determine the position of each distinct character.\\n\\nThe Unicode code point range extends from U+0000 to U+10FFFF, meaning it can accommodate 1,114,112 different characters. These ranges are divided into various subsets based on different functionalities and purposes, such as:\\n\\n- Basic Multilingual Plane (BMP): U+0000 to U+FFFF\\n\\n  This includes commonly used characters such as Latin letters, Greek letters, and Chinese characters.\\n\\n- Supplementary Planes: U+010000 to U+10FFFF\\n\\n  This includes additional ideographic characters, supplementary characters, etc.\\n\\nSince it often takes a considerable amount of time to look up Unicode encodings every time we need them, let\'s store some basic information for easy reference.\\n\\n## Unicode Code Point Range Table\\n\\nIf you require further details, we recommend consulting the original table: [**Unicode Code Points**](https://en.wikipedia.org/wiki/Unicode#Code_points)\\n\\n| Plane            | Code Point Range      | Chinese Name                     | English Name                                     |\\n| ---------------- | --------------------- | -------------------------------- | ------------------------------------------------ |\\n| &nbsp;0&nbsp;BMP | 0000 &#8211; 007F     | \u57fa\u672c\u62c9\u4e01\u5b57\u6bcd                     | Basic Latin                                      |\\n| &nbsp;0&nbsp;BMP | 0080 &#8211; 00FF     | \u62c9\u4e01\u5b57\u6bcd\u88dc\u5145-1                   | Latin-1 Supplement                               |\\n| &nbsp;0&nbsp;BMP | 0100 &#8211; 017F     | \u62c9\u4e01\u5b57\u6bcd\u64f4\u5c55-A                   | Latin Extended-A                                 |\\n| &nbsp;0&nbsp;BMP | 0180 &#8211; 024F     | \u62c9\u4e01\u5b57\u6bcd\u64f4\u5c55-B                   | Latin Extended-B                                 |\\n| &nbsp;0&nbsp;BMP | 0250 &#8211; 02AF     | \u570b\u969b\u97f3\u6a19\u64f4\u5c55                     | IPA Extensions                                   |\\n| &nbsp;0&nbsp;BMP | 02B0 &#8211; 02FF     | \u4f54\u4f4d\u4fee\u98fe\u7b26\u865f                     | Spacing Modifier Letters                         |\\n| &nbsp;0&nbsp;BMP | 0300 &#8211; 036F     | \u7d44\u5408\u9644\u52a0\u7b26\u865f                     | Combining Diacritical Marks                      |\\n| &nbsp;0&nbsp;BMP | 0370 &#8211; 03FF     | \u5e0c\u81d8\u5b57\u6bcd\u548c\u79d1\u666e\u7279\u5b57\u6bcd             | Greek and Coptic                                 |\\n| &nbsp;0&nbsp;BMP | 0400 &#8211; 04FF     | \u897f\u91cc\u723e\u5b57\u6bcd                       | Cyrillic                                         |\\n| &nbsp;0&nbsp;BMP | 0500 &#8211; 052F     | \u897f\u91cc\u723e\u5b57\u6bcd\u88dc\u5145                   | Cyrillic Supplement                              |\\n| &nbsp;0&nbsp;BMP | 0530 &#8211; 058F     | \u4e9e\u7f8e\u5c3c\u4e9e\u5b57\u6bcd                     | Armenian                                         |\\n| &nbsp;0&nbsp;BMP | 0590 &#8211; 05FF     | \u5e0c\u4f2f\u4f86\u6587\u5b57\u6bcd                     | Hebrew                                           |\\n| &nbsp;0&nbsp;BMP | 0600 &#8211; 06FF     | \u963f\u62c9\u4f2f\u6587\u5b57\u6bcd                     | Arabic                                           |\\n| &nbsp;0&nbsp;BMP | 0700 &#8211; 074F     | \u6558\u5229\u4e9e\u5b57\u6bcd                       | Syriac                                           |\\n| &nbsp;0&nbsp;BMP | 0750 &#8211; 077F     | \u963f\u62c9\u4f2f\u6587\u88dc\u5145                     | Arabic Supplement                                |\\n| &nbsp;0&nbsp;BMP | 0780 &#8211; 07BF     | \u5b83\u62ff\u5b57\u6bcd                         | Thaana                                           |\\n| &nbsp;0&nbsp;BMP | 07C0 &#8211; 07FF     | \u897f\u975e\u66f8\u9762\u6587\u5b57                     | NKo                                              |\\n| &nbsp;0&nbsp;BMP | 0800 &#8211; 083F     | \u6492\u746a\u5229\u4e9e\u5b57\u6bcd                     | Samaritan                                        |\\n| &nbsp;0&nbsp;BMP | 0840 &#8211; 085F     | \u66fc\u9054\u5b89\u5b57\u6bcd                       | Mandaic                                          |\\n| &nbsp;0&nbsp;BMP | 0860 &#8211; 086F     | \u6558\u5229\u4e9e\u6587\u88dc\u5145                     | Syriac Supplement                                |\\n| &nbsp;0&nbsp;BMP | 0870 &#8211; 089F     | \u963f\u62c9\u4f2f\u5b57\u6bcd\u64f4\u5c55-B                 | Arabic Extended-B                                |\\n| &nbsp;0&nbsp;BMP | 08A0 &#8211; 08FF     | \u963f\u62c9\u4f2f\u5b57\u6bcd\u64f4\u5c55-A                 | Arabic Extended-A                                |\\n| &nbsp;0&nbsp;BMP | 0900 &#8211; 097F     | \u5929\u57ce\u6587                           | Devanagari                                       |\\n| &nbsp;0&nbsp;BMP | 0980 &#8211; 09FF     | \u5b5f\u52a0\u62c9\u6587                         | Bengali                                          |\\n| &nbsp;0&nbsp;BMP | 0A00 &#8211; 0A7F     | \u53e4\u6728\u57fa\u6587                         | Gurmukhi                                         |\\n| &nbsp;0&nbsp;BMP | 0A80 &#8211; 0AFF     | \u53e4\u5409\u62c9\u7279\u6587                       | Gujarati                                         |\\n| &nbsp;0&nbsp;BMP | 0B00 &#8211; 0B7F     | \u5967\u91cc\u4e9e\u6587                         | Oriya                                            |\\n| &nbsp;0&nbsp;BMP | 0B80 &#8211; 0BFF     | \u6cf0\u7c73\u723e\u6587                         | Tamil                                            |\\n| &nbsp;0&nbsp;BMP | 0C00 &#8211; 0C7F     | \u6cf0\u76e7\u56fa\u6587                         | Telugu                                           |\\n| &nbsp;0&nbsp;BMP | 0C80 &#8211; 0CFF     | \u5361\u7d0d\u9054\u6587                         | Kannada                                          |\\n| &nbsp;0&nbsp;BMP | 0D00 &#8211; 0D7F     | \u99ac\u62c9\u96c5\u62c9\u59c6\u6587                     | Malayalam                                        |\\n| &nbsp;0&nbsp;BMP | 0D80 &#8211; 0DFF     | \u50e7\u4f3d\u7f85\u6587                         | Sinhala                                          |\\n| &nbsp;0&nbsp;BMP | 0E00 &#8211; 0E7F     | \u6cf0\u6587                             | Thai                                             |\\n| &nbsp;0&nbsp;BMP | 0E80 &#8211; 0EFF     | \u5bee\u6587                             | Lao                                              |\\n| &nbsp;0&nbsp;BMP | 0F00 &#8211; 0FFF     | \u85cf\u6587                             | Tibetan                                          |\\n| &nbsp;0&nbsp;BMP | 1000 &#8211; 109F     | \u7dec\u7538\u6587                           | Myanmar                                          |\\n| &nbsp;0&nbsp;BMP | 10A0 &#8211; 10FF     | \u55ac\u6cbb\u4e9e\u5b57\u6bcd                       | Georgian                                         |\\n| &nbsp;0&nbsp;BMP | 1100 &#8211; 11FF     | \u8afa\u6587\u5b57\u6bcd                         | Hangul Jamo                                      |\\n| &nbsp;0&nbsp;BMP | 1200 &#8211; 137F     | \u8863\u7d22\u6bd4\u4e9e\u5b57\u6bcd                     | Ethiopic                                         |\\n| &nbsp;0&nbsp;BMP | 1380 &#8211; 139F     | \u8863\u7d22\u6bd4\u4e9e\u5b57\u6bcd\u88dc\u5145                 | Ethiopic Supplement                              |\\n| &nbsp;0&nbsp;BMP | 13A0 &#8211; 13FF     | \u5207\u7f85\u57fa\u6587                         | Cherokee                                         |\\n| &nbsp;0&nbsp;BMP | 1400 &#8211; 167F     | \u7d71\u4e00\u52a0\u62ff\u5927\u539f\u4f4f\u6c11\u97f3\u7bc0\u6587\u5b57         | Unified Canadian Aboriginal Syllabics            |\\n| &nbsp;0&nbsp;BMP | 1680 &#8211; 169F     | \u6b50\u7518\u5b57\u6bcd                         | Ogham                                            |\\n| &nbsp;0&nbsp;BMP | 16A0 &#8211; 16FF     | \u76e7\u6069\u5b57\u6bcd                         | Runic                                            |\\n| &nbsp;0&nbsp;BMP | 1700 &#8211; 171F     | \u4ed6\u52a0\u797f\u5b57\u6bcd                       | Tagalog                                          |\\n| &nbsp;0&nbsp;BMP | 1720 &#8211; 173F     | \u54c8\u52aa\u8afe\u6587                         | Hanunoo                                          |\\n| &nbsp;0&nbsp;BMP | 1740 &#8211; 175F     | \u5e03\u5e0c\u5fb7\u5b57\u6bcd                       | Buhid                                            |\\n| &nbsp;0&nbsp;BMP | 1760 &#8211; 177F     | \u5854\u683c\u73ed\u74e6\u5b57\u6bcd                     | Tagbanwa                                         |\\n| &nbsp;0&nbsp;BMP | 1780 &#8211; 17FF     | \u9ad8\u68c9\u6587                           | Khmer                                            |\\n| &nbsp;0&nbsp;BMP | 1800 &#8211; 18AF     | \u8499\u53e4\u6587                           | Mongolian                                        |\\n| &nbsp;0&nbsp;BMP | 18B0 &#8211; 18FF     | \u7d71\u4e00\u52a0\u62ff\u5927\u539f\u4f4f\u6c11\u97f3\u7bc0\u6587\u5b57\u64f4\u5145     | Unified Canadian Aboriginal Syllabics Extended   |\\n| &nbsp;0&nbsp;BMP | 1900 &#8211; 194F     | \u6797\u5e03\u6587                           | Limbu                                            |\\n| &nbsp;0&nbsp;BMP | 1950 &#8211; 197F     | \u5fb7\u5b8f\u50a3\u6587                         | Tai Le                                           |\\n| &nbsp;0&nbsp;BMP | 1980 &#8211; 19DF     | \u65b0\u50a3\u4ec2\u6587                         | New Tai Le                                       |\\n| &nbsp;0&nbsp;BMP | 19E0 &#8211; 19FF     | \u9ad8\u68c9\u6587\u7b26\u865f                       | Khmer Symbols                                    |\\n| &nbsp;0&nbsp;BMP | 1A00 &#8211; 1A1F     | \u5e03\u5409\u6587                           | Buginese                                         |\\n| &nbsp;0&nbsp;BMP | 1A20 &#8211; 1AAF     | \u8001\u50a3\u6587                           | Tai Tham                                         |\\n| &nbsp;0&nbsp;BMP | 1AB0 &#8211; 1AFF     | \u7d44\u5408\u9644\u52a0\u7b26\u865f\u64f4\u5c55                 | Combining Diacritical Marks Extended             |\\n| &nbsp;0&nbsp;BMP | 1B00 &#8211; 1B7F     | \u5cc7\u91cc\u5b57\u6bcd                         | Balinese                                         |\\n| &nbsp;0&nbsp;BMP | 1B80 &#8211; 1BBF     | \u5dfd\u4ed6\u5b57\u6bcd                         | Sundanese                                        |\\n| &nbsp;0&nbsp;BMP | 1BC0 &#8211; 1BFF     | \u5df4\u5854\u514b\u5b57\u6bcd                       | Batak                                            |\\n| &nbsp;0&nbsp;BMP | 1C00 &#8211; 1C4F     | \u7d68\u5df4\u6587                           | Lepcha                                           |\\n| &nbsp;0&nbsp;BMP | 1C50 &#8211; 1C7F     | \u6851\u5854\u5229\u6587                         | Ol Chiki                                         |\\n| &nbsp;0&nbsp;BMP | 1C80 &#8211; 1C8F     | \u897f\u91cc\u723e\u5b57\u6bcd\u64f4\u5c55-C                 | Cyrillic Extended-C                              |\\n| &nbsp;0&nbsp;BMP | 1C90 &#8211; 1CBF     | \u55ac\u6cbb\u4e9e\u5b57\u6bcd\u64f4\u5c55                   | Georgian Extended                                |\\n| &nbsp;0&nbsp;BMP | 1CC0 &#8211; 1CCF     | \u5dfd\u4ed6\u5b57\u6bcd\u88dc\u5145                     | Sundanese Supplement                             |\\n| &nbsp;0&nbsp;BMP | 1CD0 &#8211; 1CFF     | \u5420\u9640\u64f4\u5c55                         | Vedic Extensions                                 |\\n| &nbsp;0&nbsp;BMP | 1D00 &#8211; 1D7F     | \u97f3\u6a19\u64f4\u5c55                         | Phonetic Extensions                              |\\n| &nbsp;0&nbsp;BMP | 1D80 &#8211; 1DBF     | \u97f3\u6a19\u64f4\u5c55\u88dc\u5145                     | Phonetic Extensions Supplement                   |\\n| &nbsp;0&nbsp;BMP | 1DC0 &#8211; 1DFF     | \u7d44\u5408\u9644\u52a0\u7b26\u865f\u88dc\u5145                 | Combining Diacritical Marks Supplement           |\\n| &nbsp;0&nbsp;BMP | 1E00 &#8211; 1EFF     | \u62c9\u4e01\u5b57\u6bcd\u64f4\u5c55\u9644\u52a0                 | Latin Extended Additional                        |\\n| &nbsp;0&nbsp;BMP | 1F00 &#8211; 1FFF     | \u5e0c\u81d8\u5b57\u6bcd\u64f4\u5c55                     | Greek Extended                                   |\\n| &nbsp;0&nbsp;BMP | 2000 &#8211; 206F     | \u4e00\u822c\u6a19\u9ede                         | General Punctuation                              |\\n| &nbsp;0&nbsp;BMP | 2070 &#8211; 209F     | \u4e0a\u6a19\u53ca\u4e0b\u6a19                       | Superscripts and Subscripts                      |\\n| &nbsp;0&nbsp;BMP | 20A0 &#8211; 20CF     | \u8ca8\u5e63\u7b26\u865f                         | Currency Symbols                                 |\\n| &nbsp;0&nbsp;BMP | 20D0 &#8211; 20FF     | \u7b26\u865f\u7528\u7d44\u5408\u9644\u52a0\u7b26\u865f               | Combining Diacritical Marks for Symbols          |\\n| &nbsp;0&nbsp;BMP | 2100 &#8211; 214F     | \u985e\u5b57\u6bcd\u7b26\u865f                       | Letterlike Symbols                               |\\n| &nbsp;0&nbsp;BMP | 2150 &#8211; 218F     | \u6578\u5b57\u5f62\u5f0f                         | Number Forms                                     |\\n| &nbsp;0&nbsp;BMP | 2190 &#8211; 21FF     | \u7bad\u982d                             | Arrows                                           |\\n| &nbsp;0&nbsp;BMP | 2200 &#8211; 22FF     | \u6578\u5b78\u904b\u7b97\u5b50                       | Mathematical Operators                           |\\n| &nbsp;0&nbsp;BMP | 2300 &#8211; 23FF     | \u96dc\u9805\u6280\u8853\u7b26\u865f                     | Miscellaneous Technical                          |\\n| &nbsp;0&nbsp;BMP | 2400 &#8211; 243F     | \u63a7\u5236\u5716\u5f62                         | Control Pictures                                 |\\n| &nbsp;0&nbsp;BMP | 2440 &#8211; 245F     | \u5149\u5b78\u5b57\u5143\u8b58\u5225                     | Optical Character Recognition                    |\\n| &nbsp;0&nbsp;BMP | 2460 &#8211; 24FF     | \u570d\u7e5e\u5b57\u6bcd\u6578\u5b57                     | Enclosed Alphanumerics                           |\\n| &nbsp;0&nbsp;BMP | 2500 &#8211; 257F     | \u5236\u8868\u7b26                           | Box Drawing                                      |\\n| &nbsp;0&nbsp;BMP | 2580 &#8211; 259F     | \u65b9\u584a\u5143\u7d20                         | Block Elements                                   |\\n| &nbsp;0&nbsp;BMP | 25A0 &#8211; 25FF     | \u5e7e\u4f55\u5716\u5f62                         | Geometric Shapes                                 |\\n| &nbsp;0&nbsp;BMP | 2600 &#8211; 26FF     | \u96dc\u9805\u7b26\u865f                         | Miscellaneous Symbols                            |\\n| &nbsp;0&nbsp;BMP | 2700 &#8211; 27BF     | \u88dd\u98fe\u7b26\u865f                         | Dingbats                                         |\\n| &nbsp;0&nbsp;BMP | 27C0 &#8211; 27EF     | \u96dc\u9805\u6578\u5b78\u7b26\u865f-A                   | Miscellaneous Mathematical Symbols-A             |\\n| &nbsp;0&nbsp;BMP | 27F0 &#8211; 27FF     | \u8ffd\u52a0\u7bad\u982d-A                       | Supplemental Arrows-A                            |\\n| &nbsp;0&nbsp;BMP | 2800 &#8211; 28FF     | \u9ede\u5b57\u5716\u6848                         | Braille Patterns                                 |\\n| &nbsp;0&nbsp;BMP | 2900 &#8211; 297F     | \u8ffd\u52a0\u7bad\u982d-B                       | Supplemental Arrows-B                            |\\n| &nbsp;0&nbsp;BMP | 2980 &#8211; 29FF     | \u96dc\u9805\u6578\u5b78\u7b26\u865f-B                   | Miscellaneous Mathematical Symbols-B             |\\n| &nbsp;0&nbsp;BMP | 2A00 &#8211; 2AFF     | \u88dc\u5145\u6578\u5b78\u904b\u7b97\u5b50                   | Supplemental Mathematical Operators              |\\n| &nbsp;0&nbsp;BMP | 2B00 &#8211; 2BFF     | \u96dc\u9805\u7b26\u865f\u548c\u7bad\u982d                   | Miscellaneous Symbols and Arrows                 |\\n| &nbsp;0&nbsp;BMP | 2C00 &#8211; 2C5F     | \u683c\u62c9\u54e5\u91cc\u5b57\u6bcd                     | Glagolitic                                       |\\n| &nbsp;0&nbsp;BMP | 2C60 &#8211; 2C7F     | \u62c9\u4e01\u5b57\u6bcd\u64f4\u5c55-C                   | Latin Extended-C                                 |\\n| &nbsp;0&nbsp;BMP | 2C80 &#8211; 2CFF     | \u79d1\u666e\u7279\u5b57\u6bcd                       | Coptic                                           |\\n| &nbsp;0&nbsp;BMP | 2D00 &#8211; 2D2F     | \u55ac\u6cbb\u4e9e\u5b57\u6bcd\u88dc\u5145                   | Georgian Supplement                              |\\n| &nbsp;0&nbsp;BMP | 2D30 &#8211; 2D7F     | \u63d0\u975e\u7d0d\u6587                         | Tifinagh                                         |\\n| &nbsp;0&nbsp;BMP | 2D80 &#8211; 2DDF     | \u8863\u7d22\u6bd4\u4e9e\u5b57\u6bcd\u64f4\u5145                 | Ethiopic Extended                                |\\n| &nbsp;0&nbsp;BMP | 2DE0 &#8211; 2DFF     | \u897f\u91cc\u723e\u5b57\u6bcd\u64f4\u5c55-A                 | Cyrillic Extended-A                              |\\n| &nbsp;0&nbsp;BMP | 2E00 &#8211; 2E7F     | \u88dc\u5145\u6a19\u9ede                         | Supplemental Punctuation                         |\\n| &nbsp;0&nbsp;BMP | 2E80 &#8211; 2EFF     | \u4e2d\u65e5\u97d3\u6f22\u5b57\u90e8\u9996\u88dc\u5145               | CJK Radicals Supplement                          |\\n| &nbsp;0&nbsp;BMP | 2F00 &#8211; 2FDF     | \u5eb7\u7199\u90e8\u9996                         | Kangxi Radicals                                  |\\n| &nbsp;0&nbsp;BMP | 2FF0 &#8211; 2FFF     | \u8868\u610f\u6587\u5b57\u63cf\u8ff0\u5b57\u5143                 | Ideographic Description Characters               |\\n| &nbsp;0&nbsp;BMP | 3000 &#8211; 303F     | \u4e2d\u65e5\u97d3\u7b26\u865f\u548c\u6a19\u9ede                 | CJK Symbols and Punctuation                      |\\n| &nbsp;0&nbsp;BMP | 3040 &#8211; 309F     | \u5e73\u5047\u540d                           | Hiragana                                         |\\n| &nbsp;0&nbsp;BMP | 30A0 &#8211; 30FF     | \u7247\u5047\u540d                           | Katakana                                         |\\n| &nbsp;0&nbsp;BMP | 3100 &#8211; 312F     | \u6ce8\u97f3\u7b26\u865f                         | Bopomofo                                         |\\n| &nbsp;0&nbsp;BMP | 3130 &#8211; 318F     | \u8afa\u6587\u76f8\u5bb9\u5b57\u6bcd                     | Hangul Compatibility Jamo                        |\\n| &nbsp;0&nbsp;BMP | 3190 &#8211; 319F     | \u6f22\u6587\u8a13\u8b80\u7b26\u865f                     | Kanbun                                           |\\n| &nbsp;0&nbsp;BMP | 31A0 &#8211; 31BF     | \u6ce8\u97f3\u7b26\u865f\u64f4\u5c55                     | Bopomofo Extended                                |\\n| &nbsp;0&nbsp;BMP | 31C0 &#8211; 31EF     | \u4e2d\u65e5\u97d3\u7b46\u756b                       | CJK Strokes                                      |\\n| &nbsp;0&nbsp;BMP | 31F0 &#8211; 31FF     | \u7247\u5047\u540d\u8a9e\u97f3\u64f4\u5c55                   | Katakana Phonetic Extensions                     |\\n| &nbsp;0&nbsp;BMP | 3200 &#8211; 32FF     | \u4e2d\u65e5\u97d3\u570d\u7e5e\u5b57\u5143\u53ca\u6708\u4efd             | Enclosed CJK Letters and Months                  |\\n| &nbsp;0&nbsp;BMP | 3300 &#8211; 33FF     | \u4e2d\u65e5\u97d3\u76f8\u5bb9\u5b57\u5143                   | CJK Compatibility                                |\\n| &nbsp;0&nbsp;BMP | 3400 &#8211; 4DBF     | \u4e2d\u65e5\u97d3\u7d71\u4e00\u8868\u610f\u6587\u5b57\u64f4\u5145\u5340 A       | CJK Unified Ideographs Extension A               |\\n| &nbsp;0&nbsp;BMP | 4DC0 &#8211; 4DFF     | \u6613\u7d93\u516d\u5341\u56db\u5366\u7b26\u865f                 | Yijing Hexagram Symbols                          |\\n| &nbsp;0&nbsp;BMP | 4E00 &#8211; 9FFF     | \u4e2d\u65e5\u97d3\u7d71\u4e00\u8868\u610f\u6587\u5b57&nbsp;(\u57fa\u672c\u5340) | CJK Unified Ideographs                           |\\n| &nbsp;0&nbsp;BMP | A000 &#8211; A48F     | \u5f5d\u6587\u97f3\u7bc0                         | Yi Syllables                                     |\\n| &nbsp;0&nbsp;BMP | A490 &#8211; A4CF     | \u5f5d\u6587\u90e8\u9996                         | Yi Radicals                                      |\\n| &nbsp;0&nbsp;BMP | A4D0 &#8211; A4FF     | \u5088\u50f3\u6587                           | Lisu                                             |\\n| &nbsp;0&nbsp;BMP | A500 &#8211; A63F     | \u74e6\u4f0a\u6587                           | Vai                                              |\\n| &nbsp;0&nbsp;BMP | A640 &#8211; A69F     | \u897f\u91cc\u723e\u5b57\u6bcd\u64f4\u5c55-B                 | Cyrillic Extended-B                              |\\n| &nbsp;0&nbsp;BMP | A6A0 &#8211; A6FF     | \u5df4\u59c6\u7a46\u6587\u5b57                       | Bamum                                            |\\n| &nbsp;0&nbsp;BMP | A700 &#8211; A71F     | \u8072\u8abf\u4fee\u98fe\u7b26\u865f                     | Modifier Tone Letters                            |\\n| &nbsp;0&nbsp;BMP | A720 &#8211; A7FF     | \u62c9\u4e01\u5b57\u6bcd\u64f4\u5c55-D                   | Latin Extended-D                                 |\\n| &nbsp;0&nbsp;BMP | A800 &#8211; A82F     | \u932b\u723e\u8d6b\u7279\u6587                       | Syloti Nagri                                     |\\n| &nbsp;0&nbsp;BMP | A830 &#8211; A83F     | \u901a\u7528\u5370\u5ea6\u6578\u5b57\u5f62\u5f0f                 | Common Indic Number Forms                        |\\n| &nbsp;0&nbsp;BMP | A840 &#8211; A87F     | \u516b\u601d\u5df4\u6587                         | Phags-pa                                         |\\n| &nbsp;0&nbsp;BMP | A880 &#8211; A8DF     | \u7d22\u62c9\u4ec0\u7279\u62c9\u6587                     | Saurashtra                                       |\\n| &nbsp;0&nbsp;BMP | A8E0 &#8211; A8FF     | \u5929\u57ce\u6587\u64f4\u5c55                       | Devanagari Extended                              |\\n| &nbsp;0&nbsp;BMP | A900 &#8211; A92F     | \u514b\u8036\u5b57\u6bcd                         | Kayah Li                                         |\\n| &nbsp;0&nbsp;BMP | A930 &#8211; A95F     | \u52d2\u59dc\u5b57\u6bcd                         | Rejang                                           |\\n| &nbsp;0&nbsp;BMP | A960 &#8211; A97F     | \u8afa\u6587\u5b57\u6bcd\u64f4\u5c55-A                   | Hangul Jamo Extended-A                           |\\n| &nbsp;0&nbsp;BMP | A980 &#8211; A9DF     | \u722a\u54c7\u5b57\u6bcd                         | Javanese                                         |\\n| &nbsp;0&nbsp;BMP | A9E0 &#8211; A9FF     | \u7dec\u7538\u6587\u64f4\u5c55-B                     | Myanmar Extended-B                               |\\n| &nbsp;0&nbsp;BMP | AA00 &#8211; AA5F     | \u5360\u6587                             | Cham                                             |\\n| &nbsp;0&nbsp;BMP | AA60 &#8211; AA7F     | \u7dec\u7538\u6587\u64f4\u5c55-A                     | Myanmar Extended-A                               |\\n| &nbsp;0&nbsp;BMP | AA80 &#8211; AADF     | \u50a3\u8d8a\u6587                           | Tai Viet                                         |\\n| &nbsp;0&nbsp;BMP | AAE0 &#8211; AAFF     | \u6885\u6cf0\u6587\u64f4\u5145                       | Meetei Mayek Extensions                          |\\n| &nbsp;0&nbsp;BMP | AB00 &#8211; AB2F     | \u8863\u7d22\u6bd4\u4e9e\u5b57\u6bcd\u64f4\u5145-A               | Ethiopic Extended-A                              |\\n| &nbsp;0&nbsp;BMP | AB30 &#8211; AB6F     | \u62c9\u4e01\u5b57\u6bcd\u64f4\u5c55-E                   | Latin Extended-E                                 |\\n| &nbsp;0&nbsp;BMP | AB70 &#8211; ABBF     | \u5207\u7f85\u57fa\u6587\u88dc\u5145                     | Cherokee Supplement                              |\\n| &nbsp;0&nbsp;BMP | ABC0 &#8211; ABFF     | \u6885\u6cf0\u6587                           | Meetei Mayek                                     |\\n| &nbsp;0&nbsp;BMP | AC00 &#8211; D7AF     | \u8afa\u6587\u97f3\u7bc0                         | Hangul Syllables                                 |\\n| &nbsp;0&nbsp;BMP | D7B0 &#8211; D7FF     | \u8afa\u6587\u5b57\u6bcd\u64f4\u5c55-B                   | Hangul Jamo Extended-B                           |\\n| &nbsp;0&nbsp;BMP | D800 &#8211; DB7F     | \u9ad8\u534a\u4ee3\u7528\u5340                       | High Surrogates                                  |\\n| &nbsp;0&nbsp;BMP | DB80 &#8211; DBFF     | \u9ad8\u534a\u79c1\u4eba\u4ee3\u7528\u5340                   | High Private Use Surrogates                      |\\n| &nbsp;0&nbsp;BMP | DC00 &#8211; DFFF     | \u4f4e\u534a\u4ee3\u7528\u5340                       | Low Surrogates                                   |\\n| &nbsp;0&nbsp;BMP | E000 &#8211; F8FF     | \u79c1\u7528\u5340                           | Private Use Area                                 |\\n| &nbsp;0&nbsp;BMP | F900 &#8211; FAFF     | \u4e2d\u65e5\u97d3\u76f8\u5bb9\u8868\u610f\u6587\u5b57               | CJK Compatibility Ideographs                     |\\n| &nbsp;0&nbsp;BMP | FB00 &#8211; FB4F     | \u5b57\u6bcd\u8868\u9054\u5f62\u5f0f                     | Alphabetic Presentation Forms                    |\\n| &nbsp;0&nbsp;BMP | FB50 &#8211; FDFF     | \u963f\u62c9\u4f2f\u5b57\u6bcd\u8868\u9054\u5f62\u5f0f-A             | Arabic Presentation Forms-A                      |\\n| &nbsp;0&nbsp;BMP | FE00 &#8211; FE0F     | \u8b8a\u9ad4\u9078\u64c7\u7b26                       | Variation Selectors                              |\\n| &nbsp;0&nbsp;BMP | FE10 &#8211; FE1F     | \u8c4e\u6392\u5f62\u5f0f                         | Vertical Forms                                   |\\n| &nbsp;0&nbsp;BMP | FE20 &#8211; FE2F     | \u7d44\u5408\u7528\u534a\u7b26\u865f                     | Combining Half Marks                             |\\n| &nbsp;0&nbsp;BMP | FE30 &#8211; FE4F     | \u4e2d\u65e5\u97d3\u76f8\u5bb9\u5f62\u5f0f                   | CJK Compatibility Forms                          |\\n| &nbsp;0&nbsp;BMP | FE50 &#8211; FE6F     | \u5c0f\u5beb\u8b8a\u9ad4\u5f62\u5f0f                     | Small Form Variants                              |\\n| &nbsp;0&nbsp;BMP | FE70 &#8211; FEFF     | \u963f\u62c9\u4f2f\u5b57\u6bcd\u8868\u9054\u5f62\u5f0f-B             | Arabic Presentation Forms-B                      |\\n| &nbsp;0&nbsp;BMP | FF00 &#8211; FFEF     | \u534a\u5f62\u53ca\u5168\u5f62\u5b57\u5143                   | Halfwidth and Fullwidth Forms                    |\\n| &nbsp;0&nbsp;BMP | FFF0 &#8211; FFFF     | \u7279\u6b8a                             | Specials                                         |\\n| &nbsp;1&nbsp;SMP | 10000 &#8211; 1007F   | \u7dda\u5f62\u6587\u5b57 B \u97f3\u7bc0\u6587\u5b57              | Linear B Syllabary                               |\\n| &nbsp;1&nbsp;SMP | 10080 &#8211; 100FF   | \u7dda\u5f62\u6587\u5b57 B \u8868\u610f\u6587\u5b57              | Linear B Ideograms                               |\\n| &nbsp;1&nbsp;SMP | 10100 &#8211; 1013F   | \u611b\u7434\u6d77\u6578\u5b57                       | Aegean Numbers                                   |\\n| &nbsp;1&nbsp;SMP | 10140 &#8211; 1018F   | \u53e4\u5e0c\u81d8\u6578\u5b57                       | Ancient Greek Numbers                            |\\n| &nbsp;1&nbsp;SMP | 10190 &#8211; 101CF   | \u53e4\u4ee3\u7b26\u865f                         | Ancient Symbols                                  |\\n| &nbsp;1&nbsp;SMP | 101D0 &#8211; 101FF   | \u6590\u65af\u6258\u65af\u5713\u76e4                     | Phaistos Disc                                    |\\n| &nbsp;1&nbsp;SMP | 10280 &#8211; 1029F   | \u5442\u57fa\u4e9e\u5b57\u6bcd                       | Lycian                                           |\\n| &nbsp;1&nbsp;SMP | 102A0 &#8211; 102DF   | \u5361\u91cc\u4e9e\u5b57\u6bcd                       | Carian                                           |\\n| &nbsp;1&nbsp;SMP | 102E0 &#8211; 102FF   | \u79d1\u666e\u7279\u958f\u9918\u6578\u5b57                   | Coptic Epact Numbers                             |\\n| &nbsp;1&nbsp;SMP | 10300 &#8211; 1032F   | \u53e4\u7fa9\u5927\u5229\u5b57\u6bcd                     | Old Italic                                       |\\n| &nbsp;1&nbsp;SMP | 10330 &#8211; 1034F   | \u54e5\u7279\u5b57\u6bcd                         | Gothic                                           |\\n| &nbsp;1&nbsp;SMP | 10350 &#8211; 1037F   | \u53e4\u5f7c\u723e\u59c6\u6587                       | Old Permic                                       |\\n| &nbsp;1&nbsp;SMP | 10380 &#8211; 1039F   | \u70cf\u52a0\u91cc\u7279\u5b57\u6bcd                     | Ugaritic                                         |\\n| &nbsp;1&nbsp;SMP | 103A0 &#8211; 103DF   | \u53e4\u6ce2\u65af\u6954\u5f62\u6587\u5b57                   | Old Persian                                      |\\n| &nbsp;1&nbsp;SMP | 10400 &#8211; 1044F   | \u5fb7\u745f\u96f7\u7279\u5b57\u6bcd                     | Deseret                                          |\\n| &nbsp;1&nbsp;SMP | 10450 &#8211; 1047F   | \u856d\u4f2f\u7d0d\u5b57\u6bcd                       | Shavian                                          |\\n| &nbsp;1&nbsp;SMP | 10480 &#8211; 104AF   | \u5967\u65af\u66fc\u4e9e\u5b57\u6bcd                     | Osmanya                                          |\\n| &nbsp;1&nbsp;SMP | 104B0 &#8211; 104FF   | \u6b50\u585e\u5947\u5b57\u6bcd                       | Osage                                            |\\n| &nbsp;1&nbsp;SMP | 10500 &#8211; 1052F   | \u611b\u723e\u5df4\u6851\u5b57\u6bcd                     | Elbasan                                          |\\n| &nbsp;1&nbsp;SMP | 10530 &#8211; 1056F   | \u9ad8\u52a0\u7d22\u963f\u723e\u5df4\u5c3c\u4e9e\u5b57\u6bcd             | Caucasian Albanian                               |\\n| &nbsp;1&nbsp;SMP | 10570 &#8211; 105BF   | \u7dad\u65af\u5eab\u5947\u6587                       | Vithkuqi                                         |\\n| &nbsp;1&nbsp;SMP | 10600 &#8211; 1077F   | \u7dda\u5f62\u6587\u5b57 A                       | Linear A                                         |\\n| &nbsp;1&nbsp;SMP | 10780 &#8211; 107BF   | \u62c9\u4e01\u5b57\u6bcd\u64f4\u5c55-F                   | Latin Extended-F                                 |\\n| &nbsp;1&nbsp;SMP | 10800 &#8211; 1083F   | \u8cfd\u666e\u52d2\u65af\u97f3\u7bc0\u6587\u5b57                 | Cypriot Syllabary                                |\\n| &nbsp;1&nbsp;SMP | 10840 &#8211; 1085F   | \u5e1d\u570b\u4e9e\u62c9\u59c6\u6587                     | Imperial Aramaic                                 |\\n| &nbsp;1&nbsp;SMP | 10860 &#8211; 1087F   | \u5e15\u723e\u9081\u62c9\u5b57\u6bcd                     | Palmyrene                                        |\\n| &nbsp;1&nbsp;SMP | 10880 &#8211; 108AF   | \u7d0d\u5df4\u6cf0\u5b57\u6bcd                       | Nabataean                                        |\\n| &nbsp;1&nbsp;SMP | 108E0 &#8211; 108FF   | \u54c8\u7279\u62c9\u6587                         | Hatran                                           |\\n| &nbsp;1&nbsp;SMP | 10900 &#8211; 1091F   | \u8153\u5c3c\u57fa\u5b57\u6bcd                       | Phoenician                                       |\\n| &nbsp;1&nbsp;SMP | 10920 &#8211; 1093F   | \u5442\u5e95\u4e9e\u5b57\u6bcd                       | Lydian                                           |\\n| &nbsp;1&nbsp;SMP | 10980 &#8211; 1099F   | \u9ea5\u7f85\u57c3\u6587\u8056\u66f8\u9ad4                   | Meroitic Hieroglyphs                             |\\n| &nbsp;1&nbsp;SMP | 109A0 &#8211; 109FF   | \u9ea5\u7f85\u57c3\u6587\u8349\u66f8\u9ad4                   | Meroitic Cursive                                 |\\n| &nbsp;1&nbsp;SMP | 10A00 &#8211; 10A5F   | \u4f49\u76e7\u6587                           | Kharoshthi                                       |\\n| &nbsp;1&nbsp;SMP | 10A60 &#8211; 10A7F   | \u53e4\u5357\u963f\u62c9\u4f2f\u5b57\u6bcd                   | Old South Arabian                                |\\n| &nbsp;1&nbsp;SMP | 10A80 &#8211; 10A9F   | \u53e4\u5317\u963f\u62c9\u4f2f\u5b57\u6bcd                   | Old North Arabian                                |\\n| &nbsp;1&nbsp;SMP | 10AC0 &#8211; 10AFF   | \u6469\u5c3c\u5b57\u6bcd                         | Manichaean                                       |\\n| &nbsp;1&nbsp;SMP | 10B00 &#8211; 10B3F   | \u963f\u7dad\u65af\u9640\u5b57\u6bcd                     | Avestan                                          |\\n| &nbsp;1&nbsp;SMP | 10B40 &#8211; 10B5F   | \u7891\u523b\u5e15\u63d0\u4e9e\u6587                     | Inscriptional Parthian                           |\\n| &nbsp;1&nbsp;SMP | 10B60 &#8211; 10B7F   | \u7891\u523b\u5df4\u5217\u7dad\u6587                     | Inscriptional Pahlavi                            |\\n| &nbsp;1&nbsp;SMP | 10B80 &#8211; 10BAF   | \u8a69\u7bc7\u5df4\u5217\u7dad\u6587                     | Psalter Pahlavi                                  |\\n| &nbsp;1&nbsp;SMP | 10C00 &#8211; 10C4F   | \u53e4\u7a81\u53a5\u6587                         | Old Turkic                                       |\\n| &nbsp;1&nbsp;SMP | 10C80 &#8211; 10CFF   | \u53e4\u5308\u7259\u5229\u5b57\u6bcd                     | Old Hungarian                                    |\\n| &nbsp;1&nbsp;SMP | 10D00 &#8211; 10D3F   | \u54c8\u4e43\u6590\u7f85\u8208\u4e9e\u6587\u5b57                 | Hanifi Rohingya                                  |\\n| &nbsp;1&nbsp;SMP | 10E60 &#8211; 10E7F   | \u76e7\u7c73\u6587\u6578\u5b57                       | Rumi Numeral Symbols                             |\\n| &nbsp;1&nbsp;SMP | 10E80 &#8211; 10EBF   | \u96c5\u8332\u8fea\u6587                         | Yezidi                                           |\\n| &nbsp;1&nbsp;SMP | 10EC0 &#8211; 10EFF   | \u963f\u62c9\u4f2f\u5b57\u6bcd\u64f4\u5c55-C                 | Arabic Extended-C                                |\\n| &nbsp;1&nbsp;SMP | 10F00 &#8211; 10F2F   | \u53e4\u7c9f\u7279\u5b57\u6bcd                       | Old Sogdian                                      |\\n| &nbsp;1&nbsp;SMP | 10F30 &#8211; 10F6F   | \u7c9f\u7279\u5b57\u6bcd                         | Sogdian                                          |\\n| &nbsp;1&nbsp;SMP | 10F70 &#8211; 10FAF   | \u56de\u9dbb\u5b57\u6bcd                         | Old Uyghur                                       |\\n| &nbsp;1&nbsp;SMP | 10FB0 &#8211; 10FDF   | \u82b1\u524c\u5b50\u6a21\u5b57\u6bcd                     | Chorasmian                                       |\\n| &nbsp;1&nbsp;SMP | 10FE0 &#8211; 10FFF   | \u57c3\u5229\u9081\u6587                         | Elymaic                                          |\\n| &nbsp;1&nbsp;SMP | 11000 &#8211; 1107F   | \u5a46\u7f85\u7c73\u6587                         | Brahmi                                           |\\n| &nbsp;1&nbsp;SMP | 11080 &#8211; 110CF   | \u51f1\u63d0\u6587                           | Kaithi                                           |\\n| &nbsp;1&nbsp;SMP | 110D0 &#8211; 110FF   | \u7d22\u62c9\u50e7\u5e73\u6587\u5b57                     | Sora Sompeng                                     |\\n| &nbsp;1&nbsp;SMP | 11100 &#8211; 1114F   | \u67e5\u514b\u99ac\u6587                         | Chakma                                           |\\n| &nbsp;1&nbsp;SMP | 11150 &#8211; 1117F   | \u99ac\u54c8\u4f73\u5c3c\u6587                       | Mahajani                                         |\\n| &nbsp;1&nbsp;SMP | 11180 &#8211; 111DF   | \u590f\u62c9\u9054\u6587                         | Sharada                                          |\\n| &nbsp;1&nbsp;SMP | 111E0 &#8211; 111FF   | \u53e4\u50e7\u4f3d\u7f85\u6587\u6578\u5b57                   | Sinhala Archaic Numbers                          |\\n| &nbsp;1&nbsp;SMP | 11200 &#8211; 1124F   | \u53ef\u5409\u6587                           | Khojki                                           |\\n| &nbsp;1&nbsp;SMP | 11280 &#8211; 112AF   | \u7a46\u723e\u5854\u5c3c\u6587                       | Multani                                          |\\n| &nbsp;1&nbsp;SMP | 112B0 &#8211; 112FF   | \u5eab\u9054\u74e6\u8fea\u6587                       | Khudawadi                                        |\\n| &nbsp;1&nbsp;SMP | 11300 &#8211; 1137F   | \u53e4\u862d\u5854\u6587                         | Grantha                                          |\\n| &nbsp;1&nbsp;SMP | 11400 &#8211; 1147F   | \u7d10\u74e6\u5b57\u6bcd                         | Newa                                             |\\n| &nbsp;1&nbsp;SMP | 11480 &#8211; 114DF   | \u5e95\u7f85\u50d5\u591a\u6587                       | Tirhuta                                          |\\n| &nbsp;1&nbsp;SMP | 11580 &#8211; 115FF   | \u6089\u66c7\u6587\u5b57                         | Siddham                                          |\\n| &nbsp;1&nbsp;SMP | 11600 &#8211; 1165F   | \u83ab\u8fea\u6587                           | Modi                                             |\\n| &nbsp;1&nbsp;SMP | 11660 &#8211; 1167F   | \u8499\u53e4\u6587\u88dc\u5145                       | Mongolian Supplement                             |\\n| &nbsp;1&nbsp;SMP | 11680 &#8211; 116CF   | \u5854\u514b\u91cc\u6587                         | Takri                                            |\\n| &nbsp;1&nbsp;SMP | 11700 &#8211; 1174F   | \u963f\u6d2a\u59c6\u6587                         | Ahom                                             |\\n| &nbsp;1&nbsp;SMP | 11800 &#8211; 1184F   | \u591a\u683c\u62c9\u6587                         | Dogra                                            |\\n| &nbsp;1&nbsp;SMP | 118A0 &#8211; 118FF   | \u74e6\u862d\u9f4a\u5730\u6587                       | Warang Citi                                      |\\n| &nbsp;1&nbsp;SMP | 11900 &#8211; 1195F   | \u5cf6\u5dbc\u5b57\u6bcd                         | Dhives Akuru (Dives Akuru)                       |\\n| &nbsp;1&nbsp;SMP | 119A0 &#8211; 119FF   | \u5357\u8fea\u57ce\u6587                         | Nandinagari                                      |\\n| &nbsp;1&nbsp;SMP | 11A00 &#8211; 11A4F   | \u672d\u90a3\u5df4\u672d\u723e\u65b9\u5f62\u5b57\u6bcd               | Zanabazar Square                                 |\\n| &nbsp;1&nbsp;SMP | 11A50 &#8211; 11AAF   | \u7d22\u6c38\u5e03\u6587\u5b57                       | Soyombo                                          |\\n| &nbsp;1&nbsp;SMP | 11AB0 &#8211; 11ABF   | \u52a0\u62ff\u5927\u539f\u4f4f\u6c11\u97f3\u7bc0\u6587\u5b57\u64f4\u5c55-A       | Unified Canadian Aboriginal Syllabics Extended-A |\\n| &nbsp;1&nbsp;SMP | 11AC0 &#8211; 11AFF   | \u5305\u6b3d\u8c6a\u6587                         | Pau Cin Hau                                      |\\n| &nbsp;1&nbsp;SMP | 11B00 &#8211; 11B5F   | \u5929\u57ce\u6587\u64f4\u5c55-A                     | Devanagari Extended-A                            |\\n| &nbsp;1&nbsp;SMP | 11C00 &#8211; 11C6F   | \u62dc\u514b\u8212\u57fa\u6587                       | Bhaiksuki                                        |\\n| &nbsp;1&nbsp;SMP | 11C70 &#8211; 11CBF   | \u746a\u6b3d\u6587                           | Marchen                                          |\\n| &nbsp;1&nbsp;SMP | 11D00 &#8211; 11D5F   | \u99ac\u85a9\u62c9\u59c6\u8ca2\u5fb7\u6587\u5b57                 | Masaram Gondi                                    |\\n| &nbsp;1&nbsp;SMP | 11D60 &#8211; 11DAF   | \u8ca2\u8cc8\u62c9\u8ca2\u5fb7\u6587\u5b57                   | Gunjala Gondi                                    |\\n| &nbsp;1&nbsp;SMP | 11EE0 &#8211; 11EFF   | \u671b\u52a0\u932b\u6587                         | Makasar                                          |\\n| &nbsp;1&nbsp;SMP | 11F00 &#8211; 11F5F   | \u5361\u7dad\u6587                           | Kawi                                             |\\n| &nbsp;1&nbsp;SMP | 11FB0 &#8211; 11FBF   | \u8001\u5088\u50f3\u6587\u88dc\u5145                     | Lisu Supplement                                  |\\n| &nbsp;1&nbsp;SMP | 11FC0 &#8211; 11FFF   | \u6cf0\u7c73\u723e\u6587\u88dc\u5145                     | Tamil Supplement                                 |\\n| &nbsp;1&nbsp;SMP | 12000 &#8211; 123FF   | \u6954\u5f62\u6587\u5b57                         | Cuneiform                                        |\\n| &nbsp;1&nbsp;SMP | 12400 &#8211; 1247F   | \u6954\u5f62\u6587\u5b57\u6578\u5b57\u548c\u6a19\u9ede\u7b26\u865f           | Cuneiform Numbers and Punctuation                |\\n| &nbsp;1&nbsp;SMP | 12480 &#8211; 1254F   | \u65e9\u671f\u738b\u671d\u6954\u5f62\u6587\u5b57                 | Early Dynastic Cuneiform                         |\\n| &nbsp;1&nbsp;SMP | 12F90 &#8211; 12FFF   | \u8cfd\u666e\u52d2\u65af-\u7c73\u8afe\u65af\u6587\u5b57              | Cypro-Minoan                                     |\\n| &nbsp;1&nbsp;SMP | 13000 &#8211; 1342F   | \u57c3\u53ca\u8056\u66f8\u9ad4                       | Egyptian Hieroglyphs                             |\\n| &nbsp;1&nbsp;SMP | 13430 &#8211; 1345F   | \u57c3\u53ca\u8056\u66f8\u9ad4\u683c\u5f0f\u63a7\u5236               | Egyptian Hieroglyph Format Controls              |\\n| &nbsp;1&nbsp;SMP | 14400 &#8211; 1467F   | \u5b89\u7d0d\u6258\u5229\u4e9e\u8c61\u5f62\u6587\u5b57               | Anatolian Hieroglyphs                            |\\n| &nbsp;1&nbsp;SMP | 16800 &#8211; 16A3F   | \u5df4\u59c6\u7a46\u6587\u5b57\u88dc\u5145                   | Bamum Supplement                                 |\\n| &nbsp;1&nbsp;SMP | 16A40 &#8211; 16A6F   | \u9ed8\u797f\u6587                           | Mro                                              |\\n| &nbsp;1&nbsp;SMP | 16A70 &#8211; 16ACF   | \u5510\u85a9\u6587                           | Tangsa                                           |\\n| &nbsp;1&nbsp;SMP | 16AD0 &#8211; 16AFF   | \u5df4\u85a9\u6587                           | Bassa Vah                                        |\\n| &nbsp;1&nbsp;SMP | 16B00 &#8211; 16B8F   | \u6551\u4e16\u82d7\u6587                         | Pahawh Hmong                                     |\\n| &nbsp;1&nbsp;SMP | 16E40 &#8211; 16E9F   | \u6885\u5fb7\u6cd5\u4f0a\u5fb7\u6797\u6587                   | Medefaidrin                                      |\\n| &nbsp;1&nbsp;SMP | 16F00 &#8211; 16F9F   | \u67cf\u683c\u7406\u82d7\u6587                       | Miao                                             |\\n| &nbsp;1&nbsp;SMP | 16FE0 &#8211; 16FFF   | \u8868\u610f\u7b26\u865f\u548c\u6a19\u9ede\u7b26\u865f               | Ideographic Symbols and Punctuation              |\\n| &nbsp;1&nbsp;SMP | 17000 &#8211; 187FF   | \u897f\u590f\u6587                           | Tangut                                           |\\n| &nbsp;1&nbsp;SMP | 18800 &#8211; 18AFF   | \u897f\u590f\u6587\u90e8\u4ef6                       | Tangut Components                                |\\n| &nbsp;1&nbsp;SMP | 18B00 &#8211; 18CFF   | \u5951\u4e39\u5c0f\u5b57                         | Khitan Small Script                              |\\n| &nbsp;1&nbsp;SMP | 18D00 &#8211; 18D7F   | \u897f\u590f\u6587\u88dc\u5145                       | Tangut Supplement                                |\\n| &nbsp;1&nbsp;SMP | 1AFF0 &#8211; 1AFFF   | \u5047\u540d\u64f4\u5c55-B                       | Kana Extended-B                                  |\\n| &nbsp;1&nbsp;SMP | 1B000 &#8211; 1B0FF   | \u5047\u540d\u88dc\u5145                         | Kana Supplement                                  |\\n| &nbsp;1&nbsp;SMP | 1B100 &#8211; 1B12F   | \u5047\u540d\u64f4\u5c55-A                       | Kana Extended-A                                  |\\n| &nbsp;1&nbsp;SMP | 1B130 &#8211; 1B16F   | \u5c0f\u578b\u5047\u540d\u64f4\u5145                     | Small Kana Extension                             |\\n| &nbsp;1&nbsp;SMP | 1B170 &#8211; 1B2FF   | \u5973\u66f8                             | Nushu                                            |\\n| &nbsp;1&nbsp;SMP | 1BC00 &#8211; 1BC9F   | \u675c\u666e\u96f7\u901f\u8a18                       | Duployan                                         |\\n| &nbsp;1&nbsp;SMP | 1BCA0 &#8211; 1BCAF   | \u901f\u8a18\u683c\u5f0f\u63a7\u5236\u7b26                   | Shorthand Format Controls                        |\\n| &nbsp;1&nbsp;SMP | 1CF00 &#8211; 1CFCF   | \u8d0a\u73ab\u5c3c\u8056\u6b4c\u97f3\u6a02\u7b26\u865f               | Znamenny Musical Notation                        |\\n| &nbsp;1&nbsp;SMP | 1D000 &#8211; 1D0FF   | \u62dc\u5360\u5ead\u97f3\u6a02\u7b26\u865f                   | Byzantine Musical Symbols                        |\\n| &nbsp;1&nbsp;SMP | 1D100 &#8211; 1D1FF   | \u97f3\u6a02\u7b26\u865f                         | Musical Symbols                                  |\\n| &nbsp;1&nbsp;SMP | 1D200 &#8211; 1D24F   | \u53e4\u5e0c\u81d8\u97f3\u6a02\u8a18\u865f                   | Ancient Greek Musical Notation                   |\\n| &nbsp;1&nbsp;SMP | 1D2C0 &#8211; 1D2DF   | \u5361\u514b\u6258\u7dad\u514b\u6578\u5b57                   | Kaktovik Numerals                                |\\n| &nbsp;1&nbsp;SMP | 1D2E0 &#8211; 1D2FF   | \u746a\u96c5\u6578\u5b57                         | Mayan Numerals                                   |\\n| &nbsp;1&nbsp;SMP | 1D300 &#8211; 1D35F   | \u592a\u7384\u7d93\u7b26\u865f                       | Tai Xuan Jing Symbols                            |\\n| &nbsp;1&nbsp;SMP | 1D360 &#8211; 1D37F   | \u7b97\u7c4c                             | Counting Rod Numerals                            |\\n| &nbsp;1&nbsp;SMP | 1D400 &#8211; 1D7FF   | \u5b57\u6bcd\u548c\u6578\u5b57\u7b26\u865f                   | Mathematical Alphanumeric Symbols                |\\n| &nbsp;1&nbsp;SMP | 1D800 &#8211; 1DAAF   | \u85a9\u9813\u66f8\u5beb\u7b26\u865f                     | Sutton SignWriting                               |\\n| &nbsp;1&nbsp;SMP | 1DF00 &#8211; 1DFFF   | \u62c9\u4e01\u5b57\u6bcd\u64f4\u5c55-G                   | Latin Extended-G                                 |\\n| &nbsp;1&nbsp;SMP | 1E000 &#8211; 1E02F   | \u683c\u62c9\u54e5\u91cc\u5b57\u6bcd\u88dc\u5145                 | Glagolitic Supplement                            |\\n| &nbsp;1&nbsp;SMP | 1E030 &#8211; 1E08F   | \u897f\u91cc\u723e\u5b57\u6bcd\u64f4\u5c55-D                 | Cyrillic Extended-D                              |\\n| &nbsp;1&nbsp;SMP | 1E100 &#8211; 1E14F   | \u5275\u4e16\u7d00\u82d7\u6587                       | Nyiakeng Puachue Hmong                           |\\n| &nbsp;1&nbsp;SMP | 1E290 &#8211; 1E2BF   | \u6295\u6295\u6587                           | Toto                                             |\\n| &nbsp;1&nbsp;SMP | 1E2C0 &#8211; 1E2FF   | \u6587\u55ac\u5b57\u6bcd                         | Wancho                                           |\\n| &nbsp;1&nbsp;SMP | 1E4D0 &#8211; 1E4FF   | \u8499\u9054\u91cc\u5b57\u6bcd                       | Nag Mundari                                      |\\n| &nbsp;1&nbsp;SMP | 1E7E0 &#8211; 1E7FF   | \u8863\u7d22\u6bd4\u4e9e\u5b57\u6bcd\u64f4\u5145-B               | Ethiopic Extended-B                              |\\n| &nbsp;1&nbsp;SMP | 1E800 &#8211; 1E8DF   | \u9580\u5fb7\u57fa\u5361\u5eab\u6587                     | Mende Kikakui                                    |\\n| &nbsp;1&nbsp;SMP | 1E900 &#8211; 1E95F   | \u963f\u5fb7\u62c9\u59c6\u5b57\u6bcd                     | Adlam                                            |\\n| &nbsp;1&nbsp;SMP | 1EC70 &#8211; 1ECBF   | \u5370\u5ea6\u897f\u4e9e\u683c\u6578\u5b57                   | Indic Siyaq Numbers                              |\\n| &nbsp;1&nbsp;SMP | 1ED00 &#8211; 1ED4F   | \u5967\u65af\u66fc\u897f\u4e9e\u683c\u6578\u5b57                 | Ottoman Siyaq Numbers                            |\\n| &nbsp;1&nbsp;SMP | 1EE00 &#8211; 1EEFF   | \u963f\u62c9\u4f2f\u5b57\u6bcd\u6578\u5b57\u7b26\u865f               | Arabic Mathematical Alphabetic Symbols           |\\n| &nbsp;1&nbsp;SMP | 1F000 &#8211; 1F02F   | \u9ebb\u5c07\u724c                           | Mahjong Tiles                                    |\\n| &nbsp;1&nbsp;SMP | 1F030 &#8211; 1F09F   | \u591a\u7c73\u8afe\u9aa8\u724c                       | Domino Tiles                                     |\\n| &nbsp;1&nbsp;SMP | 1F0A0 &#8211; 1F0FF   | \u64b2\u514b\u724c                           | Playing Cards                                    |\\n| &nbsp;1&nbsp;SMP | 1F100 &#8211; 1F1FF   | \u570d\u7e5e\u5b57\u6bcd\u6578\u5b57\u88dc\u5145                 | Enclosed Alphanumeric Supplement                 |\\n| &nbsp;1&nbsp;SMP | 1F200 &#8211; 1F2FF   | \u570d\u7e5e\u8868\u610f\u6587\u5b57\u88dc\u5145                 | Enclosed Ideographic Supplement                  |\\n| &nbsp;1&nbsp;SMP | 1F300 &#8211; 1F5FF   | \u96dc\u9805\u7b26\u865f\u548c\u8c61\u5f62\u6587\u5b57               | Miscellaneous Symbols and Pictographs            |\\n| &nbsp;1&nbsp;SMP | 1F600 &#8211; 1F64F   | \u8868\u60c5\u7b26\u865f                         | Emoticons                                        |\\n| &nbsp;1&nbsp;SMP | 1F650 &#8211; 1F67F   | \u88dd\u98fe\u7b26\u865f                         | Ornamental Dingbats                              |\\n| &nbsp;1&nbsp;SMP | 1F680 &#8211; 1F6FF   | \u4ea4\u901a\u548c\u5730\u5716\u7b26\u865f                   | Transport and Map Symbols                        |\\n| &nbsp;1&nbsp;SMP | 1F700 &#8211; 1F77F   | \u934a\u91d1\u8853\u7b26\u865f                       | Alchemical Symbols                               |\\n| &nbsp;1&nbsp;SMP | 1F780 &#8211; 1F7FF   | \u5e7e\u4f55\u5716\u5f62\u64f4\u5c55                     | Geometric Shapes Extended                        |\\n| &nbsp;1&nbsp;SMP | 1F800 &#8211; 1F8FF   | \u8ffd\u52a0\u7bad\u982d-C                       | Supplemental Arrows-C                            |\\n| &nbsp;1&nbsp;SMP | 1F900 &#8211; 1F9FF   | \u88dc\u5145\u7b26\u865f\u548c\u8c61\u5f62\u6587\u5b57               | Supplemental Symbols and Pictographs             |\\n| &nbsp;1&nbsp;SMP | 1FA00 &#8211; 1FA6F   | \u68cb\u985e\u7b26\u865f                         | Chess Symbols                                    |\\n| &nbsp;1&nbsp;SMP | 1FA70 &#8211; 1FAFF   | \u7b26\u865f\u548c\u8c61\u5f62\u6587\u5b57\u64f4\u5145-A             | Symbols and Pictographs Extended-A               |\\n| &nbsp;1&nbsp;SMP | 1FB00 &#8211; 1FBFF   | \u907a\u7559\u8a08\u7b97\u7b26\u865f                     | Symbols for Legacy Computing                     |\\n| &nbsp;2&nbsp;SIP | 20000 &#8211; 2A6DF   | \u4e2d\u65e5\u97d3\u7d71\u4e00\u8868\u610f\u6587\u5b57\u64f4\u5145\u5340 B       | CJK Unified Ideographs Extension B               |\\n| &nbsp;2&nbsp;SIP | 2A700 &#8211; 2B73F   | \u4e2d\u65e5\u97d3\u7d71\u4e00\u8868\u610f\u6587\u5b57\u64f4\u5145\u5340 C       | CJK Unified Ideographs Extension C               |\\n| &nbsp;2&nbsp;SIP | 2B740 &#8211; 2B81F   | \u4e2d\u65e5\u97d3\u7d71\u4e00\u8868\u610f\u6587\u5b57\u64f4\u5145\u5340 D       | CJK Unified Ideographs Extension D               |\\n| &nbsp;2&nbsp;SIP | 2B820 &#8211; 2CEAF   | \u4e2d\u65e5\u97d3\u7d71\u4e00\u8868\u610f\u6587\u5b57\u64f4\u5145\u5340 E       | CJK Unified Ideographs Extension E               |\\n| &nbsp;2&nbsp;SIP | 2CEB0 &#8211; 2EBEF   | \u4e2d\u65e5\u97d3\u7d71\u4e00\u8868\u610f\u6587\u5b57\u64f4\u5145\u5340 F       | CJK Unified Ideographs Extension F               |\\n| &nbsp;2&nbsp;SIP | 2F800 &#8211; 2FA1F   | \u4e2d\u65e5\u97d3\u76f8\u5bb9\u8868\u610f\u6587\u5b57\u88dc\u5145\u5340         | CJK Compatibility Ideographs Supplement          |\\n| &nbsp;3&nbsp;TIP | 30000 &#8211; 3134F   | \u4e2d\u65e5\u97d3\u7d71\u4e00\u8868\u610f\u6587\u5b57\u64f4\u5145\u5340 G       | CJK Unified Ideographs Extension G               |\\n| &nbsp;3&nbsp;TIP | 31350 &#8211; 323AF   | \u4e2d\u65e5\u97d3\u7d71\u4e00\u8868\u610f\u6587\u5b57\u64f4\u5145\u5340 H       | CJK Unified Ideographs Extension H               |\\n| 14&nbsp;SSP      | E0000 &#8211; E007F   | \u6a19\u7c64                             | Tags                                             |\\n| 14&nbsp;SSP      | E0100 &#8211; E01EF   | \u8b8a\u9ad4\u9078\u64c7\u7b26\u88dc\u5145                   | Variation Selectors Supplement                   |\\n| 15&nbsp;PUA-A    | F0000 &#8211; FFFFF   | \u88dc\u5145\u79c1\u4eba\u4f7f\u7528\u5340-A                 | Supplementary Private Use Area-A                 |\\n| 16&nbsp;PUA-B    | 100000 &#8211; 10FFFF | \u88dc\u5145\u79c1\u4eba\u4f7f\u7528\u5340-B                 | Supplementary Private Use Area-B                 |\\n\\n## References\\n\\n- [Unicode Character Planes](<https://en.wikipedia.org/wiki/Plane_(Unicode)>)\\n- [Unicode Code Points](https://en.wikipedia.org/wiki/Unicode#Code_points)"},{"id":"mac-selective-vpn-routing","metadata":{"permalink":"/en/blog/mac-selective-vpn-routing","source":"@site/i18n/en/docusaurus-plugin-content-blog/2023/09-01-mac-selective-vpn-routing/index.md","title":"Setting Up Selective Traffic Routing for VPN on Mac","description":"Configuring VPN routing on Mac.","date":"2023-09-01T00:00:00.000Z","tags":[{"inline":true,"label":"routing","permalink":"/en/blog/tags/routing"},{"inline":true,"label":"vpn","permalink":"/en/blog/tags/vpn"},{"inline":true,"label":"macos","permalink":"/en/blog/tags/macos"}],"readingTime":2.39,"hasTruncateMarker":false,"authors":[{"name":"Zephyr","title":"Engineer","url":"https://github.com/zephyr-sh","imageURL":"https://github.com/zephyr-sh.png","key":"Zephyr"}],"frontMatter":{"slug":"mac-selective-vpn-routing","title":"Setting Up Selective Traffic Routing for VPN on Mac","authors":"Zephyr","tags":["routing","vpn","macos"],"image":"/en/img/2023/0901.webp","description":"Configuring VPN routing on Mac."},"unlisted":false,"prevItem":{"title":"Unicode Table","permalink":"/en/blog/unicode-table"},"nextItem":{"title":"Privacy Policy","permalink":"/en/blog/privacy-policy"}},"content":"<figure>\\n![title](/img/2023/0901.webp)\\n<figcaption>Cover Image: Automatically generated after reading this article by GPT-4</figcaption>\\n</figure>\\n\\n---\\n\\nWhen working from home using a company-configured VPN, it\'s common to still need access to other local machines. For instance:\\n\\n- Company VPN subnet: 192.168.25.XXX\\n- Home subnet: 192.168.1.XXX\\n\\nWhen you open the VPN, all traffic typically routes through the company\'s subnet, preventing access to other devices on your home network.\\n\\nMoreover, innocently watching a funny video at home might unexpectedly draw the attention of your company\'s network administrators.\\n\\nThat doesn\'t sound right, does it?\\n\\nSo, what we want to do is: **route VPN traffic only to the company subnet, while letting other traffic go through the local network.**\\n\\n:::info\\nI assume you\'ve already set up your VPN and it\'s working fine; we\'re just addressing the routing issue here.\\n:::\\n\\n## Solving the Issue\\n\\nFirst, identify the internal network of your company, for example:\\n\\n192.168.25.XXX\\n\\nThen, let\'s open a file:\\n\\n```bash\\nsudo vim /etc/ppp/ip-up\\n```\\n\\nEnter the following content, but remember to replace it with your subnet:\\n\\n:::warning\\nNote that the examples here assume the VPN subnet is 192.168.25.XXX; adjust as necessary.\\n:::\\n\\n```bash\\n#!/bin/sh\\n/sbin/route add -net 192.168.25.0/24 -interface ppp0\\n```\\n\\nHere\'s a brief explanation of the above command:\\n\\n1. **/sbin/route**\\n\\n   This is the path to the route command, used to set up and display the routing table in a network.\\n\\n2. **-net 192.168.25.0/24**\\n\\n   This parameter specifies a network route rather than a host route. 192.168.25.0/24 is the network address and subnet mask, representing the range of IP addresses from 192.168.25.0 to 192.168.25.255.\\n\\n3. **-interface ppp0**\\n\\n   Specifies through which network interface the route should pass. In this example, it\'s ppp0 (Point-to-Point Protocol interface 0).\\n\\nThe entire command adds a route to the 192.168.25.0/24 network via the ppp0 interface. When your system tries to access any IP address in the 192.168.25.0/24 network, it will route the traffic through the ppp0 interface.\\n\\nNext, save and exit the file, and give it permissions:\\n\\n```bash\\nsudo chmod 755 /etc/ppp/ip-up\\n```\\n\\n## Still Not Working?\\n\\nIf some machines still can\'t access the internet, let\'s proceed with the following steps:\\n\\nOpen System Preferences on macOS, navigate to Network, as shown below:\\n\\n- Step 1: Open System Preferences, click on \\"Network\\"\\n- Step 2: Click on the cog icon\\n- Step 3: Select \\"Set Service Order\\"\\n- Step 4: Drag the VPN below Wi-Fi\\n\\n![vpn-setting](./img/vpn-setting.jpg)\\n\\nThe reason for this step is that after configuring the VPN, it may be set to the top of the service order, meaning all traffic is routed through the VPN. By moving the VPN down, the network settings above can take effect.\\n\\nThat\'s it! If there are other types of traffic that need to go through the VPN, simply add the appropriate routes to the ip-up file.\\n\\n## References\\n\\n1. [shalyf/vpn_route.md](https://gist.github.com/shalyf/d50b0bbf30a4b5020d2b84f4ae8eb4e0)\\n2. [How to selectively route network traffic through VPN on Mac OS X Leopard?](https://superuser.com/questions/4904/how-to-selectively-route-network-traffic-through-vpn-on-mac-os-x-leopard)"},{"id":"privacy-policy","metadata":{"permalink":"/en/blog/privacy-policy","source":"@site/i18n/en/docusaurus-plugin-content-blog/2023/08-23-privacy-policy/index.md","title":"Privacy Policy","description":"Privacy Policy","date":"2023-08-23T00:00:00.000Z","tags":[{"inline":true,"label":"privacy-policy","permalink":"/en/blog/tags/privacy-policy"}],"readingTime":5.5,"hasTruncateMarker":false,"authors":[{"name":"Zephyr","title":"Engineer","url":"https://github.com/zephyr-sh","imageURL":"https://github.com/zephyr-sh.png","key":"Zephyr"}],"frontMatter":{"slug":"privacy-policy","title":"Privacy Policy","authors":"Zephyr","tags":["privacy-policy"],"image":"/en/img/2023/08232.webp","description":"Privacy Policy"},"unlisted":false,"prevItem":{"title":"Setting Up Selective Traffic Routing for VPN on Mac","permalink":"/en/blog/mac-selective-vpn-routing"},"nextItem":{"title":"Terms of Service","permalink":"/en/blog/terms-of-service"}},"content":"Welcome to DOCSAID, hereinafter referred to as the Website. We value your privacy and are committed to protecting your personal information. Please read the following Privacy Policy carefully before using this website to understand our information collection, use, and protection practices.\\n\\n## 1. Scope of Application\\n\\nThis Privacy Policy applies to all instances where you visit the Website, use our services, and engage in related interactions. Please note that this policy does not cover external links that may be included within this Website, nor does it apply to third-party websites not commissioned or managed by us. We recommend reading the privacy policies of other websites before accessing them to ensure you understand how they handle your personal information.\\n\\nWe emphasize that we only collect, use, and protect your personal information as described in this Privacy Policy. If you do not agree with this policy, please refrain from using the services and features provided by this Website.\\n\\nWe regularly review and update this Privacy Policy to ensure its consistency with our data processing practices and legal regulations. These changes will be announced on the Website, so we recommend checking regularly for the latest information.\\n\\n## 2. Collection and Use of Data\\n\\nWhen you use this Website, we may ask you to provide specific personal information to enhance your service experience.\\n\\nThe following are some types of information that may be collected:\\n\\n- Name, email address, contact information: When you use our interactive features, such as registering an account, filling out surveys, or using email, we may collect this information to communicate with you and provide relevant support and services.\\n- IP address, browser type, usage time: We may automatically collect your IP address, browser type, visit time, and other access log information. This information helps us improve website performance, enhance service quality, and ensure website security.\\n- We may also conduct statistical analysis on data such as survey responses, but we ensure that these statistical results are anonymous and do not involve specific personal identities.\\n\\n## 3. Information Security\\n\\nWe understand the importance of protecting your personal data from unauthorized access, use, or disclosure. Therefore, we have adopted various technologies and procedures to ensure the security of your information. The following are the security measures we have taken:\\n\\n- Data encryption: We use encryption technology to protect sensitive information during transmission. This means that information is encrypted when it is transmitted from your device to our servers and vice versa, reducing the risk of unauthorized access.\\n- Access control: We implement strict access controls, only granting authorized employees and service providers access to your personal information. These individuals undergo rigorous identity verification and can only access relevant information when performing specific tasks.\\n- Password protection: Your account information and related data may be password protected. We strongly recommend choosing strong and unique passwords, regularly changing passwords, and not disclosing passwords to others.\\n- Security audits: We conduct regular security audits to ensure that our systems and processes are robust enough to address evolving threats and risks.\\n\\nAlthough we have taken various measures to protect your information, please understand that the internet is not an entirely secure environment. You should remain vigilant and avoid disclosing your personal information in unverified circumstances.\\n\\nIf you believe your account security is compromised or discover any security vulnerabilities, please notify us immediately so that we can take appropriate measures to protect your information.\\n\\n## 4. External Links\\n\\nOur website may contain links to other websites or services that are unrelated to us and may have their own privacy policies. We provide these links for your convenience to access more information about relevant topics. However, please note that when you click on these external links, you will leave this Website, and we are not responsible for the use of information on the websites these links lead to.\\n\\nWe strongly recommend reading the privacy policies of the relevant websites before visiting any external links to ensure you understand how they collect, use, and share your personal information. We cannot control the information collection practices of these external websites, so we advise caution when providing any personal information on these websites.\\n\\nIf you access other websites through our website, we recommend reading and understanding the privacy policy of that website to ensure your privacy is adequately protected.\\n\\n## 5. Data Sharing\\n\\nWe are committed to protecting your personal data and respecting your privacy.\\n\\nWe will not sell, exchange, or transfer your personal information to any unrelated third parties without your explicit permission.\\n\\nYour personal information may only be shared in the following cases:\\n\\n- Your consent: In certain situations, we may request your explicit consent to share your information with third parties. For example, when you participate in promotional activities or cooperative programs, we may need to share your relevant information to complete related matters.\\n- Legal requirements: We have an obligation to comply with applicable laws and regulations, including but not limited to court orders, legal proceedings, or government requests. In these situations, we may share your information to fulfill our legal obligations and legal procedures.\\n- Public safety purposes: We may share your personal information to protect public safety and prevent fraud, security incidents, or illegal activities. This may include sharing information with law enforcement agencies, government agencies, or other relevant organizations.\\n\\nIn any case, we will make every reasonable effort to ensure that your personal information is adequately protected. We will not share your information lightly and will adhere to applicable laws and regulations and best practices in handling data sharing matters.\\n\\n## 6. Cookie Technology\\n\\nTo provide a better user experience, we may use cookies and similar technologies on your device. Cookies are small text files that are stored in your browser on your device and are used to record information about your visits and interactions. This information may include visit times, visited pages, device information, etc.\\n\\nWe use cookies primarily for the following purposes:\\n\\n- Provide personalized user experience: Cookies allow us to remember your preferences and choices, thereby providing more personalized content and functionality when you revisit.\\n- Analysis and improvement: We use cookies to analyze website usage patterns, understand usage habits, and page interactions, which helps us improve website performance and functionality.\\n\\nYou can manage cookie settings in your browser according to your preferences. Most browsers allow you to control, manage, or delete cookies. However, please note that disabling or limiting cookies may affect the functionality and user experience of some websites. If you choose to disable or limit cookies, you may not fully experience all the features provided by this Website."},{"id":"terms-of-service","metadata":{"permalink":"/en/blog/terms-of-service","source":"@site/i18n/en/docusaurus-plugin-content-blog/2023/08-23-terms-of-service/index.md","title":"Terms of Service","description":"Terms of Service","date":"2023-08-23T00:00:00.000Z","tags":[{"inline":true,"label":"terms-of-service","permalink":"/en/blog/tags/terms-of-service"}],"readingTime":9.705,"hasTruncateMarker":false,"authors":[{"name":"Zephyr","title":"Engineer","url":"https://github.com/zephyr-sh","imageURL":"https://github.com/zephyr-sh.png","key":"Zephyr"}],"frontMatter":{"slug":"terms-of-service","title":"Terms of Service","authors":"Zephyr","tags":["terms-of-service"],"image":"/en/img/2023/08231.webp","description":"Terms of Service"},"unlisted":false,"prevItem":{"title":"Privacy Policy","permalink":"/en/blog/privacy-policy"}},"content":"We strongly recommend that you regularly review these Terms of Service to ensure that you always maintain an understanding of them, as we may make modifications or updates in the future. We hope you have a pleasant browsing experience on the DOCSAID website and respect and comply with the standards we have set.\\n\\nThis website is owned and operated by DOCSAID. Before using this website, we suggest that you carefully read and understand these Terms of Service to ensure that you fully understand your rights and responsibilities. This not only helps protect your interests but also helps ensure that this website can provide a safe and efficient environment for all users.\\n\\nThe purpose of these Terms of Service is to ensure the normal operation of this website and provide clear usage guidelines for users. These terms also reflect our commitment to users and our determination to ensure a good online environment.\\n\\n## 1. Intellectual Property Rights\\n\\nAll content, images, text, graphics, logos, icons, audio works, video works, and other materials (hereinafter referred to as \\"Materials\\") contained on this website are protected by intellectual property laws, including but not limited to copyright, trademark, patent, design rights, and trade secrets.\\n\\n- Copyright: The materials on this website, including but not limited to text, images, and videos, are protected by copyright law. This means that you may not use, copy, modify, or distribute these materials without explicit permission.\\n- Trademark Rights: All trademarks, logos, and trade names on this website are protected by trademark law. These trademarks and logos may be registered trademarks of the DOCSAID website or its affiliated entities, or may enjoy legal protection in specific jurisdictions. You may not use, replicate, or confuse these trademarks and logos without authorization.\\n- Patent Rights: If this website contains materials related to patents, these patent rights may cover the technologies, products, or processes described on this website. Any unauthorized use, manufacture, or sale of these patented materials may constitute infringement of patent rights.\\n- Trade Secrets: This website may contain trade secrets of DOCSAID website or third parties, such as processes, methods, or technologies. You agree not to use, disclose, or otherwise misuse these trade secrets.\\n\\nYou may view, access, and use the materials on this website as long as you do not violate these Terms of Service, but you may not infringe on these intellectual property rights in any form. If you have any questions or allegations regarding intellectual property rights, please contact us, and we will respond promptly and take appropriate action.\\n\\n## 2. Restrictions\\n\\nWhen using this website, you will be subject to the following restrictions:\\n\\n- You may not publish website materials on any other media.\\n- You may not sell, sublicense, or otherwise commercialize website materials.\\n- You may not use this website in any way that may damage the website.\\n- You may not interfere with other users\' access to the website.\\n- You may not engage in any activities on this website that violate laws or regulations or cause harm to the website.\\n- You may not engage in any data mining, data collection, data extraction, or similar activities related to this website.\\n- You may not engage in any form of advertising or marketing activities on this website.\\n- DOCSAID website reserves the right to restrict your access to certain areas at any time. Please keep your user ID and password strictly confidential to ensure their security.\\n\\n## 3. Your Content\\n\\nUnder these Terms of Service, \\"Your Content\\" refers to the audio files, videos, text, images, or other materials that you choose to display, upload, or share on the DOCSAID website. You grant the Docsaid website a non-exclusive, global, irrevocable, and sublicensable right to use, reproduce, adapt, publish, translate, and distribute your content in any media to meet various needs.\\n\\nYou ensure that all content you provide has the necessary rights and authorizations and does not infringe on third-party intellectual property rights or other rights. You promise that your content does not involve illegal, obscene, defamatory, insulting, discriminatory, or privacy-infringing content.\\n\\nSubject to compliance with laws and regulations, the DOCSAID website reserves the right to delete, remove, or make Your Content private without prior notice. We will ensure the legality and appropriateness of website content based on our judgment.\\n\\nYou understand that the DOCSAID website is not responsible for Your Content, and you are responsible for the legality and truthfulness of your content. If your content violates these Terms of Service or causes legal issues, you are solely responsible for the legal consequences.\\n\\n## 4. Your Privacy\\n\\nPlease read our [Privacy Policy](https://docsaid.org/en/blog/privacy-policy).\\n\\n## 5. No Warranty\\n\\nThe content of this website is provided \\"as is\\" and may contain errors, inaccuracies, or outdated information. The DOCSAID website expressly disclaims any form of representation, warranty, or guarantee regarding this website or the materials contained herein, whether express or implied.\\n\\nYou understand and agree that you use this website at your own risk. The content on this website is for general information and reference only and does not constitute professional advice or opinions. The DOCSAID website makes no warranties or representations regarding the accuracy, completeness, reliability, or applicability of the content on this website.\\n\\nYou should assess and assume the risks of using the content on this website and consult appropriate professionals for specific advice when necessary. The DOCSAID website shall not be liable for any damages, losses, or expenses incurred as a result of using or relying on the content of this website.\\n\\nUnder no circumstances shall the DOCSAID website be liable for any direct, indirect, incidental, special, punitive, or consequential damages resulting from your use of this website, even if you have been advised of the possibility of such damages.\\n\\n## 6. Limitation of Liability\\n\\nUnder no circumstances shall the senior management, directors, employees, agents, subsidiaries, or other affiliated entities (hereinafter referred to as \\"Affiliated Parties\\") of the DOCSAID website be liable for any damages, losses, or expenses incurred as a result of your use or inability to use this website, including but not limited to browsing, accessing, downloading, or relying on the content of this website.\\n\\nRegardless of whether based on contract, tort (including negligence), strict liability, or other circumstances, the Affiliated Parties shall not be liable for any direct, indirect, specific, incidental, or consequential damages arising from:\\n\\n- Your use or inability to use this website.\\n- The accuracy, completeness, or reliability of the content on this website.\\n- Any products, services, or information purchased, obtained, or used through this website.\\n- Unauthorized access to or alteration of your data transmissions.\\n- Any statements or actions of third parties on this website.\\n\\nYou expressly agree that all risks associated with using this website are entirely your own. To the extent permitted by law, the Affiliated Parties shall not be liable for any losses or damages arising from your use or reliance on this website.\\n\\n## 7. Indemnification\\n\\nYou agree that if your violation of these Terms of Service causes loss, damage, expenses, litigation, claims, or other legal liabilities to the DOCSAID website or its affiliates (including but not limited to its management, directors, employees, representatives, subsidiaries, or other related entities), you shall be fully responsible for and compensate for this.\\n\\nThis indemnification includes but is not limited to: legal fees, litigation costs, attorney fees, expert consulting fees, and all other expenses related to resolving disputes arising from your breach. Furthermore, you agree not to oppose or refuse to cooperate and will provide all necessary support to assist the DOCSAID website and its affiliates in resolving any litigation, claims, or other legal matters arising from your breach.\\n\\nYou acknowledge and agree that you will fully compensate the DOCSAID website and its affiliates for any losses in any legal jurisdiction or litigation venue. Additionally, you explicitly acknowledge that this indemnification commitment will not be subject to any form of limitation, ensuring that the DOCSAID website and its affiliates receive appropriate legal compensation and protection of rights.\\n\\n## 8. Severability\\n\\nIf, under applicable law, any provision of these Terms of Service is deemed invalid, illegal, or unenforceable, that specific provision shall be deemed removed, but this shall not affect the validity or enforceability of the remaining provisions.\\n\\nIn such cases, we will endeavor to amend or replace the invalidated provision to ensure that the original intent and purpose of the Terms of Service are maintained. Even if certain provisions are deemed inapplicable or invalid for specific reasons, the remaining portions of these Terms of Service shall remain in full force and effect.\\n\\nThe severability of these Terms of Service ensures that even if certain provisions are legally deemed invalid, it will not impede the validity and binding effect of your rights and obligations under these Terms of Service.\\n\\n## 9. Changes to Terms of Service\\n\\nThe DOCSAID website reserves the right to update or modify these Terms of Service at any time it deems necessary without prior notice. Once changes are made, the new Terms of Service will be announced on this website, and such modifications will be effective immediately upon posting.\\n\\nWe recommend that you regularly review these Terms of Service to ensure that you are always aware of their contents and possible changes. By continuing to use the website after the Terms have been updated, you indicate your acceptance and agreement to these changes.\\n\\nWhile the DOCSAID website may choose to publish notices or directly notify you of significant changes to the Terms in certain circumstances, we still encourage you to review the Terms each time you visit to ensure you have a clear understanding of the latest version.\\n\\n## 10. Assignment\\n\\nThe DOCSAID website reserves the right to transfer its rights, obligations, or applicable rights under these Terms of Service to third parties at any time without prior notice to you. Such transfers may occur for various reasons, such as mergers, acquisitions, or changes in website operation and management.\\n\\nConversely, you may not transfer, assign, or donate any rights, obligations, or applicable rights under these Terms of Service to any third party without the prior written consent of the DOCSAID website. Any attempted transfer without confirmation from the DOCSAID website shall be deemed invalid.\\n\\nThe purpose of this transfer provision is to protect the DOCSAID website from the effects of unauthorized transfers and to ensure that you always clearly understand the rights and obligations under the Terms of Service.\\n\\n## 11. Entire Agreement\\n\\nThese Terms of Service provide a clear framework for the legal agreement between you and the DOCSAID website, ensuring that both parties have a complete understanding of their rights and responsibilities when using the website. This is not just a contract; it represents trust and integrity between you and DOCSAID.\\n\\nThe structure of these terms supersedes any prior oral or written agreements, thereby eliminating any uncertainties or ambiguities. Your choice to continue using the website signifies your acceptance and agreement to comply with these agreements, ensuring that interactions on the website are conducted on a basis of mutual respect and understanding.\\n\\nIf you do not accept these suggestions and provisions, the simplest solution is to choose not to use the DOCSAID website. However, if you choose to continue, we expect you to fully comply with these terms, and we look forward to every interaction you have on this platform being positive and constructive.\\n\\nFinally, the goal of the DOCSAID website is to provide all users with an efficient, fair, and secure platform. These Terms of Service are the cornerstone of ensuring this goal is achieved. We hope that every user will respect and cherish these regulations, creating a better online environment together."}]}}')}}]);