"use strict";(self.webpackChunkblog=self.webpackChunkblog||[]).push([[7392],{49622:(n,e,s)=>{s.r(e),s.d(e,{assets:()=>o,contentTitle:()=>t,default:()=>h,frontMatter:()=>d,metadata:()=>c,toc:()=>l});var i=s(74848),r=s(28453);const d={sidebar_position:6},t="Base64 Process",c={id:"docsaidkit/funcs/vision/improc/base64_process",title:"Base64 Process",description:"pybase64 is a Python library that provides functionality for Base64 encoding and decoding. It supports various encoding formats, including standard Base64, Base64 URL, and Base64 URL filename-safe encoding. pybase64 is an enhanced version based on the base64 module, offering additional features and options.",source:"@site/i18n/en/docusaurus-plugin-content-docs/current/docsaidkit/funcs/vision/improc/base64_process.md",sourceDirName:"docsaidkit/funcs/vision/improc",slug:"/docsaidkit/funcs/vision/improc/base64_process",permalink:"/en/docs/docsaidkit/funcs/vision/improc/base64_process",draft:!1,unlisted:!1,tags:[],version:"current",lastUpdatedBy:"zephyr-sh",lastUpdatedAt:1724335399e3,sidebarPosition:6,frontMatter:{sidebar_position:6},sidebar:"tutorialSidebar",previous:{title:"PNG Process",permalink:"/en/docs/docsaidkit/funcs/vision/improc/png_process"},next:{title:"imencode",permalink:"/en/docs/docsaidkit/funcs/vision/improc/imencode"}},o={},l=[{value:"img_to_b64",id:"img_to_b64",level:2},{value:"npy_to_b64",id:"npy_to_b64",level:2},{value:"npy_to_b64str",id:"npy_to_b64str",level:2},{value:"img_to_b64str",id:"img_to_b64str",level:2},{value:"b64_to_img",id:"b64_to_img",level:2},{value:"b64str_to_img",id:"b64str_to_img",level:2},{value:"b64_to_npy",id:"b64_to_npy",level:2},{value:"b64str_to_npy",id:"b64str_to_npy",level:2}];function a(n){const e={a:"a",blockquote:"blockquote",code:"code",h1:"h1",h2:"h2",header:"header",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,r.R)(),...n.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(e.header,{children:(0,i.jsx)(e.h1,{id:"base64-process",children:"Base64 Process"})}),"\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.code,{children:"pybase64"})," is a Python library that provides functionality for Base64 encoding and decoding. It supports various encoding formats, including standard Base64, Base64 URL, and Base64 URL filename-safe encoding. ",(0,i.jsx)(e.code,{children:"pybase64"})," is an enhanced version based on the ",(0,i.jsx)(e.code,{children:"base64"})," module, offering additional features and options."]}),"\n",(0,i.jsxs)(e.p,{children:["In image processing, we often need to convert image data into a Base64 encoded string for use in network transmission. ",(0,i.jsx)(e.code,{children:"pybase64"})," provides a convenient interface for performing Base64 encoding and decoding operations quickly, while also supporting multiple encoding formats to meet different requirements."]}),"\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsxs)(e.li,{children:["\n",(0,i.jsx)(e.p,{children:(0,i.jsx)(e.strong,{children:"Common Question: String vs. Byte String?"})}),"\n",(0,i.jsx)(e.p,{children:'In Python, a string is a Unicode character sequence, while a byte string is a sequence of "bytes." In Base64 encoding, we typically use byte strings for encoding and decoding operations because Base64 encoding operates on "byte" data.'}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(e.h2,{id:"img_to_b64",children:"img_to_b64"}),"\n",(0,i.jsxs)(e.blockquote,{children:["\n",(0,i.jsx)(e.p,{children:(0,i.jsx)(e.a,{href:"https://github.com/DocsaidLab/DocsaidKit/blob/71170598902b6f8e89a969f1ce27ed4fd05b2ff2/docsaidkit/vision/improc.py#L116",children:"img_to_b64(img: np.ndarray, IMGTYP: Union[str, int, IMGTYP] = IMGTYP.JPEG) -> Union[bytes, None]"})}),"\n"]}),"\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsxs)(e.li,{children:["\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.strong,{children:"Description"}),": Convert a NumPy image array to a Base64 byte string."]}),"\n"]}),"\n",(0,i.jsxs)(e.li,{children:["\n",(0,i.jsx)(e.p,{children:(0,i.jsx)(e.strong,{children:"Parameters"})}),"\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsxs)(e.li,{children:[(0,i.jsx)(e.strong,{children:"img"})," (",(0,i.jsx)(e.code,{children:"np.ndarray"}),"): The image array to be converted."]}),"\n",(0,i.jsxs)(e.li,{children:[(0,i.jsx)(e.strong,{children:"IMGTYP"})," (",(0,i.jsx)(e.code,{children:"Union[str, int, IMGTYP]"}),"): The type of the image. Supported types are ",(0,i.jsx)(e.code,{children:"IMGTYP.JPEG"})," and ",(0,i.jsx)(e.code,{children:"IMGTYP.PNG"}),". Default is ",(0,i.jsx)(e.code,{children:"IMGTYP.JPEG"}),"."]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(e.li,{children:["\n",(0,i.jsx)(e.p,{children:(0,i.jsx)(e.strong,{children:"Returns"})}),"\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsxs)(e.li,{children:[(0,i.jsx)(e.strong,{children:"bytes"}),": The converted Base64 byte string."]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(e.li,{children:["\n",(0,i.jsx)(e.p,{children:(0,i.jsx)(e.strong,{children:"Example"})}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-python",children:"import docsaidkit as D\n\nimg = D.imread('lena.png')\nb64 = D.img_to_b64(img, IMGTYP=D.IMGTYP.PNG)\n"})}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(e.h2,{id:"npy_to_b64",children:"npy_to_b64"}),"\n",(0,i.jsxs)(e.blockquote,{children:["\n",(0,i.jsx)(e.p,{children:(0,i.jsx)(e.a,{href:"https://github.com/DocsaidLab/DocsaidKit/blob/71170598902b6f8e89a969f1ce27ed4fd05b2ff2/docsaidkit/vision/improc.py#L126",children:"npy_to_b64(x: np.ndarray, dtype='float32') -> bytes"})}),"\n"]}),"\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsxs)(e.li,{children:["\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.strong,{children:"Description"}),": Convert a NumPy array to a Base64 byte string."]}),"\n"]}),"\n",(0,i.jsxs)(e.li,{children:["\n",(0,i.jsx)(e.p,{children:(0,i.jsx)(e.strong,{children:"Parameters"})}),"\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsxs)(e.li,{children:[(0,i.jsx)(e.strong,{children:"x"})," (",(0,i.jsx)(e.code,{children:"np.ndarray"}),"): The NumPy array to be converted."]}),"\n",(0,i.jsxs)(e.li,{children:[(0,i.jsx)(e.strong,{children:"dtype"})," (",(0,i.jsx)(e.code,{children:"str"}),"): Data type. Default is ",(0,i.jsx)(e.code,{children:"'float32'"}),"."]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(e.li,{children:["\n",(0,i.jsx)(e.p,{children:(0,i.jsx)(e.strong,{children:"Returns"})}),"\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsxs)(e.li,{children:[(0,i.jsx)(e.strong,{children:"bytes"}),": The converted Base64 byte string."]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(e.li,{children:["\n",(0,i.jsx)(e.p,{children:(0,i.jsx)(e.strong,{children:"Example"})}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-python",children:"import docsaidkit as D\nimport numpy as np\n\nx = np.random.rand(100, 100, 3)\nb64 = D.npy_to_b64(x)\n"})}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(e.h2,{id:"npy_to_b64str",children:"npy_to_b64str"}),"\n",(0,i.jsxs)(e.blockquote,{children:["\n",(0,i.jsx)(e.p,{children:(0,i.jsx)(e.a,{href:"https://github.com/DocsaidLab/DocsaidKit/blob/71170598902b6f8e89a969f1ce27ed4fd05b2ff2/docsaidkit/vision/improc.py#L130",children:"npy_to_b64str(x: np.ndarray, dtype='float32', string_encode: str = 'utf-8') -> str"})}),"\n"]}),"\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsxs)(e.li,{children:["\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.strong,{children:"Description"}),": Convert a NumPy array to a Base64 string."]}),"\n"]}),"\n",(0,i.jsxs)(e.li,{children:["\n",(0,i.jsx)(e.p,{children:(0,i.jsx)(e.strong,{children:"Parameters"})}),"\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsxs)(e.li,{children:[(0,i.jsx)(e.strong,{children:"x"})," (",(0,i.jsx)(e.code,{children:"np.ndarray"}),"): The NumPy array to be converted."]}),"\n",(0,i.jsxs)(e.li,{children:[(0,i.jsx)(e.strong,{children:"dtype"})," (",(0,i.jsx)(e.code,{children:"str"}),"): Data type. Default is ",(0,i.jsx)(e.code,{children:"'float32'"}),"."]}),"\n",(0,i.jsxs)(e.li,{children:[(0,i.jsx)(e.strong,{children:"string_encode"})," (",(0,i.jsx)(e.code,{children:"str"}),"): String encoding. Default is ",(0,i.jsx)(e.code,{children:"'utf-8'"}),"."]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(e.li,{children:["\n",(0,i.jsx)(e.p,{children:(0,i.jsx)(e.strong,{children:"Returns"})}),"\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsxs)(e.li,{children:[(0,i.jsx)(e.strong,{children:"str"}),": The converted Base64 string."]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(e.li,{children:["\n",(0,i.jsx)(e.p,{children:(0,i.jsx)(e.strong,{children:"Example"})}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-python",children:"import docsaidkit as D\nimport numpy as np\n\nx = np.random.rand(100, 100, 3)\n\nb64str = D.npy_to_b64str(x)\n"})}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(e.h2,{id:"img_to_b64str",children:"img_to_b64str"}),"\n",(0,i.jsxs)(e.blockquote,{children:["\n",(0,i.jsx)(e.p,{children:(0,i.jsx)(e.a,{href:"https://github.com/DocsaidLab/DocsaidKit/blob/71170598902b6f8e89a969f1ce27ed4fd05b2ff2/docsaidkit/vision/improc.py#L134",children:"img_to_b64str(img: np.ndarray, IMGTYP: Union[str, int, IMGTYP] = IMGTYP.JPEG, string_encode: str = 'utf-8') -> Union[str, None]"})}),"\n"]}),"\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsxs)(e.li,{children:["\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.strong,{children:"Description"}),": Convert a NumPy image array to a Base64 string."]}),"\n"]}),"\n",(0,i.jsxs)(e.li,{children:["\n",(0,i.jsx)(e.p,{children:(0,i.jsx)(e.strong,{children:"Parameters"})}),"\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsxs)(e.li,{children:[(0,i.jsx)(e.strong,{children:"img"})," (",(0,i.jsx)(e.code,{children:"np.ndarray"}),"): The image array to be converted."]}),"\n",(0,i.jsxs)(e.li,{children:[(0,i.jsx)(e.strong,{children:"IMGTYP"})," (",(0,i.jsx)(e.code,{children:"Union[str, int, IMGTYP]"}),"): The type of the image. Supported types are ",(0,i.jsx)(e.code,{children:"IMGTYP.JPEG"})," and ",(0,i.jsx)(e.code,{children:"IMGTYP.PNG"}),". Default is ",(0,i.jsx)(e.code,{children:"IMGTYP.JPEG"}),"."]}),"\n",(0,i.jsxs)(e.li,{children:[(0,i.jsx)(e.strong,{children:"string_encode"})," (",(0,i.jsx)(e.code,{children:"str"}),"): String encoding. Default is ",(0,i.jsx)(e.code,{children:"'utf-8'"}),"."]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(e.li,{children:["\n",(0,i.jsx)(e.p,{children:(0,i.jsx)(e.strong,{children:"Returns"})}),"\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsxs)(e.li,{children:[(0,i.jsx)(e.strong,{children:"str"}),": The converted Base64 string."]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(e.li,{children:["\n",(0,i.jsx)(e.p,{children:(0,i.jsx)(e.strong,{children:"Example"})}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-python",children:"import docsaidkit as D\n\nimg = D.imread('lena.png')\nb64str = D.img_to_b64str(img, IMGTYP=D.IMGTYP.PNG)\n"})}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(e.h2,{id:"b64_to_img",children:"b64_to_img"}),"\n",(0,i.jsxs)(e.blockquote,{children:["\n",(0,i.jsx)(e.p,{children:(0,i.jsx)(e.a,{href:"https://github.com/DocsaidLab/DocsaidKit/blob/71170598902b6f8e89a969f1ce27ed4fd05b2ff2/docsaidkit/vision/improc.py#L143",children:"b64_to_img(b64: bytes) -> Union[np.ndarray, None]"})}),"\n"]}),"\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsxs)(e.li,{children:["\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.strong,{children:"Description"}),": Convert a Base64 byte string to a NumPy image array."]}),"\n"]}),"\n",(0,i.jsxs)(e.li,{children:["\n",(0,i.jsx)(e.p,{children:(0,i.jsx)(e.strong,{children:"Parameters"})}),"\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsxs)(e.li,{children:[(0,i.jsx)(e.strong,{children:"b64"})," (",(0,i.jsx)(e.code,{children:"bytes"}),"): The Base64 byte string to be converted."]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(e.li,{children:["\n",(0,i.jsx)(e.p,{children:(0,i.jsx)(e.strong,{children:"Returns"})}),"\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsxs)(e.li,{children:[(0,i.jsx)(e.strong,{children:"np.ndarray"}),": The converted NumPy image array."]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(e.li,{children:["\n",(0,i.jsx)(e.p,{children:(0,i.jsx)(e.strong,{children:"Example"})}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-python",children:"import docsaidkit as D\n\nb64 = D.img_to_b64(D.imread('lena.png'))\nimg = D.b64_to_img(b64)\n"})}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(e.h2,{id:"b64str_to_img",children:"b64str_to_img"}),"\n",(0,i.jsxs)(e.blockquote,{children:["\n",(0,i.jsx)(e.p,{children:(0,i.jsx)(e.a,{href:"https://github.com/DocsaidLab/DocsaidKit/blob/71170598902b6f8e89a969f1ce27ed4fd05b2ff2/docsaidkit/vision/improc.py#L151",children:"b64str_to_img(b64str: Union[str, None], string_encode: str = 'utf-8') -> Union[np.ndarray, None]"})}),"\n"]}),"\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsxs)(e.li,{children:["\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.strong,{children:"Description"}),": Convert a Base64 string to a NumPy image array."]}),"\n"]}),"\n",(0,i.jsxs)(e.li,{children:["\n",(0,i.jsx)(e.p,{children:(0,i.jsx)(e.strong,{children:"Parameters"})}),"\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsxs)(e.li,{children:[(0,i.jsx)(e.strong,{children:"b64str"})," (",(0,i.jsx)(e.code,{children:"Union[str, None]"}),"): The Base64 string to be converted."]}),"\n",(0,i.jsxs)(e.li,{children:[(0,i.jsx)(e.strong,{children:"string_encode"})," (",(0,i.jsx)(e.code,{children:"str"}),"): String encoding. Default is ",(0,i.jsx)(e.code,{children:"'utf-8'"}),"."]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(e.li,{children:["\n",(0,i.jsx)(e.p,{children:(0,i.jsx)(e.strong,{children:"Returns"})}),"\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsxs)(e.li,{children:[(0,i.jsx)(e.strong,{children:"np.ndarray"}),": The converted NumPy image array."]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(e.li,{children:["\n",(0,i.jsx)(e.p,{children:(0,i.jsx)(e.strong,{children:"Example"})}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-python",children:"import docsaidkit as D\n\nb64 = D.img_to_b64(D.imread('lena.png'))\nb64str = b64.decode('utf-8')\nimg = D.b64str_to_img(b64str)\n"})}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(e.h2,{id:"b64_to_npy",children:"b64_to_npy"}),"\n",(0,i.jsxs)(e.blockquote,{children:["\n",(0,i.jsx)(e.p,{children:(0,i.jsx)(e.a,{href:"https://github.com/DocsaidLab/DocsaidKit/blob/71170598902b6f8e89a969f1ce27ed4fd05b2ff2/docsaidkit/vision/improc.py#L166",children:"b64_to_npy(x: bytes, dtype='float32') -> np.ndarray"})}),"\n"]}),"\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsxs)(e.li,{children:["\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.strong,{children:"Description"}),": Convert a Base64 byte string to a NumPy array."]}),"\n"]}),"\n",(0,i.jsxs)(e.li,{children:["\n",(0,i.jsx)(e.p,{children:(0,i.jsx)(e.strong,{children:"Parameters"})}),"\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsxs)(e.li,{children:[(0,i.jsx)(e.strong,{children:"x"})," (",(0,i.jsx)(e.code,{children:"bytes"}),"): The Base64 byte string to be converted."]}),"\n",(0,i.jsxs)(e.li,{children:[(0,i.jsx)(e.strong,{children:"dtype"})," (",(0,i.jsx)(e.code,{children:"str"}),"): Data type. Default is ",(0,i.jsx)(e.code,{children:"'float32'"}),"."]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(e.li,{children:["\n",(0,i.jsx)(e.p,{children:(0,i.jsx)(e.strong,{children:"Returns"})}),"\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsxs)(e.li,{children:[(0,i.jsx)(e.strong,{children:"np.ndarray"}),": The converted NumPy array."]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(e.li,{children:["\n",(0,i.jsx)(e.p,{children:(0,i.jsx)(e.strong,{children:"Example"})}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-python",children:"import docsaidkit as D\n\nb64 = D.npy_to_b64(np.random.rand(100, 100, 3))\nx = D.b64_to_npy(b64)\n"})}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(e.h2,{id:"b64str_to_npy",children:"b64str_to_npy"}),"\n",(0,i.jsxs)(e.blockquote,{children:["\n",(0,i.jsx)(e.p,{children:(0,i.jsx)(e.a,{href:"https://github.com/DocsaidLab/DocsaidKit/blob/71170598902b6f8e89a969f1ce27ed4fd05b2ff2/docsaidkit/vision/improc.py#L170",children:"b64str_to_npy(x: bytes, dtype='float32', string_encode: str = 'utf-8') -> np.ndarray"})}),"\n"]}),"\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsxs)(e.li,{children:["\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.strong,{children:"Description"}),": Convert a Base64 string to a NumPy array."]}),"\n"]}),"\n",(0,i.jsxs)(e.li,{children:["\n",(0,i.jsx)(e.p,{children:(0,i.jsx)(e.strong,{children:"Parameters"})}),"\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsxs)(e.li,{children:[(0,i.jsx)(e.strong,{children:"x"})," (",(0,i.jsx)(e.code,{children:"bytes"}),"): The Base64 string to be converted."]}),"\n",(0,i.jsxs)(e.li,{children:[(0,i.jsx)(e.strong,{children:"dtype"})," (",(0,i.jsx)(e.code,{children:"str"}),"): Data type. Default is ",(0,i.jsx)(e.code,{children:"'float32'"}),"."]}),"\n",(0,i.jsxs)(e.li,{children:[(0,i.jsx)(e.strong,{children:"string_encode"})," (",(0,i.jsx)(e.code,{children:"str"}),"): String encoding. Default is ",(0,i.jsx)(e.code,{children:"'utf-8'"}),"."]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(e.li,{children:["\n",(0,i.jsx)(e.p,{children:(0,i.jsx)(e.strong,{children:"Returns"})}),"\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsxs)(e.li,{children:[(0,i.jsx)(e.strong,{children:"np.ndarray"}),": The converted NumPy array."]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(e.li,{children:["\n",(0,i.jsx)(e.p,{children:(0,i.jsx)(e.strong,{children:"Example"})}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-python",children:"import docsaidkit as D\n\nb64 = D.npy_to_b64(np.random.rand(100, 100, 3))\nx = D.b64str_to_npy(b64.decode('utf-8'))\n"})}),"\n"]}),"\n"]})]})}function h(n={}){const{wrapper:e}={...(0,r.R)(),...n.components};return e?(0,i.jsx)(e,{...n,children:(0,i.jsx)(a,{...n})}):a(n)}},28453:(n,e,s)=>{s.d(e,{R:()=>t,x:()=>c});var i=s(96540);const r={},d=i.createContext(r);function t(n){const e=i.useContext(d);return i.useMemo((function(){return"function"==typeof n?n(e):{...e,...n}}),[e,n])}function c(n){let e;return e=n.disableParentContext?"function"==typeof n.components?n.components(r):n.components||r:t(n.components),i.createElement(d.Provider,{value:e},n.children)}}}]);