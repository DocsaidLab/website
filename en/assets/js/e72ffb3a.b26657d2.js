"use strict";(self.webpackChunkdocsaid_website=self.webpackChunkdocsaid_website||[]).push([["71368"],{21729:function(e,n,i){i.r(n),i.d(n,{default:()=>h,frontMatter:()=>t,metadata:()=>s,assets:()=>c,toc:()=>a,contentTitle:()=>d});var s=JSON.parse('{"id":"docsaidkit/funcs/vision/improc/imread","title":"imread","description":"imread(path str = \'BGR\', verbose: bool = False) -> Union[np.ndarray, None]","source":"@site/i18n/en/docusaurus-plugin-content-docs/current/docsaidkit/funcs/vision/improc/imread.md","sourceDirName":"docsaidkit/funcs/vision/improc","slug":"/docsaidkit/funcs/vision/improc/imread","permalink":"/en/docs/docsaidkit/funcs/vision/improc/imread","draft":false,"unlisted":false,"tags":[],"version":"current","lastUpdatedBy":"zephyr-sh","lastUpdatedAt":1713493370000,"sidebarPosition":1,"frontMatter":{"sidebar_position":1},"sidebar":"tutorialSidebar","previous":{"title":"imporc","permalink":"/en/docs/category/imporc-1"},"next":{"title":"imwrite","permalink":"/en/docs/docsaidkit/funcs/vision/improc/imwrite"}}'),r=i("85893"),o=i("50065");let t={sidebar_position:1},d="imread",c={},a=[];function l(e){let n={a:"a",blockquote:"blockquote",code:"code",h1:"h1",header:"header",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,o.a)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.header,{children:(0,r.jsx)(n.h1,{id:"imread",children:"imread"})}),"\n",(0,r.jsxs)(n.blockquote,{children:["\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.a,{href:"https://github.com/DocsaidLab/DocsaidKit/blob/012540eebaebb2718987dd3ec0f7dcf40f403caa/docsaidkit/vision/improc.py#L197C1-L242C15",children:"imread(path: Union[str, Path], color_base: str = 'BGR', verbose: bool = False) -> Union[np.ndarray, None]"})}),"\n"]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Description"}),": Read an image based on different image formats using different methods. Supported formats and methods are as follows:"]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:".heic"}),": Read using ",(0,r.jsx)(n.code,{children:"read_heic_to_numpy"})," and convert to ",(0,r.jsx)(n.code,{children:"BGR"})," format."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:".jpg"}),": Read using ",(0,r.jsx)(n.code,{children:"jpgread"})," and convert to ",(0,r.jsx)(n.code,{children:"BGR"})," format."]}),"\n",(0,r.jsxs)(n.li,{children:["Other formats: Read using ",(0,r.jsx)(n.code,{children:"cv2.imread"})," and convert to ",(0,r.jsx)(n.code,{children:"BGR"})," format."]}),"\n",(0,r.jsxs)(n.li,{children:["If ",(0,r.jsx)(n.code,{children:"jpgread"})," returns ",(0,r.jsx)(n.code,{children:"None"}),", fall back to using ",(0,r.jsx)(n.code,{children:"cv2.imread"}),"."]}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Parameters"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"path"})," (",(0,r.jsx)(n.code,{children:"Union[str, Path]"}),"): The path of the image to be read."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"color_base"})," (",(0,r.jsx)(n.code,{children:"str"}),"): The color space of the image. If not ",(0,r.jsx)(n.code,{children:"BGR"}),", conversion will be done using the ",(0,r.jsx)(n.code,{children:"imcvtcolor"})," function. Default is ",(0,r.jsx)(n.code,{children:"BGR"}),"."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"verbose"})," (",(0,r.jsx)(n.code,{children:"bool"}),"): If set to True, a warning will be issued when the read image is None. Default is False."]}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Returns"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"np.ndarray"}),": Returns the numpy ndarray of the image if successful, otherwise returns None."]}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Example"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-python",children:"import docsaidkit as D\n\nimg = D.imread('lena.png')\n"})}),"\n"]}),"\n"]})]})}function h(e={}){let{wrapper:n}={...(0,o.a)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(l,{...e})}):l(e)}},50065:function(e,n,i){i.d(n,{Z:function(){return d},a:function(){return t}});var s=i(67294);let r={},o=s.createContext(r);function t(e){let n=s.useContext(o);return s.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function d(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:t(e.components),s.createElement(o.Provider,{value:n},e.children)}}}]);